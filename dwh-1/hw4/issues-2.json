[
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11719",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11719/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11719/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11719/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11719",
    "id": 639993527,
    "node_id": "MDU6SXNzdWU2Mzk5OTM1Mjc=",
    "number": 11719,
    "title": "Add support for inline query optimizer hints",
    "user": {
      "login": "siradjev",
      "id": 10959667,
      "node_id": "MDQ6VXNlcjEwOTU5NjY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10959667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/siradjev",
      "html_url": "https://github.com/siradjev",
      "followers_url": "https://api.github.com/users/siradjev/followers",
      "following_url": "https://api.github.com/users/siradjev/following{/other_user}",
      "gists_url": "https://api.github.com/users/siradjev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/siradjev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/siradjev/subscriptions",
      "organizations_url": "https://api.github.com/users/siradjev/orgs",
      "repos_url": "https://api.github.com/users/siradjev/repos",
      "events_url": "https://api.github.com/users/siradjev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/siradjev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 1507886722,
        "node_id": "MDU6TGFiZWwxNTA3ODg2NzIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-discussion",
        "name": "st-discussion",
        "color": "e5b890",
        "default": false,
        "description": "The story requires discussion /research / expert help / design & decomposition before will be taken"
      },
      {
        "id": 1507867504,
        "node_id": "MDU6TGFiZWwxNTA3ODY3NTA0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-hold",
        "name": "st-hold",
        "color": "e5b890",
        "default": false,
        "description": "We've paused the work on issue for some reason"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-16T21:48:39Z",
    "updated_at": "2020-06-19T05:11:16Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Use case**\r\nHints is quite popular method of traditional DBs of tweaking particular queries or hardcoding specific behavior (e.g. full scan vs index scan, pushing predicates, merging views, transformation, force execute on coordinator). \r\nMany of those are implemented as session parameters in clickhouse, however there are frequently cases when it is not possible to use them:\r\n- multi-statement cannot be passthrough across multiple \"hops\" one of them is stateless (app->clickhouse-proxy->clickhouse )\r\n- session is not supported in driver\r\n- application users can only submit query or part of queries\r\n- BI-tool imposing specific limitations\r\n\r\n**Describe the solution you'd like**\r\nSimplest way is to allow special syntax inside comments with special character ('+') after the first keyword (similar to Oracle, Vertica, other clones of those). \r\n\r\n```\r\nselect /*+ max_thread=1 max_block_size=100 */ * from system.parts; -- could be space delimited as comma can be in value of parameter\r\n\r\ninsert /*+ max_insert_threads=4 min_insert_block_size_rows=2000 max_thread=16 max_block_size=100 */ into test_parts \r\nselect * from system.parts; -- could be space delimited as comma can be in value of parameter\r\n```\r\n\r\n\r\nAnother way could be to use special syntax, but that would impact SQL compliance, e.g. OPTION keyword for MSSQL (https://docs.microsoft.com/en-us/sql/t-sql/queries/option-clause-transact-sql?view=sql-server-ver15). I'd rather use this reference as example of how NOT to do it. \r\n\r\n**Describe alternatives you've considered**\r\nThere are no real alternatives to this solution except usage of session variables, but that's not true alternative, rather a workaround and not a complete one. \r\n\r\n**Additional context**\r\nUsing hints open the way to allow users optimizing below use cases with further improvements:\r\n- Forcing more than one level of queries to run on distributed nodes. Example, typically \"argMax-style\" additional subquery is used to make sure latest data is used with ReplacingMergeTrees to avoid using FINAL. Current use of this pattern forces nearly raw data to be sent to coordinator for processing. By using /*+ run_distributed=1 */ in this subquery it could be forced to run on shard and then sending reduced data set to coordinator. \r\n- Playing with individual thread counts, memory limitations, block-size on each level of subquery\r\n- Forcing hash-joins vs merge-joins on specific table pairs\r\n- Force index usage on specific subquery\r\n- Prohibit moving certain conditions/conditions on certain fields to prewhere (https://t.me/clickhouse_ru/11343)\r\n- Custom \"help\" to optimizer through using of cardinality hints (https://oracle.readthedocs.io/en/latest/sql/hints/types/miscellaneous.html) or likely/unlikely hints on conditions (https://docs.omnisci.com/latest/5_dml.html#likely-unlikely)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11714",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11714/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11714/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11714/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11714",
    "id": 639900454,
    "node_id": "MDU6SXNzdWU2Mzk5MDA0NTQ=",
    "number": 11714,
    "title": "Asynchronous metrics on data volume",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 644208617,
        "node_id": "MDU6TGFiZWw2NDQyMDg2MTc=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task",
        "name": "easy task",
        "color": "0e8a16",
        "default": false,
        "description": ""
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T18:54:46Z",
    "updated_at": "2020-06-16T18:54:46Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We can add metrics on total amount of rows and bytes in MergeTree tables.\r\nIt involves lock of data parts and iteration over all of them. We can make it more efficient by maintaining additional variable with that value."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11712/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11712",
    "id": 639831872,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1MzUxMzUz",
    "number": 11712,
    "title": "Distinct in order optimization",
    "user": {
      "login": "dimarub2000",
      "id": 43433094,
      "node_id": "MDQ6VXNlcjQzNDMzMDk0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/43433094?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dimarub2000",
      "html_url": "https://github.com/dimarub2000",
      "followers_url": "https://api.github.com/users/dimarub2000/followers",
      "following_url": "https://api.github.com/users/dimarub2000/following{/other_user}",
      "gists_url": "https://api.github.com/users/dimarub2000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dimarub2000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dimarub2000/subscriptions",
      "organizations_url": "https://api.github.com/users/dimarub2000/orgs",
      "repos_url": "https://api.github.com/users/dimarub2000/repos",
      "events_url": "https://api.github.com/users/dimarub2000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dimarub2000/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1309683578,
        "node_id": "MDU6TGFiZWwxMzA5NjgzNTc4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance",
        "name": "pr-performance",
        "color": "007700",
        "default": false,
        "description": "Pull request with some performance improvements"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "CurtizJ",
      "id": 20361854,
      "node_id": "MDQ6VXNlcjIwMzYxODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20361854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CurtizJ",
      "html_url": "https://github.com/CurtizJ",
      "followers_url": "https://api.github.com/users/CurtizJ/followers",
      "following_url": "https://api.github.com/users/CurtizJ/following{/other_user}",
      "gists_url": "https://api.github.com/users/CurtizJ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CurtizJ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CurtizJ/subscriptions",
      "organizations_url": "https://api.github.com/users/CurtizJ/orgs",
      "repos_url": "https://api.github.com/users/CurtizJ/repos",
      "events_url": "https://api.github.com/users/CurtizJ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CurtizJ/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "CurtizJ",
        "id": 20361854,
        "node_id": "MDQ6VXNlcjIwMzYxODU0",
        "avatar_url": "https://avatars0.githubusercontent.com/u/20361854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CurtizJ",
        "html_url": "https://github.com/CurtizJ",
        "followers_url": "https://api.github.com/users/CurtizJ/followers",
        "following_url": "https://api.github.com/users/CurtizJ/following{/other_user}",
        "gists_url": "https://api.github.com/users/CurtizJ/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CurtizJ/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CurtizJ/subscriptions",
        "organizations_url": "https://api.github.com/users/CurtizJ/orgs",
        "repos_url": "https://api.github.com/users/CurtizJ/repos",
        "events_url": "https://api.github.com/users/CurtizJ/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CurtizJ/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T17:03:06Z",
    "updated_at": "2020-06-16T19:41:17Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11712",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11712",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11712.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11712.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Performance Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nDistinct containing primary key columns is now optimized.\r\n\r\nDetailed description / Documentation draft:\r\nTBA"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11710",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11710/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11710/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11710/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11710",
    "id": 639731520,
    "node_id": "MDU6SXNzdWU2Mzk3MzE1MjA=",
    "number": 11710,
    "title": "Consider implementing ILIKE operator",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 628291301,
        "node_id": "MDU6TGFiZWw2MjgyOTEzMDE=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/sql-compatibility",
        "name": "sql-compatibility",
        "color": "006b75",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-16T14:50:35Z",
    "updated_at": "2020-06-17T07:31:00Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Case insensitive variant of LIKE.\r\nIt should respect UTF-8 and work similar to `positionCaseInsensitiveUTF8`.\r\n\r\nIt is not in SQL standard but people who work with Postgres will appreciate that."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11709",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11709/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11709/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11709/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11709",
    "id": 639664890,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1MjEzNjY1",
    "number": 11709,
    "title": "Optimize monotonous order by",
    "user": {
      "login": "demo-99",
      "id": 50805089,
      "node_id": "MDQ6VXNlcjUwODA1MDg5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/50805089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/demo-99",
      "html_url": "https://github.com/demo-99",
      "followers_url": "https://api.github.com/users/demo-99/followers",
      "following_url": "https://api.github.com/users/demo-99/following{/other_user}",
      "gists_url": "https://api.github.com/users/demo-99/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/demo-99/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/demo-99/subscriptions",
      "organizations_url": "https://api.github.com/users/demo-99/orgs",
      "repos_url": "https://api.github.com/users/demo-99/repos",
      "events_url": "https://api.github.com/users/demo-99/events{/privacy}",
      "received_events_url": "https://api.github.com/users/demo-99/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1077827669,
        "node_id": "MDU6TGFiZWwxMDc3ODI3NjY5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested",
        "name": "can be tested",
        "color": "4b07ea",
        "default": false,
        "description": "Can run CI checks on this external PR"
      },
      {
        "id": 1309683578,
        "node_id": "MDU6TGFiZWwxMzA5NjgzNTc4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance",
        "name": "pr-performance",
        "color": "007700",
        "default": false,
        "description": "Pull request with some performance improvements"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "4ertus2",
        "id": 8061274,
        "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/4ertus2",
        "html_url": "https://github.com/4ertus2",
        "followers_url": "https://api.github.com/users/4ertus2/followers",
        "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
        "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
        "organizations_url": "https://api.github.com/users/4ertus2/orgs",
        "repos_url": "https://api.github.com/users/4ertus2/repos",
        "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/4ertus2/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T13:27:53Z",
    "updated_at": "2020-06-23T13:06:08Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11709",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11709",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11709.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11709.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n\r\n- Performance Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nThis feature replaces monotonous functions with its argument.\r\n\r\nDetailed description / Documentation draft:\r\n\r\nOptimization works only for functions of one variable and based on Monotonicity of FunctionBase."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11707/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11707",
    "id": 639615631,
    "node_id": "MDU6SXNzdWU2Mzk2MTU2MzE=",
    "number": 11707,
    "title": "GROUP BY push down optimization",
    "user": {
      "login": "KochetovNicolai",
      "id": 4092911,
      "node_id": "MDQ6VXNlcjQwOTI5MTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4092911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KochetovNicolai",
      "html_url": "https://github.com/KochetovNicolai",
      "followers_url": "https://api.github.com/users/KochetovNicolai/followers",
      "following_url": "https://api.github.com/users/KochetovNicolai/following{/other_user}",
      "gists_url": "https://api.github.com/users/KochetovNicolai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KochetovNicolai/subscriptions",
      "organizations_url": "https://api.github.com/users/KochetovNicolai/orgs",
      "repos_url": "https://api.github.com/users/KochetovNicolai/repos",
      "events_url": "https://api.github.com/users/KochetovNicolai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KochetovNicolai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "KochetovNicolai",
      "id": 4092911,
      "node_id": "MDQ6VXNlcjQwOTI5MTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4092911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KochetovNicolai",
      "html_url": "https://github.com/KochetovNicolai",
      "followers_url": "https://api.github.com/users/KochetovNicolai/followers",
      "following_url": "https://api.github.com/users/KochetovNicolai/following{/other_user}",
      "gists_url": "https://api.github.com/users/KochetovNicolai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KochetovNicolai/subscriptions",
      "organizations_url": "https://api.github.com/users/KochetovNicolai/orgs",
      "repos_url": "https://api.github.com/users/KochetovNicolai/repos",
      "events_url": "https://api.github.com/users/KochetovNicolai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KochetovNicolai/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "KochetovNicolai",
        "id": 4092911,
        "node_id": "MDQ6VXNlcjQwOTI5MTE=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/4092911?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KochetovNicolai",
        "html_url": "https://github.com/KochetovNicolai",
        "followers_url": "https://api.github.com/users/KochetovNicolai/followers",
        "following_url": "https://api.github.com/users/KochetovNicolai/following{/other_user}",
        "gists_url": "https://api.github.com/users/KochetovNicolai/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KochetovNicolai/subscriptions",
        "organizations_url": "https://api.github.com/users/KochetovNicolai/orgs",
        "repos_url": "https://api.github.com/users/KochetovNicolai/repos",
        "events_url": "https://api.github.com/users/KochetovNicolai/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KochetovNicolai/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T12:13:31Z",
    "updated_at": "2020-06-16T12:13:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "With UNION:\r\n```sql\r\nselect \r\n  x, sum(y)\r\nfrom (\r\n  select x, y\r\n  from t1\r\n  union all\r\n  select x, y\r\n  from t2\r\n)\r\ngroup by x\r\n```\r\nWith ARRAY JOIN \r\n```sql\r\nselect x, sum(y)\r\nfrom (\r\n  select x, yArr\r\n  from t\r\n  array join yArrArr as yArr\r\n)\r\narray join yArr as y\r\ngroup by x\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11700/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11700",
    "id": 639452310,
    "node_id": "MDU6SXNzdWU2Mzk0NTIzMTA=",
    "number": 11700,
    "title": "bloom filter as aggregate function",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T07:53:56Z",
    "updated_at": "2020-06-16T07:53:56Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "Use cases:\r\n1) creating index-like MV in clickhouse (more complicated than skipping indexes, with needed groupings)\r\n2) creating index for offline data (data stored outside of ClickHouse, on external storages etc.)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11699",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11699/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11699/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11699/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11699",
    "id": 639442719,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1MDMxMzkw",
    "number": 11699,
    "title": "20.3 with simd tokenization and extract all groups",
    "user": {
      "login": "Enmk",
      "id": 1110183,
      "node_id": "MDQ6VXNlcjExMTAxODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1110183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Enmk",
      "html_url": "https://github.com/Enmk",
      "followers_url": "https://api.github.com/users/Enmk/followers",
      "following_url": "https://api.github.com/users/Enmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/Enmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Enmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Enmk/subscriptions",
      "organizations_url": "https://api.github.com/users/Enmk/orgs",
      "repos_url": "https://api.github.com/users/Enmk/repos",
      "events_url": "https://api.github.com/users/Enmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Enmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1876999755,
        "node_id": "MDU6TGFiZWwxODc2OTk5NzU1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog",
        "name": "pr-not-for-changelog",
        "color": "007700",
        "default": false,
        "description": "This PR should not be mentioned in the changelog"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T07:37:58Z",
    "updated_at": "2020-06-20T12:23:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11699",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11699",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11699.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11699.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11698/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11698",
    "id": 639413044,
    "node_id": "MDU6SXNzdWU2Mzk0MTMwNDQ=",
    "number": 11698,
    "title": "groupArray cpu utilization rate is low",
    "user": {
      "login": "melin",
      "id": 1145830,
      "node_id": "MDQ6VXNlcjExNDU4MzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1145830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/melin",
      "html_url": "https://github.com/melin",
      "followers_url": "https://api.github.com/users/melin/followers",
      "following_url": "https://api.github.com/users/melin/following{/other_user}",
      "gists_url": "https://api.github.com/users/melin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/melin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/melin/subscriptions",
      "organizations_url": "https://api.github.com/users/melin/orgs",
      "repos_url": "https://api.github.com/users/melin/repos",
      "events_url": "https://api.github.com/users/melin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/melin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 756395244,
        "node_id": "MDU6TGFiZWw3NTYzOTUyNDQ=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance",
        "name": "performance",
        "color": "c2e0c6",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T06:43:19Z",
    "updated_at": "2020-06-16T13:10:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```sql\r\nCREATE TABLE feature.tdl_f_r_128_split_0_device_id\r\nENGINE = MergeTree()\r\nPRIMARY KEY token_id\r\nORDER BY token_id AS\r\nSELECT\r\n    tuple.1 AS token_id,\r\n    device_id AS device_id,\r\n    tuple.2 AS time_time,\r\n    tuple.3 AS time_date,\r\n    tuple.4 AS gps_longitude,\r\n    tuple.5 AS active_time,\r\n    tuple.6 AS gps_latitude,\r\n    tuple.7 AS android_id,\r\n    groupData AS groupData\r\nFROM\r\n(\r\n    SELECT\r\n        device_id,\r\n        arr AS tuple,\r\n        groupData\r\n    FROM\r\n    (\r\n        SELECT\r\n            deviceid AS device_id,\r\n            groupArray((tokenid, toUnixTimestamp(time), substring(toString(time), 1, 10), gps_longitude, activetime, gps_latitude, androidid)) AS groupData\r\n        FROM datainsight.test_fp_info\r\n        WHERE (deviceid != 'null') AND (deviceid != '') AND (isNull(deviceid) = 0)\r\n        GROUP BY deviceid\r\n    )\r\n    LEFT ARRAY JOIN groupData AS arr\r\n)\r\n```\r\n\r\n> max_thread = 24, clickhouse version=20.4.4，cpu=24c, memory=110G。\r\n\r\n> datainsight.test_fp_info table data 85 million, exec time: 2880s\r\n\r\nDuring the run, there are only two or three cpu working\r\n![image](https://user-images.githubusercontent.com/1145830/84740284-b061f900-afdf-11ea-830f-68645eb3080f.png)\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11696",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11696/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11696/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11696/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11696",
    "id": 639318207,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0OTMxOTYy",
    "number": 11696,
    "title": "Try to simplify and improve performace of reading in order of sorting key.",
    "user": {
      "login": "CurtizJ",
      "id": 20361854,
      "node_id": "MDQ6VXNlcjIwMzYxODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20361854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CurtizJ",
      "html_url": "https://github.com/CurtizJ",
      "followers_url": "https://api.github.com/users/CurtizJ/followers",
      "following_url": "https://api.github.com/users/CurtizJ/following{/other_user}",
      "gists_url": "https://api.github.com/users/CurtizJ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CurtizJ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CurtizJ/subscriptions",
      "organizations_url": "https://api.github.com/users/CurtizJ/orgs",
      "repos_url": "https://api.github.com/users/CurtizJ/repos",
      "events_url": "https://api.github.com/users/CurtizJ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CurtizJ/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304141686,
        "node_id": "MDU6TGFiZWwxMzA0MTQxNjg2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement",
        "name": "pr-improvement",
        "color": "007700",
        "default": false,
        "description": "Pull request with some product improvements"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-16T02:18:30Z",
    "updated_at": "2020-06-19T10:08:07Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11696",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11696",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11696.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11696.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nImproved performace of 'ORDER BY' and 'GROUP BY' by prefix of sorting key.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11684",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11684/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11684/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11684/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11684",
    "id": 639069824,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0NzE2ODk2",
    "number": 11684,
    "title": "Don't ignore duplicate parts written to replicas",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304141686,
        "node_id": "MDU6TGFiZWwxMzA0MTQxNjg2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement",
        "name": "pr-improvement",
        "color": "007700",
        "default": false,
        "description": "Pull request with some product improvements"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-15T19:00:24Z",
    "updated_at": "2020-06-21T22:54:14Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11684",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11684",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11684.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11684.patch"
    },
    "body": "Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nWhen duplicate block is written to replica where it does not exist locally (has not been fetched from replicas), don't ignore it and write locally to achieve the same effect as if it was successfully replicated."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11678/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11678",
    "id": 638792904,
    "node_id": "MDU6SXNzdWU2Mzg3OTI5MDQ=",
    "number": 11678,
    "title": "Using `path` and disk's path causing problems",
    "user": {
      "login": "fr05t1k",
      "id": 2131624,
      "node_id": "MDQ6VXNlcjIxMzE2MjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2131624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fr05t1k",
      "html_url": "https://github.com/fr05t1k",
      "followers_url": "https://api.github.com/users/fr05t1k/followers",
      "following_url": "https://api.github.com/users/fr05t1k/following{/other_user}",
      "gists_url": "https://api.github.com/users/fr05t1k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fr05t1k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fr05t1k/subscriptions",
      "organizations_url": "https://api.github.com/users/fr05t1k/orgs",
      "repos_url": "https://api.github.com/users/fr05t1k/repos",
      "events_url": "https://api.github.com/users/fr05t1k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fr05t1k/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1634815111,
        "node_id": "MDU6TGFiZWwxNjM0ODE1MTEx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-multidisk",
        "name": "comp-multidisk",
        "color": "b5bcff",
        "default": false,
        "description": "Storages & policies"
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 845247686,
        "node_id": "MDU6TGFiZWw4NDUyNDc2ODY=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability",
        "name": "usability",
        "color": "ebf28c",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-15T11:57:13Z",
    "updated_at": "2020-06-16T07:49:15Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Use case**\r\n```\r\n    <storage_configuration>\r\n        <disks>\r\n            <disk_hdd>\r\n                <path>/var/lib/clickhouse-hdd/</path>\r\n            </disk_hdd>\r\n            <disk_ssd>\r\n                <path>/var/lib/clickhouse-ssd/</path>\r\n            </disk_ssd>\r\n        </disks>\r\n        <policies>\r\n            <moving_to_ssd>\r\n                <volumes>\r\n                    <hot>\r\n                        <disk>disk_ssd</disk>\r\n                    </hot>\r\n                    <cold>\r\n                        <disk>disk_hdd</disk>\r\n                    </cold>\r\n                </volumes>\r\n                <move_factor>0.2</move_factor>\r\n            </moving_to_ssd>\r\n        </policies>\r\n    </storage_configuration>\r\n    <!-- Path to data directory, with trailing slash. -->\r\n    <path>/var/lib/clickhouse-hdd/</path>\r\n```\r\nIf we use such a configuration it will produce an error:\r\n```\r\n2020.06.15 05:54:59.867745 [ 195173 ] {} <Error> Application: DB::Exception: Part `201811_0_2998_6` was found on disk `default` which is not defined in the storage policy: Cannot attach table `default`.`clicks` from metadata file\r\n```\r\n\r\nBecause CH checks `/var/lib/clickhouse-hdd/data/default/clicks/` and CH thinks that this part is located on `default` disk, but storage policy doesn't have `default` disk.\r\n\r\n**Describe the solution you'd like**\r\nIt's better to check that multiple disks has a same path and don't start server because of bad configuration."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11672",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11672/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11672/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11672/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11672",
    "id": 638585736,
    "node_id": "MDU6SXNzdWU2Mzg1ODU3MzY=",
    "number": 11672,
    "title": "Filtering JOIN query throws supertype error (20.3/20.4)",
    "user": {
      "login": "vanzi",
      "id": 416521,
      "node_id": "MDQ6VXNlcjQxNjUyMQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/416521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vanzi",
      "html_url": "https://github.com/vanzi",
      "followers_url": "https://api.github.com/users/vanzi/followers",
      "following_url": "https://api.github.com/users/vanzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/vanzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vanzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vanzi/subscriptions",
      "organizations_url": "https://api.github.com/users/vanzi/orgs",
      "repos_url": "https://api.github.com/users/vanzi/repos",
      "events_url": "https://api.github.com/users/vanzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vanzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1907525265,
        "node_id": "MDU6TGFiZWwxOTA3NTI1MjY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected",
        "name": "v20.3-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.3"
      },
      {
        "id": 2070999159,
        "node_id": "MDU6TGFiZWwyMDcwOTk5MTU5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.4-affected",
        "name": "v20.4-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.4"
      },
      {
        "id": 2132806078,
        "node_id": "MDU6TGFiZWwyMTMyODA2MDc4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.5-affected",
        "name": "v20.5-affected",
        "color": "8236aa",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "4ertus2",
        "id": 8061274,
        "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/4ertus2",
        "html_url": "https://github.com/4ertus2",
        "followers_url": "https://api.github.com/users/4ertus2/followers",
        "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
        "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
        "organizations_url": "https://api.github.com/users/4ertus2/orgs",
        "repos_url": "https://api.github.com/users/4ertus2/repos",
        "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/4ertus2/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-15T06:35:41Z",
    "updated_at": "2020-06-16T15:33:18Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\n\r\nAnother issue that showed up after upgrading ClickHouse from **19.6.2.11** to **20.3.10.75**, filtering a JOIN query with more than one expression with a single date value throws an unexpected error.\r\n\r\n**How to reproduce**\r\n* Which ClickHouse server version to use\r\n\r\n20.3.10.75, confirmed also on 20.4.3.16\r\n\r\n* Which interface to use, if matters\r\n\r\nnative client\r\n\r\n* Non-default settings, if any\r\n\r\nno\r\n\r\n* `CREATE TABLE` statements for all tables involved\r\n\r\n```sql\r\nCREATE TABLE foo (server_date Date, server_time Datetime, dimension_1 String) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);\r\nCREATE TABLE bar (server_date Date, dimension_1 String) ENGINE = MergeTree() PARTITION BY toYYYYMM(server_date) ORDER BY (server_date);\r\n```\r\n\r\n* Sample data for all these tables, use [clickhouse-obfuscator](https://github.com/ClickHouse/ClickHouse/blob/master/programs/obfuscator/Obfuscator.cpp#L42-L80) if necessary\r\n\r\n```sql\r\nINSERT INTO foo VALUES ('2020-01-01', '2020-01-01 12:00:00', 'test1'), ('2020-01-01', '2020-01-01 13:00:00', 'test2');\r\nINSERT INTO bar VALUES ('2020-01-01', 'test2'), ('2020-01-01', 'test3');\r\n```\r\n\r\n* Queries to run that lead to unexpected result\r\n\r\n```sql\r\nSELECT count()\r\nFROM foo ANY INNER JOIN bar USING (dimension_1)\r\nWHERE (foo.server_date <= '2020-11-07') AND (toDate(foo.server_time, 'Asia/Yekaterinburg') <= '2020-11-07');\r\n```\r\n\r\n**Expected behavior**\r\n\r\nExpected result from 19.6.2.11:\r\n```sql\r\n┌─count()─┐\r\n│       1 │\r\n└─────────┘\r\n\r\n1 rows in set. Elapsed: 0.007 sec.\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```sql\r\nReceived exception from server (version 20.3.10):\r\nCode: 386. DB::Exception: Received from clickhouse:9000. DB::Exception: There is no supertype for types Date, String because some of them are String/FixedString and some of them are not. \r\n\r\n0 rows in set. Elapsed: 0.003 sec.\r\n```\r\n\r\n**Additional context**\r\n\r\nRemoving either one of the two conditions makes the query work. Changing the date to any other in the second condition also makes it work. It also works fine in queries without JOIN."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11666",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11666/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11666/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11666/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11666",
    "id": 638424209,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MTk3NjEx",
    "number": 11666,
    "title": "MaskedvByte codec",
    "user": {
      "login": "vfalchikova",
      "id": 59914498,
      "node_id": "MDQ6VXNlcjU5OTE0NDk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/59914498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vfalchikova",
      "html_url": "https://github.com/vfalchikova",
      "followers_url": "https://api.github.com/users/vfalchikova/followers",
      "following_url": "https://api.github.com/users/vfalchikova/following{/other_user}",
      "gists_url": "https://api.github.com/users/vfalchikova/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vfalchikova/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vfalchikova/subscriptions",
      "organizations_url": "https://api.github.com/users/vfalchikova/orgs",
      "repos_url": "https://api.github.com/users/vfalchikova/repos",
      "events_url": "https://api.github.com/users/vfalchikova/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vfalchikova/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1077827669,
        "node_id": "MDU6TGFiZWwxMDc3ODI3NjY5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested",
        "name": "can be tested",
        "color": "4b07ea",
        "default": false,
        "description": "Can run CI checks on this external PR"
      },
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-14T20:26:56Z",
    "updated_at": "2020-06-28T18:54:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11666",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11666",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11666.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11666.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n... TODO\r\n\r\n\r\nDetailed description / Documentation draft:\r\n... TODO"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11662",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11662/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11662/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11662/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11662",
    "id": 638376893,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MTYzMDAw",
    "number": 11662,
    "title": "Add ORCBlockOutputFormat",
    "user": {
      "login": "Avogar",
      "id": 48961922,
      "node_id": "MDQ6VXNlcjQ4OTYxOTIy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/48961922?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Avogar",
      "html_url": "https://github.com/Avogar",
      "followers_url": "https://api.github.com/users/Avogar/followers",
      "following_url": "https://api.github.com/users/Avogar/following{/other_user}",
      "gists_url": "https://api.github.com/users/Avogar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Avogar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Avogar/subscriptions",
      "organizations_url": "https://api.github.com/users/Avogar/orgs",
      "repos_url": "https://api.github.com/users/Avogar/repos",
      "events_url": "https://api.github.com/users/Avogar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Avogar/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1077827669,
        "node_id": "MDU6TGFiZWwxMDc3ODI3NjY5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested",
        "name": "can be tested",
        "color": "4b07ea",
        "default": false,
        "description": "Can run CI checks on this external PR"
      },
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "nikitamikhaylov",
      "id": 25705399,
      "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitamikhaylov",
      "html_url": "https://github.com/nikitamikhaylov",
      "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
      "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
      "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
      "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "nikitamikhaylov",
        "id": 25705399,
        "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nikitamikhaylov",
        "html_url": "https://github.com/nikitamikhaylov",
        "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
        "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
        "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
        "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
        "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
        "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-14T15:44:14Z",
    "updated_at": "2020-06-28T16:50:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11662",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11662",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11662.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11662.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd ORCBlockOutputFormat\r\n\r\nDetailed description / Documentation draft:\r\n### ORC output format\r\nThis output format writes data in orc format.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11643",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11643/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11643/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11643/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11643",
    "id": 638168740,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MDExMTYw",
    "number": 11643,
    "title": "A new feature which is functioning like \"window function\" in SQL.",
    "user": {
      "login": "achimbab",
      "id": 36371084,
      "node_id": "MDQ6VXNlcjM2MzcxMDg0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/36371084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achimbab",
      "html_url": "https://github.com/achimbab",
      "followers_url": "https://api.github.com/users/achimbab/followers",
      "following_url": "https://api.github.com/users/achimbab/following{/other_user}",
      "gists_url": "https://api.github.com/users/achimbab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achimbab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achimbab/subscriptions",
      "organizations_url": "https://api.github.com/users/achimbab/orgs",
      "repos_url": "https://api.github.com/users/achimbab/repos",
      "events_url": "https://api.github.com/users/achimbab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achimbab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1077827669,
        "node_id": "MDU6TGFiZWwxMDc3ODI3NjY5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested",
        "name": "can be tested",
        "color": "4b07ea",
        "default": false,
        "description": "Can run CI checks on this external PR"
      },
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-13T14:11:12Z",
    "updated_at": "2020-06-17T05:50:33Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11643",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11643",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11643.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11643.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n\r\nA new feature which is functioning like `window function` in SQL.\r\n\r\n\r\nDetailed description / Documentation draft:\r\n\r\nI am using ClickHouse very well. It is very fast and durable OLAP Database.\r\n\r\nRecently, I got a new need for a feature like `window function`. So I added new feature `early window function`.\r\n\r\nIt operates like `window function` in SQL, but the difference is that it operates before the aggregation and results of `early window function` can be used in the aggregation.\r\n\r\nFor more detailed explanation, I wrote an example.\r\n\r\n```SQL\r\nSELECT *\r\nFROM early_window_test\r\nWHERE id = 'a'\r\nORDER BY dt ASC\r\n\r\n┌──────────────────dt─┬─id─┬─v─┐\r\n│ 1970-01-01 09:00:01 │ a  │ 1 │\r\n│ 1970-01-01 09:00:02 │ a  │ 2 │\r\n│ 1970-01-01 09:00:03 │ a  │ 3 │\r\n└─────────────────────┴────┴───┘\r\n```\r\n\r\nI will use a function of `early window function` to get the last value sorted by `dt` and partitioned by `id`.\r\n\r\n```SQL\r\nSELECT\r\n    *,\r\n    windowLast(dt, v, id)\r\nFROM early_window_test\r\nWHERE id = 'a'\r\nORDER BY dt ASC\r\n\r\n┌──────────────────dt─┬─id─┬─v─┬─windowLast(dt, v, id)─┐\r\n│ 1970-01-01 09:00:01 │ a  │ 1 │                     3 │\r\n│ 1970-01-01 09:00:02 │ a  │ 2 │                     3 │\r\n│ 1970-01-01 09:00:03 │ a  │ 3 │                     3 │\r\n└─────────────────────┴────┴───┴───────────────────────┘\r\n```\r\n\r\nThe `early window function` behaves like `window function`, but it is executed before a step of aggregation. So, the result of `early window function` can be used by `group by`.\r\n\r\n```SQL\r\nSELECT\r\n    *,\r\n    windowLast(dt, v, id)\r\nFROM early_window_test\r\nORDER BY\r\n    id ASC,\r\n    dt ASC\r\n\r\n┌──────────────────dt─┬─id─┬──v─┬─windowLast(dt, v, id)─┐\r\n│ 1970-01-01 09:00:01 │ A  │ 10 │                    30 │\r\n│ 1970-01-01 09:00:02 │ A  │ 20 │                    30 │\r\n│ 1970-01-01 09:00:03 │ A  │ 30 │                    30 │\r\n│ 1970-01-01 09:00:01 │ B  │ 10 │                    30 │\r\n│ 1970-01-01 09:00:02 │ B  │ 20 │                    30 │\r\n│ 1970-01-01 09:00:03 │ B  │ 30 │                    30 │\r\n│ 1970-01-01 09:00:01 │ a  │  1 │                     3 │\r\n│ 1970-01-01 09:00:02 │ a  │  2 │                     3 │\r\n│ 1970-01-01 09:00:03 │ a  │  3 │                     3 │\r\n│ 1970-01-01 09:00:01 │ b  │  3 │                     1 │\r\n│ 1970-01-01 09:00:02 │ b  │  2 │                     1 │\r\n│ 1970-01-01 09:00:03 │ b  │  1 │                     1 │\r\n└─────────────────────┴────┴────┴───────────────────────┘\r\n\r\nSELECT\r\n    windowLast(dt, v, id) AS last,\r\n    count()\r\nFROM early_window_test\r\nGROUP BY last\r\n\r\n┌─last─┬─count()─┐\r\n│    3 │       3 │\r\n│   30 │       6 │\r\n│    1 │       3 │\r\n└──────┴─────────┘\r\n```\r\n\r\nThank you.\r\n\r\n**2020-06-17 Added**\r\n`EarlyWindowFunction` collects only local data not for the distributed data.\r\nWhen Data is distributed by `user_id` among nodes, the partition key of `EarlyWindowFunction` must be the `user_id`."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11642",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11642/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11642/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11642/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11642",
    "id": 638166747,
    "node_id": "MDU6SXNzdWU2MzgxNjY3NDc=",
    "number": 11642,
    "title": "build clickhouse in arm archtech with gcc-10.1.0, link error",
    "user": {
      "login": "bookeezhou",
      "id": 4371431,
      "node_id": "MDQ6VXNlcjQzNzE0MzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4371431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bookeezhou",
      "html_url": "https://github.com/bookeezhou",
      "followers_url": "https://api.github.com/users/bookeezhou/followers",
      "following_url": "https://api.github.com/users/bookeezhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/bookeezhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bookeezhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bookeezhou/subscriptions",
      "organizations_url": "https://api.github.com/users/bookeezhou/orgs",
      "repos_url": "https://api.github.com/users/bookeezhou/repos",
      "events_url": "https://api.github.com/users/bookeezhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bookeezhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 521113272,
        "node_id": "MDU6TGFiZWw1MjExMTMyNzI=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/build",
        "name": "build",
        "color": "d93f0b",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-13T13:58:36Z",
    "updated_at": "2020-06-16T11:52:35Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Scanning dependencies of target parallel_aggregation\r\n[ 85%] Building CXX object src/Common/tests/CMakeFiles/parallel_aggregation.dir/parallel_aggregation.cpp.o\r\n[ 85%] Linking CXX executable parallel_aggregation\r\nld.lld: error: undefined symbol: ZSTD_compressLiterals\r\n>>> referenced by zstd_compress.c:1974 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:1974)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: HIST_countFast_wksp\r\n>>> referenced by zstd_compress.c:2016 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2016)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_compress.c:2042 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2042)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_compress.c:2070 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2070)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_selectEncodingType\r\n>>> referenced by zstd_compress.c:2019 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2019)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_compress.c:2048 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2048)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_compress.c:2074 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2074)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_buildCTable\r\n>>> referenced by zstd_compress.c:2026 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2026)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_compress.c:2054 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2054)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_compress.c:2080 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2080)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_encodeSequences\r\n>>> referenced by zstd_compress.c:2097 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_compress.c:2097)\r\n>>>               zstd_compress.c.o:(ZSTD_compressBlock_internal) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: HIST_count_simple\r\n>>> referenced by huf_compress.c:104 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/huf_compress.c:104)\r\n>>>               huf_compress.c.o:(HUF_writeCTable) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_opt.c:176 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/zstd_opt.c:176)\r\n>>>               zstd_opt.c.o:(ZSTD_rescaleFreqs) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: HIST_count_wksp\r\n>>> referenced by huf_compress.c:672 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/huf_compress.c:672)\r\n>>>               huf_compress.c.o:(HUF_compress_internal.isra.0) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by huf_compress.c:672 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/huf_compress.c:672)\r\n>>>               huf_compress.c.o:(HUF_compress1X_wksp) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by huf_compress.c:672 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/huf_compress.c:672)\r\n>>>               huf_compress.c.o:(HUF_compress1X) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by huf_compress.c:672 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/huf_compress.c:672)\r\n>>>               huf_compress.c.o:(HUF_compress4X_wksp) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by huf_compress.c:672 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/huf_compress.c:672)\r\n>>>               huf_compress.c.o:(HUF_compress2) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by fse_compress.c:675 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/fse_compress.c:675)\r\n>>>               fse_compress.c.o:(FSE_compress2.part.0) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by fse_compress.c:675 (/root/cksrc/ClickHouse/contrib/zstd/lib/compress/fse_compress.c:675)\r\n>>>               fse_compress.c.o:(FSE_compress_wksp) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_sizeof_DDict\r\n>>> referenced by zstd_decompress.c:82 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:82)\r\n>>>               zstd_decompress.c.o:(ZSTD_sizeof_DCtx) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:82 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:82)\r\n>>>               zstd_decompress.c.o:(ZSTD_sizeof_DStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_freeDDict\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_freeDCtx) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressDCtx) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompress) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompress) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_freeDStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_loadDictionary_advanced) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_loadDictionary_byReference) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_loadDictionary) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_refPrefix_advanced) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:150 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:150)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_refPrefix) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced 8 more times\r\n\r\nld.lld: error: undefined symbol: ZSTD_getcBlockSize\r\n>>> referenced by zstd_decompress.c:493 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:493)\r\n>>>               zstd_decompress.c.o:(ZSTD_findFrameSizeInfo) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:909 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:909)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressContinue.part.0) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:646 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:646)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_decompressBlock_internal\r\n>>> referenced by zstd_decompress.c:943 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:943)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressContinue.part.0) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:656 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:656)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_buildFSETable\r\n>>> referenced by zstd_decompress.c:1061 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1061)\r\n>>>               zstd_decompress.c.o:(ZSTD_loadDEntropy) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1074 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1074)\r\n>>>               zstd_decompress.c.o:(ZSTD_loadDEntropy) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1087 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1087)\r\n>>>               zstd_decompress.c.o:(ZSTD_loadDEntropy) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_DDict_dictContent\r\n>>> referenced by zstd_decompress.c:711 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:711)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1168 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1168)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1168 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1168)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressBegin_usingDDict) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1168 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1168)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1539 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1539)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_DDict_dictSize\r\n>>> referenced by zstd_decompress.c:712 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:712)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1169 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1169)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1169 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1169)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressBegin_usingDDict) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1169 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1169)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1540 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1540)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_copyDDictParameters\r\n>>> referenced by zstd_decompress.c:1177 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1177)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressMultiFrame) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1177 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1177)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressBegin_usingDDict) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1177 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1177)\r\n>>>               zstd_decompress.c.o:(ZSTD_decompressStream) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n\r\nld.lld: error: undefined symbol: ZSTD_createDDict_advanced\r\n>>> referenced by zstd_decompress.c:1269 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1269)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_loadDictionary_advanced) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1269 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1269)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_loadDictionary_byReference) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1269 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1269)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_loadDictionary) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1269 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1269)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_refPrefix_advanced) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1269 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1269)\r\n>>>               zstd_decompress.c.o:(ZSTD_DCtx_refPrefix) in archive ../../../contrib/zstd-cmake/libzstd.a\r\n>>> referenced by zstd_decompress.c:1269 (/root/cksrc/ClickHouse/contrib/zstd/lib/decompress/zstd_decompress.c:1269)\r\n>>>               zstd_decompress.c.o:(ZSTD_initDStream_usingDict) in archive ../../../contrib/zstd-cmake/libzstd.a\r\ncollect2: error: ld returned 1 exit status\r\nmake[2]: *** [src/Common/tests/parallel_aggregation] Error 1\r\nmake[1]: *** [src/Common/tests/CMakeFiles/parallel_aggregation.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n[ 85%] Linking CXX static library libclickhouse_functions_gatherutils.a\r\n[ 85%] Built target clickhouse_functions_gatherutils\r\nmake: *** [all] Error 2\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11629",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11629/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11629/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11629/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11629",
    "id": 637679738,
    "node_id": "MDU6SXNzdWU2Mzc2Nzk3Mzg=",
    "number": 11629,
    "title": "CLEAR COLUMN command lead to crash",
    "user": {
      "login": "jackpgao",
      "id": 3423412,
      "node_id": "MDQ6VXNlcjM0MjM0MTI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3423412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jackpgao",
      "html_url": "https://github.com/jackpgao",
      "followers_url": "https://api.github.com/users/jackpgao/followers",
      "following_url": "https://api.github.com/users/jackpgao/following{/other_user}",
      "gists_url": "https://api.github.com/users/jackpgao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jackpgao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jackpgao/subscriptions",
      "organizations_url": "https://api.github.com/users/jackpgao/orgs",
      "repos_url": "https://api.github.com/users/jackpgao/repos",
      "events_url": "https://api.github.com/users/jackpgao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jackpgao/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1234601830,
        "node_id": "MDU6TGFiZWwxMjM0NjAxODMw",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/crash",
        "name": "crash",
        "color": "082b68",
        "default": false,
        "description": "Crash / segfault / segmentation"
      },
      {
        "id": 845267693,
        "node_id": "MDU6TGFiZWw4NDUyNjc2OTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info",
        "name": "st-need-info",
        "color": "e5b890",
        "default": false,
        "description": "We need extra data to continue"
      },
      {
        "id": 1507860028,
        "node_id": "MDU6TGFiZWwxNTA3ODYwMDI4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-repro",
        "name": "st-need-repro",
        "color": "e5b890",
        "default": false,
        "description": "We were not able to reproduce the problem, please help us."
      },
      {
        "id": 1907525265,
        "node_id": "MDU6TGFiZWwxOTA3NTI1MjY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected",
        "name": "v20.3-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.3"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-06-12T11:17:51Z",
    "updated_at": "2020-06-28T02:19:23Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "```sql\r\nserver.log:2020.06.12 19:08:37.065622 [ 38255 ] \r\n{db478a4d-9b7b-4374-8e59-e8d75a989bff} <Debug> executeQuery: (from 10.xxxxx:53366, user: xxxx) \r\nALTER TABLE xxxx CLEAR COLUMN xxxx IN PARTITION '2020-06-03'\r\n```\r\n\r\n\r\n- version: `20.3.7.46`\r\n\r\n- Crash log:\r\n\r\n```sql\r\n\r\n2020.06.12 19:08:37.098256 [ 35471 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.06.12 19:08:37.098319 [ 35471 ] {} <Fatal> BaseDaemon: (version 20.3.7.46 (official build)) (from thread 38255) (query_id: db478a4d-9b7b-4374-8e59-e8d75a989bff) Received signal Segmentation fault (11).\r\n2020.06.12 19:08:37.098343 [ 35471 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Address not mapped to object.\r\n2020.06.12 19:08:37.098359 [ 35471 ] {} <Fatal> BaseDaemon: Stack trace: 0xd90db43 0xd73542f 0xd73ad76 0xd0b6f5e 0xd561f98 0xd564bd1 0x90224d9 0x90234c0 0xe3b885b 0xe3b8cdd 0x105cf3c7 0x105cb1cc 0x105ccb6d 0x7f4d69e0cdc5 0x7f4d6a62273d\r\n2020.06.12 19:08:37.098413 [ 35471 ] {} <Fatal> BaseDaemon: 3. DB::MergeTreeData::alterDataPart(DB::NamesAndTypesList const&, std::__1::vector<std::__1::shared_ptr<DB::ASTIndexDeclaration>, std::__1::allocator<std::__1::shared_ptr<DB::ASTIndexDeclaration> > > const&, bool, std::__1::unique_ptr<DB::MergeTreeData::AlterDataPartTransaction, std::__1::default_delete<DB::MergeTreeData::AlterDataPartTransaction> >&) @ 0xd90db43 in ?\r\n2020.06.12 19:08:37.098434 [ 35471 ] {} <Fatal> BaseDaemon: 4. DB::StorageMergeTree::clearColumnOrIndexInPartition(std::__1::shared_ptr<DB::IAST> const&, DB::AlterCommand const&, DB::Context const&) @ 0xd73542f in ?\r\n2020.06.12 19:08:37.098447 [ 35471 ] {} <Fatal> BaseDaemon: 5. DB::StorageMergeTree::alterPartition(std::__1::shared_ptr<DB::IAST> const&, DB::PartitionCommands const&, DB::Context const&) @ 0xd73ad76 in ?\r\n2020.06.12 19:08:37.098460 [ 35471 ] {} <Fatal> BaseDaemon: 6. DB::InterpreterAlterQuery::execute() @ 0xd0b6f5e in ?\r\n2020.06.12 19:08:37.098468 [ 35471 ] {} <Fatal> BaseDaemon: 7. ? @ 0xd561f98 in ?\r\n2020.06.12 19:08:37.098482 [ 35471 ] {} <Fatal> BaseDaemon: 8. DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd564bd1 in ?\r\n2020.06.12 19:08:37.098499 [ 35471 ] {} <Fatal> BaseDaemon: 9. DB::TCPHandler::runImpl() @ 0x90224d9 in ?\r\n2020.06.12 19:08:37.098508 [ 35471 ] {} <Fatal> BaseDaemon: 10. DB::TCPHandler::run() @ 0x90234c0 in ?\r\n2020.06.12 19:08:37.098522 [ 35471 ] {} <Fatal> BaseDaemon: 11. Poco::Net::TCPServerConnection::start() @ 0xe3b885b in ?\r\n2020.06.12 19:08:37.098533 [ 35471 ] {} <Fatal> BaseDaemon: 12. Poco::Net::TCPServerDispatcher::run() @ 0xe3b8cdd in ?\r\n2020.06.12 19:08:37.098542 [ 35471 ] {} <Fatal> BaseDaemon: 13. Poco::PooledThread::run() @ 0x105cf3c7 in ?\r\n2020.06.12 19:08:37.098551 [ 35471 ] {} <Fatal> BaseDaemon: 14. Poco::ThreadImpl::runnableEntry(void*) @ 0x105cb1cc in ?\r\n2020.06.12 19:08:37.098561 [ 35471 ] {} <Fatal> BaseDaemon: 15. ? @ 0x105ccb6d in ?\r\n2020.06.12 19:08:37.098583 [ 35471 ] {} <Fatal> BaseDaemon: 16. start_thread @ 0x7dc5 in /usr/lib64/libpthread-2.17.so\r\n2020.06.12 19:08:37.098600 [ 35471 ] {} <Fatal> BaseDaemon: 17. __clone @ 0xf773d in /usr/lib64/libc-2.17.so\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11622",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11622/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11622/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11622/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11622",
    "id": 637528727,
    "node_id": "MDU6SXNzdWU2Mzc1Mjg3Mjc=",
    "number": 11622,
    "title": "\"Code 10 Not found column\" when passing an array via the array function to the transform function",
    "user": {
      "login": "fpacifici",
      "id": 1626430,
      "node_id": "MDQ6VXNlcjE2MjY0MzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1626430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fpacifici",
      "html_url": "https://github.com/fpacifici",
      "followers_url": "https://api.github.com/users/fpacifici/followers",
      "following_url": "https://api.github.com/users/fpacifici/following{/other_user}",
      "gists_url": "https://api.github.com/users/fpacifici/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fpacifici/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fpacifici/subscriptions",
      "organizations_url": "https://api.github.com/users/fpacifici/orgs",
      "repos_url": "https://api.github.com/users/fpacifici/repos",
      "events_url": "https://api.github.com/users/fpacifici/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fpacifici/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1401233890,
        "node_id": "MDU6TGFiZWwxNDAxMjMzODkw",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-arrays",
        "name": "comp-arrays",
        "color": "b5bcff",
        "default": false,
        "description": "Arrays / array joins / higher order"
      },
      {
        "id": 1634829961,
        "node_id": "MDU6TGFiZWwxNjM0ODI5OTYx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-distributed",
        "name": "comp-distributed",
        "color": "b5bcff",
        "default": false,
        "description": "Distributed tables"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-12T06:53:27Z",
    "updated_at": "2020-06-22T23:23:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hello, (first of all thanks for the great product, we love it at Sentry). \r\nWe are experiencing this error when querying a distributed table:\r\n\r\n```\r\nCode: 10.                                                                                                                                                         \r\nDB::Exception: Not found column transform(toString(project_id), array('1'), array('sentry'), '') in block. There are only columns: event_id, timestamp, transform(toString(project_id), ['1'], ['sentry'], '\r\n')\r\n```\r\n(see the full query in the reproducer)\r\nThe same query works just fine if I replace \r\n`transform(toString(project_id), array('1'), array('sentry'), '')`\r\nwith\r\n`transform(toString(project_id), ['1'], ['sentry'], '')`\r\n\r\n**How to reproduce**\r\n\r\n**Tested on Clickhouse 19.17.4**\r\n**Interfaces**\r\nI tried this in multiple environments:\r\n- local table not distributed: it works fine\r\n- distributed table through python native driver: error above\r\n- distributed table sending the query via curl on the http port: error above\r\n- distributed table sending the query via the CLI clickhouse-client: it works fine.\r\n\r\n**Default settings**\r\n\r\n**Tables**\r\nlocal\r\n```\r\nCREATE TABLE sentry_local (\r\n    `event_id` FixedString(32), \r\n    `project_id` UInt64,\r\n    `timestamp` DateTime,\r\n    `retention_days` UInt16)\r\nENGINE = ReplacingMergeTree(deleted) \r\nPARTITION BY (toMonday(timestamp), if(retention_days = 30, 30, 90)) \r\nORDER BY (project_id, toStartOfDay(timestamp), cityHash64(toString(event_id))) \r\nSAMPLE BY cityHash64(toString(event_id)) \r\nSETTINGS index_granularity = 8192\r\n```\r\ndistributed:\r\n```\r\nCREATE TABLE sentry_dist (\r\n    `event_id` FixedString(32), \r\n    `project_id` UInt64,\r\n    `timestamp` DateTime,\r\n    `retention_days` UInt16)\r\nENGINE = Distributed(test_cluster_two_shards_localhost, default, sentry_local, cityHash64(event_id))```\r\n```\r\n\r\n**Query**\r\n```\r\nSELECT\r\n    event_id,\r\n    (transform(toString(project_id), array('2'), array('sentry'), '') AS test_proj)\r\nFROM sentry_dist\r\nWHERE\r\n    project_id IN (2)\r\nORDER BY timestamp DESC LIMIT 0, 1\r\n```\r\n\r\n**Expected behavior**\r\nThe fact that the query works properly in some environment makes me think it should be a working query.\r\n\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n\r\nCode: 10.                                                                                                                                                         \r\nDB::Exception: Not found column transform(toString(project_id), array('1'), array('sentry'), '') in block. There are only columns: event_id, timestamp, transform(toString(project_id), ['1'], ['sentry'], '\r\n')\r\n0. 0x559aa8758f60 StackTrace::StackTrace() /build/obj-x86_64-linux-gnu/../dbms/src/Common/StackTrace.cpp:228\r\n1. 0x559aa8758d35 DB::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) /build/obj-x86_64-linux-gnu/../dbms/src/Common/Exception.h:27\r\n2. 0x559aa844788d DB::Block::getByName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const [clone .cold] /usr/include/c++/9/bits/basic_string.h:222\r\n3. 0x559aab9c6879 DB::RemoteBlockInputStream::readImpl() /build/obj-x86_64-linux-gnu/../dbms/src/DataStreams/RemoteBlockInputStream.cpp:202\r\n4. 0x559aab9af01a DB::IBlockInputStream::read() /usr/include/c++/9/bits/stl_vector.h:108\r\n5. 0x559aab9a80eb DB::AsynchronousBlockInputStream::calculate() /usr/include/c++/9/bits/stl_vector.h:108\r\n6. 0x559aab9a84b0 std::_Function_handler<void (), DB::AsynchronousBlockInputStream::next()::{lambda()#1}>::_M_invoke(std::_Any_data const&) /usr/include/c++/9/bits/atomic_base.h:551\r\n7. 0x559aa87a5a4e ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::_List_iterator<ThreadFromGlobalPool>) /usr/include/c++/9/bits/atomic_base.h:551\r\n8. 0x559aa87a605e ThreadFromGlobalPool::ThreadFromGlobalPool<ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::function<void ()>, int, std::optional<unsigned long>)::{lambda()#3}>(ThreadPoolIm\r\npl<ThreadFromGlobalPool>::scheduleImpl<void>(std::function<void ()>, int, std::optional<unsigned long>)::{lambda()#3}&&)::{lambda()#1}::operator()() const /build/obj-x86_64-linux-gnu/../dbms/src/Common/Th\r\nreadPool.h:155\r\n9. 0x559aa87a351c ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>) /usr/include/c++/9/bits/atomic_base.h:551\r\n10. 0x559aae528e00 execute_native_thread_routine /usr/lib/debug/usr/bin/clickhouse\r\n11. 0x7f70217d6184 start_thread /lib/x86_64-linux-gnu/libpthread-2.19.so\r\n12. 0x7f70210f703d clone /lib/x86_64-linux-gnu/libc-2.19.so\r\n```\r\n\r\n**Additional context**\r\nThe issue is visible only if the query result set is not empty.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11617",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11617/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11617/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11617/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11617",
    "id": 637375395,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMzMzc3Nzcy",
    "number": 11617,
    "title": "Parallel formatting",
    "user": {
      "login": "nikitamikhaylov",
      "id": 25705399,
      "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitamikhaylov",
      "html_url": "https://github.com/nikitamikhaylov",
      "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
      "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
      "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
      "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-11T23:13:49Z",
    "updated_at": "2020-06-15T17:38:42Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11617",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11617",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11617.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11617.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\n- parallel parsing was rewritten to processors\r\n- fixed the issue when array of JSONs can't be parsed in parallel (it is not a bugfix)\r\n- parallel formatting was implemented\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11607",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11607/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11607/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11607/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11607",
    "id": 637165323,
    "node_id": "MDU6SXNzdWU2MzcxNjUzMjM=",
    "number": 11607,
    "title": "Http request uri parameter: Code: 134, e.displayText() = DB::Exception: Parameters to aggregate functions must be literals ",
    "user": {
      "login": "Treno1",
      "id": 434101,
      "node_id": "MDQ6VXNlcjQzNDEwMQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/434101?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Treno1",
      "html_url": "https://github.com/Treno1",
      "followers_url": "https://api.github.com/users/Treno1/followers",
      "following_url": "https://api.github.com/users/Treno1/following{/other_user}",
      "gists_url": "https://api.github.com/users/Treno1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Treno1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Treno1/subscriptions",
      "organizations_url": "https://api.github.com/users/Treno1/orgs",
      "repos_url": "https://api.github.com/users/Treno1/repos",
      "events_url": "https://api.github.com/users/Treno1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Treno1/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-11T16:36:10Z",
    "updated_at": "2020-06-11T16:36:10Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nQuery with http parameter of type Int32 for topKArray function throwing an error:\r\nCode: 134, e.displayText() = DB::Exception: Parameters to aggregate functions must be literals \r\nOther signed of unsigned types does not work too\r\n\r\n**How to reproduce**\r\nVersions: 20.4.5.36 or 20.4.4.18 or 20.3.8.53\r\ncurl -XPOST 'http://localhost:8123/?param_lim=2' -d 'select topKArray({lim:UInt32})([1,1,2,3,4,5,6,7,7,7])' \r\n\r\n**Expected behavior**\r\nSame result if you specify parameter value inside query\r\ncurl -XPOST 'http://localhost:8123/' -d 'select topKArray(2)([1,1,2,3,4,5,6,7,7,7])' \r\n\r\n**Error message and/or stacktrace**\r\nCode: 134, e.displayText() = DB::Exception: Parameters to aggregate functions must be literals \r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11606",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11606/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11606/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11606/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11606",
    "id": 637151716,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMzMTkxNjg5",
    "number": 11606,
    "title": "Make polymorphic_parts perf test not blazing fast",
    "user": {
      "login": "CurtizJ",
      "id": 20361854,
      "node_id": "MDQ6VXNlcjIwMzYxODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20361854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CurtizJ",
      "html_url": "https://github.com/CurtizJ",
      "followers_url": "https://api.github.com/users/CurtizJ/followers",
      "following_url": "https://api.github.com/users/CurtizJ/following{/other_user}",
      "gists_url": "https://api.github.com/users/CurtizJ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CurtizJ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CurtizJ/subscriptions",
      "organizations_url": "https://api.github.com/users/CurtizJ/orgs",
      "repos_url": "https://api.github.com/users/CurtizJ/repos",
      "events_url": "https://api.github.com/users/CurtizJ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CurtizJ/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1876999755,
        "node_id": "MDU6TGFiZWwxODc2OTk5NzU1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog",
        "name": "pr-not-for-changelog",
        "color": "007700",
        "default": false,
        "description": "This PR should not be mentioned in the changelog"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "akuzm",
        "id": 36882414,
        "node_id": "MDQ6VXNlcjM2ODgyNDE0",
        "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/akuzm",
        "html_url": "https://github.com/akuzm",
        "followers_url": "https://api.github.com/users/akuzm/followers",
        "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
        "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
        "organizations_url": "https://api.github.com/users/akuzm/orgs",
        "repos_url": "https://api.github.com/users/akuzm/repos",
        "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
        "received_events_url": "https://api.github.com/users/akuzm/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-11T16:15:27Z",
    "updated_at": "2020-06-23T07:00:07Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11606",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11606",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11606.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11606.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11596/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11596",
    "id": 636856648,
    "node_id": "MDU6SXNzdWU2MzY4NTY2NDg=",
    "number": 11596,
    "title": "Grace hash join",
    "user": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1357578153,
        "node_id": "MDU6TGFiZWwxMzU3NTc4MTUz",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins",
        "name": "comp-joins",
        "color": "b5bcff",
        "default": false,
        "description": "JOINs"
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "4ertus2",
        "id": 8061274,
        "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/4ertus2",
        "html_url": "https://github.com/4ertus2",
        "followers_url": "https://api.github.com/users/4ertus2/followers",
        "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
        "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
        "organizations_url": "https://api.github.com/users/4ertus2/orgs",
        "repos_url": "https://api.github.com/users/4ertus2/repos",
        "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/4ertus2/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-11T09:15:23Z",
    "updated_at": "2020-06-11T13:34:57Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Implement `grace join`. I.e. we have `T join U`. Grace join splits `T` and `U` in buckets `T0, T1, ..., Tn` `U0, U1, ..., Un` with hash function and then join same hashed buckets `T0 vs U0, T1 vs U1, ..., Tn vs Un` with another join algorithm (generally hash-join).\r\n\r\nWe need inplement `class GraceJoin : public IJoin` that would use HashJoin per bucket inside. Also we need support flush right table buckets on disk. For left table buckets there's 2 general variants: flush buckets on disk or join not full buckets that we have in memory right now."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11595",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11595/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11595/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11595/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11595",
    "id": 636752228,
    "node_id": "MDU6SXNzdWU2MzY3NTIyMjg=",
    "number": 11595,
    "title": "select query always have zero result_rows/result_bytes on system.query_log table",
    "user": {
      "login": "zhuyoucui0909",
      "id": 31003798,
      "node_id": "MDQ6VXNlcjMxMDAzNzk4",
      "avatar_url": "https://avatars0.githubusercontent.com/u/31003798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhuyoucui0909",
      "html_url": "https://github.com/zhuyoucui0909",
      "followers_url": "https://api.github.com/users/zhuyoucui0909/followers",
      "following_url": "https://api.github.com/users/zhuyoucui0909/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhuyoucui0909/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhuyoucui0909/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhuyoucui0909/subscriptions",
      "organizations_url": "https://api.github.com/users/zhuyoucui0909/orgs",
      "repos_url": "https://api.github.com/users/zhuyoucui0909/repos",
      "events_url": "https://api.github.com/users/zhuyoucui0909/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhuyoucui0909/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2070999159,
        "node_id": "MDU6TGFiZWwyMDcwOTk5MTU5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.4-affected",
        "name": "v20.4-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.4"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-11T06:25:26Z",
    "updated_at": "2020-06-19T01:55:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "\r\n**Describe the bug**\r\nselect query always have zero result_rows/result_bytes on system.query_log table\r\n\r\n**How to reproduce**\r\n1. select * from any table with data on your clickhouse db.\r\n2. check system.query_log\r\n\r\n* Which ClickHouse server version to use\r\nversion 20.4.4.18\r\n\r\n\r\n* Queries to run that lead to unexpected result\r\nall select queries have this issue.\r\ne.g. `select * from system.settings`\r\n\r\n**Expected behavior**\r\nresult_rows/result_bytes should tell how many rows/bytes returned by clickhouse\r\n\r\n**Error message and/or stacktrace**\r\nNo\r\n**Additional context**\r\nWe monitor result_rows/result_bytes/read_rows/read_bytes as a measurement for the clickhouse cluster usage. read_rows/read_bytes can be get from query_log correctly. However, result_rows/result_bytes are always zero for select clause.\r\n\r\nWe previously use version 19.14. The measurement works well. However, on 20.4, result_rows/result_bytes becomes always zero.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11591",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11591/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11591/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11591/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11591",
    "id": 636603251,
    "node_id": "MDU6SXNzdWU2MzY2MDMyNTE=",
    "number": 11591,
    "title": "Some formats not ready for eof in readPrefix",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1401255404,
        "node_id": "MDU6TGFiZWwxNDAxMjU1NDA0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-formats",
        "name": "comp-formats",
        "color": "b5bcff",
        "default": false,
        "description": "Input / output formats"
      },
      {
        "id": 1365579236,
        "node_id": "MDU6TGFiZWwxMzY1NTc5MjM2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/prio-minor",
        "name": "prio-minor",
        "color": "ac7fef",
        "default": false,
        "description": "Priority: minor"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-10T23:10:21Z",
    "updated_at": "2020-06-11T13:17:19Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "```\r\necho '' | clickhouse-local --structure='a String' --input-format=RowBinaryWithNamesAndTypes --query='SELECT count() FROM table' --stacktrace\r\nCode: 32, e.displayText() = DB::Exception: Attempt to read after eof: While executing File, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x10871770 in /usr/lib/debug/usr/bin/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:32: DB::throwReadAfterEOF() @ 0x92482bf in /usr/lib/debug/usr/bin/clickhouse\r\n2. /build/obj-x86_64-linux-gnu/../src/IO/VarInt.h:133: DB::BinaryRowInputFormat::readPrefix() @ 0xe19ca2c in /usr/lib/debug/usr/bin/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../src/Processors/Formats/IRowInputFormat.cpp:44: DB::IRowInputFormat::generate() @ 0xe1913ac in /usr/lib/debug/usr/bin/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::ISource::work() @ 0xe10f5ab in /usr/lib/debug/usr/bin/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../src/Processors/Formats/InputStreamFromInputFormat.h:49: DB::InputStreamFromInputFormat::readImpl() @ 0xe0d4ced in /usr/lib/debug/usr/bin/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::IBlockInputStream::read() @ 0xd446e8d in /usr/lib/debug/usr/bin/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../src/Storages/StorageFile.cpp:316: DB::StorageFileSource::generate() @ 0xdca4ac9 in /usr/lib/debug/usr/bin/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::ISource::work() @ 0xe10f5ab in /usr/lib/debug/usr/bin/clickhouse\r\n9. /build/obj-x86_64-linux-gnu/../src/Processors/Sources/SourceWithProgress.cpp:27: DB::SourceWithProgress::work() @ 0xe3710e7 in /usr/lib/debug/usr/bin/clickhouse\r\n10. /build/obj-x86_64-linux-gnu/../src/Processors/Executors/PipelineExecutor.cpp:167: std::__1::__function::__func<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::'lambda'(), std::__1::allocator<DB::PipelineExecutor::addJob(DB::PipelineExecutor::ExecutionState*)::'lambda'()>, void ()>::operator()() @ 0xe13eb21 in /usr/lib/debug/usr/bin/clickhouse\r\n11. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/exception:180: DB::PipelineExecutor::executeStepImpl(unsigned long, unsigned long, std::__1::atomic<bool>*) (.constprop.0) @ 0xe14329e in /usr/lib/debug/usr/bin/clickhouse\r\n12. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:461: DB::PipelineExecutor::executeImpl(unsigned long) @ 0xe1447ed in /usr/lib/debug/usr/bin/clickhouse\r\n13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1516: DB::PipelineExecutor::execute(unsigned long) @ 0xe1451b1 in /usr/lib/debug/usr/bin/clickhouse\r\n14. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:4206: DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xdb633f4 in /usr/lib/debug/usr/bin/clickhouse\r\n15. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/functional:1825: DB::LocalServer::processQueries() @ 0x93c3e2e in /usr/lib/debug/usr/bin/clickhouse\r\n16. /build/obj-x86_64-linux-gnu/../programs/local/LocalServer.cpp:228: DB::LocalServer::main(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0x93c6ab0 in /usr/lib/debug/usr/bin/clickhouse\r\n17. /build/obj-x86_64-linux-gnu/../contrib/poco/Util/src/Application.cpp:334: Poco::Util::Application::run() @ 0x107a07c7 in /usr/lib/debug/usr/bin/clickhouse\r\n18. /build/obj-x86_64-linux-gnu/../programs/local/LocalServer.cpp:515: mainEntryClickHouseLocal(int, char**) @ 0x93c2a2f in /usr/lib/debug/usr/bin/clickhouse\r\n19. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:461: main @ 0x923f8f9 in /usr/lib/debug/usr/bin/clickhouse\r\n20. /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:344: __libc_start_main @ 0x21b97 in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n21. _start @ 0x923f02e in /usr/lib/debug/usr/bin/clickhouse\r\n (version 20.5.1.3496 (official build))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11590",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11590/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11590/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11590/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11590",
    "id": 636582769,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMyNzI5OTU4",
    "number": 11590,
    "title": "[WIP] tcmalloc allocator (new C++ version by google)",
    "user": {
      "login": "azat",
      "id": 430798,
      "node_id": "MDQ6VXNlcjQzMDc5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/430798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azat",
      "html_url": "https://github.com/azat",
      "followers_url": "https://api.github.com/users/azat/followers",
      "following_url": "https://api.github.com/users/azat/following{/other_user}",
      "gists_url": "https://api.github.com/users/azat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azat/subscriptions",
      "organizations_url": "https://api.github.com/users/azat/orgs",
      "repos_url": "https://api.github.com/users/azat/repos",
      "events_url": "https://api.github.com/users/azat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1953726553,
        "node_id": "MDU6TGFiZWwxOTUzNzI2NTUz",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-other",
        "name": "pr-other",
        "color": "007700",
        "default": false,
        "description": "Pull request with changes not fitting to other categories"
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 25,
    "created_at": "2020-06-10T22:14:54Z",
    "updated_at": "2020-06-28T15:53:09Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11590",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11590",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11590.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11590.patch"
    },
    "body": "### `tcmalloc` checklist:\r\n- [ ] report performance \"issue\" to upstream (if it will not be resolved)\r\n- [ ] nallocx\r\n- [ ] terminate in case of allocation failure allows optimization (`noexcept`, `-DABSL_ALLOCATOR_NOTHROW`)\r\n- [ ] aligned allocations, also check clickhouse code for possible dependency on alignment (hashtables? trees optimizations?) and add `static_assert` against `__STDCPP_DEFAULT_NEW_ALIGNMENT__`\r\n- [ ] tcmalloc RSEQ (restartable sequences) requires linux 4.18+\r\n- [ ] telemetry via MallocExtension (like statistics for jemalloc)\r\n- [ ] `tcmalloc::MallocExtension::SetMaxPerCpuCacheSize`/`tcmalloc::MallocExtension::SetMaxTotalThreadCacheBytes`\r\n- [ ] [doc states that it depends from THP](https://github.com/google/tcmalloc/blob/master/docs/temeraire.md)\r\n- [ ] background thread that calls ReleaseMemoryToSystem?\r\n- [ ] [GWP-ASan for debug builds?](https://github.com/google/tcmalloc/blob/master/docs/gwp-asan.md)\r\n- [ ] use sized deallocations (optimized, clang does not enables `-fsized-deallocation` by default?)\r\n- [ ] loaded too late ([`../contrib/tcmalloc-cpp/tcmalloc/tcmalloc.cc:2270] tcmalloc::GetOwnership(ptr) != tcmalloc::MallocExtension::Ownership::kNotOwned `](https://clickhouse-test-reports.s3.yandex.net/11590/cd902e7d2b0c0c1183507560a6edab8a9d5b1b7a/functional_stateful_tests_(debug)/test_run.txt.out.log))\r\n- [x] tried sized alloc/dealloc via `TCMallocInternalNew`/`TCMallocInternalDeleteSized` -- does not makes any difference for `allocator-perf`\r\n- [x] Logical Page Size (default [8k](6d83a078e3f9caf169aa3074315b67c51a2c73e4), try increase, [`TCMALLOC_256K_PAGES`](cd902e7d2b0c0c1183507560a6edab8a9d5b1b7a)) -- does not makes any difference in performance tests\r\n\r\n### notes checklist:\r\n- [ ] stable abseil-cpp (or the same as in tcmalloc bazel)\r\n- [ ] tcmalloc does not have tags\r\n- [ ] separate build with tcmalloc on CI\r\n- [ ] split into logical parts\r\n- [ ] uses patched version (see commits descriptions/comments for the reason)\r\n\r\nChangelog category (leave one):\r\n- Other\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAbility to use tcmalloc allocator (new C++ version by google)\r\n\r\nCan be enabled with:\r\n\r\n    -DENABLE_JEMALLOC=OFF -DENABLE_TCMALLOC_CPP=ON\r\n\r\nSuggested-by: @alexey-milovidov \r\nCc: @akuzm (perf test)\r\n\r\n<details>\r\n\r\n`HEAD`:\r\n- 6d83a078e3f9caf169aa3074315b67c51a2c73e4 -- initial\r\n- cd902e7d2b0c0c1183507560a6edab8a9d5b1b7a -- `TCMALLOC_256K_PAGES`\r\n\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11576",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11576/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11576/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11576/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11576",
    "id": 636277173,
    "node_id": "MDU6SXNzdWU2MzYyNzcxNzM=",
    "number": 11576,
    "title": "merge_with_ttl_timeout trigger should clean all expired parts",
    "user": {
      "login": "fhmcn",
      "id": 1872177,
      "node_id": "MDQ6VXNlcjE4NzIxNzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1872177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fhmcn",
      "html_url": "https://github.com/fhmcn",
      "followers_url": "https://api.github.com/users/fhmcn/followers",
      "following_url": "https://api.github.com/users/fhmcn/following{/other_user}",
      "gists_url": "https://api.github.com/users/fhmcn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fhmcn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fhmcn/subscriptions",
      "organizations_url": "https://api.github.com/users/fhmcn/orgs",
      "repos_url": "https://api.github.com/users/fhmcn/repos",
      "events_url": "https://api.github.com/users/fhmcn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fhmcn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1401282669,
        "node_id": "MDU6TGFiZWwxNDAxMjgyNjY5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-ttl",
        "name": "comp-ttl",
        "color": "b5bcff",
        "default": false,
        "description": "TTL"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-10T14:06:01Z",
    "updated_at": "2020-06-11T13:36:49Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nOnly drop single partition is dropped per merge_with_ttl_timeout period. Other expired partitions stays there. \r\n\r\n**How to reproduce**\r\n* Version: 20.3.8.53\r\n* Setting: \r\n--  ttl_only_drop_parts=1 \r\n-- system.part_log is on\r\n* create any table partitioned table load data into. Wait for timeout TTL and observe parts changes from system.part_log table.\r\n\r\n**Expected behavior**\r\nIt should drop whole expired parts once it checks for TTL. \r\n\r\n**Additional context**\r\nAs workaround 'ALTER TABLE events MATERIALIZE TTL' command is run, it triggers to remove parts. \r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11572",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11572/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11572/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11572/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11572",
    "id": 636158058,
    "node_id": "MDU6SXNzdWU2MzYxNTgwNTg=",
    "number": 11572,
    "title": "Output of TreeExecutor is not sorted after OPTIMIZE FINAL DEDUPLICATE",
    "user": {
      "login": "alarin",
      "id": 86814,
      "node_id": "MDQ6VXNlcjg2ODE0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/86814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alarin",
      "html_url": "https://github.com/alarin",
      "followers_url": "https://api.github.com/users/alarin/followers",
      "following_url": "https://api.github.com/users/alarin/following{/other_user}",
      "gists_url": "https://api.github.com/users/alarin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alarin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alarin/subscriptions",
      "organizations_url": "https://api.github.com/users/alarin/orgs",
      "repos_url": "https://api.github.com/users/alarin/repos",
      "events_url": "https://api.github.com/users/alarin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alarin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2070999159,
        "node_id": "MDU6TGFiZWwyMDcwOTk5MTU5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.4-affected",
        "name": "v20.4-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.4"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "KochetovNicolai",
      "id": 4092911,
      "node_id": "MDQ6VXNlcjQwOTI5MTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4092911?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/KochetovNicolai",
      "html_url": "https://github.com/KochetovNicolai",
      "followers_url": "https://api.github.com/users/KochetovNicolai/followers",
      "following_url": "https://api.github.com/users/KochetovNicolai/following{/other_user}",
      "gists_url": "https://api.github.com/users/KochetovNicolai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KochetovNicolai/subscriptions",
      "organizations_url": "https://api.github.com/users/KochetovNicolai/orgs",
      "repos_url": "https://api.github.com/users/KochetovNicolai/repos",
      "events_url": "https://api.github.com/users/KochetovNicolai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/KochetovNicolai/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "KochetovNicolai",
        "id": 4092911,
        "node_id": "MDQ6VXNlcjQwOTI5MTE=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/4092911?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/KochetovNicolai",
        "html_url": "https://github.com/KochetovNicolai",
        "followers_url": "https://api.github.com/users/KochetovNicolai/followers",
        "following_url": "https://api.github.com/users/KochetovNicolai/following{/other_user}",
        "gists_url": "https://api.github.com/users/KochetovNicolai/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/KochetovNicolai/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/KochetovNicolai/subscriptions",
        "organizations_url": "https://api.github.com/users/KochetovNicolai/orgs",
        "repos_url": "https://api.github.com/users/KochetovNicolai/repos",
        "events_url": "https://api.github.com/users/KochetovNicolai/events{/privacy}",
        "received_events_url": "https://api.github.com/users/KochetovNicolai/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-10T11:10:11Z",
    "updated_at": "2020-06-23T22:18:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nI got the exception after trying to DEDUPLICATE mv. It worked on 20.3\r\n\r\n>OPTIMIZE TABLE targeting_service_mv.ts_last_active_wallet FINAL DEDUPLICATE;\r\n\r\nru.yandex.clickhouse.except.ClickHouseException: ClickHouse exception, code: 365, host: 168.63.64.61, port: 8123; Code: 365, e.displayText() = DB::Exception: Output of TreeExecutor is not sorted (version 20.4.4.18 (official build))\r\n\r\nIt works w/o DEDUPLICATE. And does what it intended to do, delete old records with earlier last_active\r\n\r\n**How to reproduce**\r\nClickhouse-server 20.4.4.18\r\n\r\n```\r\nCREATE TABLE queues.client_event (\r\n    `event` LowCardinality(String),\r\n    `created_at` DateTime, \r\n    `wallet_uid` String,\r\n    `device_id` String,    \r\n    `message_id` String,\r\n)\r\nENGINE = ReplacingMergeTree() PARTITION BY toYYYYMM(created_at)\r\nORDER BY (event, created_at, cityHash64(device_id, message_id))\r\nSETTINGS index_granularity = 8192\r\n```\r\n\r\n```\r\nCREATE MATERIALIZED VIEW targeting_service_mv.ts_last_active_wallet\r\nENGINE = ReplacingMergeTree(last_active)\r\nORDER BY (wallet_uid)\r\nPOPULATE\r\nAS \r\nSELECT\r\n    wallet_uid, toDate(created_at) as last_active\r\nFROM queues.client_event\r\nWHERE \r\nevent IN ('MW: Home', 'LoyaltyCard: Home', 'MW: Launch', 'MW: First-Launch', 'MW: Loading: Shown')\r\nand wallet_uid != '';\r\n```\r\n\r\nAfter creation I have inserted 12mln records in butches of 50k. Like that\r\n```\r\ninsert into targeting_service_mv.ts_last_active_wallet (wallet_uid, last_active) values (....)\r\n```\r\n\r\n**Expected behavior**\r\nOPTIMIZE executes w/o exceptions, table re merges (records with same wallet_uid but earlier last_active was deleted)\r\n\r\n**Error message and/or stacktrace**\r\n\r\n```\r\nru.yandex.clickhouse.except.ClickHouseException: ClickHouse exception, code: 365, host: 168.63.64.61, port: 8123; Code: 365, e.displayText() = DB::Exception: Output of TreeExecutor is not sorted (version 20.4.4.18 (official build))\r\n\r\n\tat ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:58)\r\n\tat ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:28)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.checkForErrorAndThrow(ClickHouseStatementImpl.java:875)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.getInputStream(ClickHouseStatementImpl.java:616)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:117)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:100)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:95)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.executeQuery(ClickHouseStatementImpl.java:90)\r\n\tat ru.yandex.clickhouse.ClickHouseStatementImpl.execute(ClickHouseStatementImpl.java:226)\r\n\tat org.apache.commons.dbcp2.DelegatingStatement.execute(DelegatingStatement.java:291)\r\n\tat org.apache.commons.dbcp2.DelegatingStatement.execute(DelegatingStatement.java:291)\r\n\tat org.apache.zeppelin.jdbc.JDBCInterpreter.executeSql(JDBCInterpreter.java:736)\r\n\tat org.apache.zeppelin.jdbc.JDBCInterpreter.interpret(JDBCInterpreter.java:819)\r\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:103)\r\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:632)\r\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\r\n\tat org.apache.zeppelin.scheduler.ParallelScheduler$JobRunner.run(ParallelScheduler.java:162)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.Throwable: Code: 365, e.displayText() = DB::Exception: Output of TreeExecutor is not sorted (version 20.4.4.18 (official build))\r\n\r\n\tat ru.yandex.clickhouse.except.ClickHouseExceptionSpecifier.specify(ClickHouseExceptionSpecifier.java:53)\r\n\t... 23 more\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11568",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11568/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11568/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11568/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11568",
    "id": 636029910,
    "node_id": "MDU6SXNzdWU2MzYwMjk5MTA=",
    "number": 11568,
    "title": "using prebuild clickhouse , run aarch64 platform in huawei arm cloud, cat not run",
    "user": {
      "login": "bookeezhou",
      "id": 4371431,
      "node_id": "MDQ6VXNlcjQzNzE0MzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4371431?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bookeezhou",
      "html_url": "https://github.com/bookeezhou",
      "followers_url": "https://api.github.com/users/bookeezhou/followers",
      "following_url": "https://api.github.com/users/bookeezhou/following{/other_user}",
      "gists_url": "https://api.github.com/users/bookeezhou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bookeezhou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bookeezhou/subscriptions",
      "organizations_url": "https://api.github.com/users/bookeezhou/orgs",
      "repos_url": "https://api.github.com/users/bookeezhou/repos",
      "events_url": "https://api.github.com/users/bookeezhou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bookeezhou/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1273656645,
        "node_id": "MDU6TGFiZWwxMjczNjU2NjQ1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/alternative%20build",
        "name": "alternative build",
        "color": "fef2c0",
        "default": false,
        "description": ""
      },
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-10T08:07:03Z",
    "updated_at": "2020-06-16T11:59:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "when i download prebuild clickhouse from office prebuild clickhouse github.\r\nat huawei arm platform. generate the follow message ,\r\n\r\n```\r\n[root@ecs-kc1-large-2-linux-20200601100404 ck-office-arm-bin]# ./clickhouse server --version\r\nClickHouse server version 20.5.1.3676.\r\n\r\n[root@ecs-kc1-large-2-linux-20200601100404 ck-office-arm-bin]# cat /etc/redhat-release \r\nCentOS Linux release 7.6.1810 (AltArch) \r\n\r\n[root@ecs-kc1-large-2-linux-20200601100404 ck-office-arm-bin]# ./clickhouse server \r\nProcessing configuration file 'config.xml'.\r\nInclude not found: clickhouse_remote_servers\r\nInclude not found: clickhouse_compression\r\nLogging trace to /var/log/clickhouse-server/clickhouse-server.log\r\nLogging errors to /var/log/clickhouse-server/clickhouse-server.err.log\r\nLogging trace to console\r\n2020.06.10 16:03:47.826981 [ 5841 ] {} <Trace> Pipe: Pipe capacity is 1.00 MiB\r\n2020.06.10 16:03:47.831056 [ 5841 ] {} <Information> : Starting ClickHouse 20.5.1.3676 with revision 54435, PID 5841\r\n2020.06.10 16:03:47.831121 [ 5841 ] {} <Information> Application: starting up\r\n2020.06.10 16:03:47.835059 [ 5841 ] {} <Trace> Application: Will mlockall to prevent executable memory from being paged out. It may take a few seconds.\r\n2020.06.10 16:03:47.951227 [ 5841 ] {} <Trace> Application: The memory map of clickhouse executable has been mlock'ed\r\n2020.06.10 16:03:47.951405 [ 5841 ] {} <Debug> Application: rlimit on number of file descriptors is 65535\r\n2020.06.10 16:03:47.951426 [ 5841 ] {} <Debug> Application: Initializing DateLUT.\r\n2020.06.10 16:03:47.951438 [ 5841 ] {} <Trace> Application: Initialized DateLUT with time zone 'Asia/Shanghai'.\r\n2020.06.10 16:03:47.951469 [ 5841 ] {} <Debug> Application: Setting up /var/lib/clickhouse/tmp/ to store temporary data in it\r\n2020.06.10 16:03:47.984302 [ 5841 ] {} <Debug> Application: Configuration parameter 'interserver_http_host' doesn't exist or exists and empty. Will use 'ecs-kc1-large-2-linux-20200601100404' as replica host.\r\n2020.06.10 16:03:47.985004 [ 5841 ] {} <Debug> ConfigReloader: Loading config 'users.xml'\r\nProcessing configuration file 'users.xml'.\r\nInclude not found: networks\r\nSaved preprocessed configuration to '/var/lib/clickhouse//preprocessed_configs/users.xml'.\r\n2020.06.10 16:03:47.986156 [ 5841 ] {} <Debug> ConfigReloader: Loaded config 'users.xml', performing update on configuration\r\n2020.06.10 16:03:47.986702 [ 5841 ] {} <Debug> ConfigReloader: Loaded config 'users.xml', performed update on configuration\r\n2020.06.10 16:03:47.986800 [ 5841 ] {} <Warning> Access(disk): File /var/lib/clickhouse/access/users.list doesn't exist\r\n2020.06.10 16:03:47.987294 [ 5841 ] {} <Warning> Access(disk): Recovering lists in directory /var/lib/clickhouse/access/\r\n2020.06.10 16:03:47.987458 [ 5841 ] {} <Information> Application: Uncompressed cache size was lowered to 1.70 GiB because the system has low amount of memory\r\n2020.06.10 16:03:47.987510 [ 5841 ] {} <Information> Application: Mark cache size was lowered to 1.70 GiB because the system has low amount of memory\r\n2020.06.10 16:03:47.987571 [ 5841 ] {} <Information> Application: Setting max_server_memory_usage was set to 3.06 GiB\r\n2020.06.10 16:03:47.987588 [ 5841 ] {} <Information> Application: Loading metadata from /var/lib/clickhouse/\r\n2020.06.10 16:03:47.994875 [ 5841 ] {} <Information> DatabaseOrdinary (default): Total 0 tables and 0 dictionaries.\r\n2020.06.10 16:03:47.994912 [ 5841 ] {} <Information> DatabaseOrdinary (default): Starting up tables.\r\n2020.06.10 16:03:47.994972 [ 5841 ] {} <Information> BackgroundSchedulePool/BgSchPool: Create BackgroundSchedulePool with 16 threads\r\n2020.06.10 16:03:47.995650 [ 5841 ] {} <Debug> Application: Loaded metadata.\r\n2020.06.10 16:03:47.995685 [ 5841 ] {} <Trace> Pipe: Pipe capacity is 1.00 MiB\r\n2020.06.10 16:03:47.996119 [ 5841 ] {} <Information> Application: Listening for http://[::1]:8123\r\n2020.06.10 16:03:47.996190 [ 5841 ] {} <Information> Application: Listening for connections with native protocol (tcp): [::1]:9000\r\n2020.06.10 16:03:47.996241 [ 5841 ] {} <Information> Application: Listening for replica communication (interserver): http://[::1]:9009\r\n2020.06.10 16:03:47.996358 [ 5844 ] {} <Trace> BaseDaemon: Received signal 6\r\n2020.06.10 16:03:47.996455 [ 5873 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.06.10 16:03:47.996502 [ 5873 ] {} <Fatal> BaseDaemon: (version 20.5.1.3676) (from thread 5841) (no query) Received signal Aborted (6).\r\n2020.06.10 16:03:47.996524 [ 5873 ] {} <Fatal> BaseDaemon: \r\n2020.06.10 16:03:47.996544 [ 5873 ] {} <Fatal> BaseDaemon: Stack trace: 0xffffaded5228\r\n2020.06.10 16:03:48.087081 [ 5873 ] {} <Fatal> BaseDaemon: 0. raise @ 0x35228 in /usr/lib64/libc-2.17.so\r\n2020.06.10 16:03:55.488047 [ 5846 ] {} <Trace> SystemLog (system.metric_log): Flushing system log, 8 entries to flush\r\n2020.06.10 16:03:55.488122 [ 5846 ] {} <Debug> SystemLog (system.metric_log): Creating new table system.metric_log for MetricLog\r\n2020.06.10 16:03:55.491313 [ 5846 ] {} <Information> BackgroundProcessingPool: Create BackgroundProcessingPool with 16 threads\r\n2020.06.10 16:03:55.491909 [ 5846 ] {} <Debug> system.metric_log: Loading data parts\r\n2020.06.10 16:03:55.492037 [ 5846 ] {} <Debug> system.metric_log: Loaded data parts (0 items)\r\n2020.06.10 16:03:55.496817 [ 5846 ] {} <Debug> DiskLocal: Reserving 1.00 MiB on disk `default`, having unreserved 29.05 GiB.\r\n2020.06.10 16:03:55.498329 [ 5846 ] {} <Trace> system.metric_log: Renaming temporary part tmp_insert_202006_1_1_0 to 202006_1_1_0.\r\n2020.06.10 16:03:55.498699 [ 5846 ] {} <Trace> SystemLog (system.metric_log): Flushed system log\r\nAborted (core dumped)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11567",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11567/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11567/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11567/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11567",
    "id": 635982007,
    "node_id": "MDU6SXNzdWU2MzU5ODIwMDc=",
    "number": 11567,
    "title": "Is there a bug in kafka-engined tables with AvroConfluent format?",
    "user": {
      "login": "AlirezaGhadimi",
      "id": 6408102,
      "node_id": "MDQ6VXNlcjY0MDgxMDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6408102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlirezaGhadimi",
      "html_url": "https://github.com/AlirezaGhadimi",
      "followers_url": "https://api.github.com/users/AlirezaGhadimi/followers",
      "following_url": "https://api.github.com/users/AlirezaGhadimi/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlirezaGhadimi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlirezaGhadimi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlirezaGhadimi/subscriptions",
      "organizations_url": "https://api.github.com/users/AlirezaGhadimi/orgs",
      "repos_url": "https://api.github.com/users/AlirezaGhadimi/repos",
      "events_url": "https://api.github.com/users/AlirezaGhadimi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlirezaGhadimi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1334071168,
        "node_id": "MDU6TGFiZWwxMzM0MDcxMTY4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-kafka",
        "name": "comp-kafka",
        "color": "b5bcff",
        "default": false,
        "description": "Kafka Engine"
      },
      {
        "id": 2132806078,
        "node_id": "MDU6TGFiZWwyMTMyODA2MDc4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.5-affected",
        "name": "v20.5-affected",
        "color": "8236aa",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-06-10T06:54:59Z",
    "updated_at": "2020-06-25T20:15:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nRecently, we have started using kafka engine in order to read a Avro-serialized kafka topic. We have set the schema URL via \"format_avro_schema_registry_url\" and also, we have set kafka engine related settings such as kafka_broker_list, kafka_topic_list, etc. Specifically, we have set kafka_format = 'AvroConfluent'. Now, the kafka-engined table works fine and data is collected in a readable manner, but, when a simple MATERIALIZED VIEW is used in order to transfer data to a final table, it remains empty and \"Empty Schema Registry URL\" error is reported in Clickhouse log. It seems that there is a kind of bug."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11566/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11566",
    "id": 635978158,
    "node_id": "MDU6SXNzdWU2MzU5NzgxNTg=",
    "number": 11566,
    "title": "Handling heavy requests concurrently ",
    "user": {
      "login": "maison2710",
      "id": 8477722,
      "node_id": "MDQ6VXNlcjg0Nzc3MjI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8477722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maison2710",
      "html_url": "https://github.com/maison2710",
      "followers_url": "https://api.github.com/users/maison2710/followers",
      "following_url": "https://api.github.com/users/maison2710/following{/other_user}",
      "gists_url": "https://api.github.com/users/maison2710/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maison2710/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maison2710/subscriptions",
      "organizations_url": "https://api.github.com/users/maison2710/orgs",
      "repos_url": "https://api.github.com/users/maison2710/repos",
      "events_url": "https://api.github.com/users/maison2710/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maison2710/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1575085465,
        "node_id": "MDU6TGFiZWwxNTc1MDg1NDY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour",
        "name": "unexpected behaviour",
        "color": "e088ca",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-10T06:48:11Z",
    "updated_at": "2020-06-10T16:27:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The context is that we have a dashboard of 10 charts, which make query requests to ClickHouse. Each query is only performed in 1 table using group by, order by. \r\n\r\nIf we run each query individually, it is always successful and may take 10-20 seconds. However, when the whole dashboard is loaded, multiple request will be sent to CH at same time and put a high load on ClickHouse. Sometimes, it makes the ClickHouse server terminate due to OOM.\r\n\r\nSo my question is how ClickHouse handle the scenario when there are multiple heavy queries concurrently? How can we avoid OOM in such case?\r\n\r\nFor our ClickHouse setting, we have cluster of 3 instances, each have 8 cpus and 28 GB RAM. \r\nI configure `max_bytes_before_external_sort` to be 8GB and `max_bytes_before_external_group_by` to be 5GB. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11565",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11565/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11565/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11565/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11565",
    "id": 635926991,
    "node_id": "MDU6SXNzdWU2MzU5MjY5OTE=",
    "number": 11565,
    "title": "Extend load_balancing first_or_random to first_2th_or_random",
    "user": {
      "login": "qixiaogang",
      "id": 22985047,
      "node_id": "MDQ6VXNlcjIyOTg1MDQ3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/22985047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qixiaogang",
      "html_url": "https://github.com/qixiaogang",
      "followers_url": "https://api.github.com/users/qixiaogang/followers",
      "following_url": "https://api.github.com/users/qixiaogang/following{/other_user}",
      "gists_url": "https://api.github.com/users/qixiaogang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qixiaogang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qixiaogang/subscriptions",
      "organizations_url": "https://api.github.com/users/qixiaogang/orgs",
      "repos_url": "https://api.github.com/users/qixiaogang/repos",
      "events_url": "https://api.github.com/users/qixiaogang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qixiaogang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-10T04:55:05Z",
    "updated_at": "2020-06-23T03:28:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Use case**\r\nIn https://clickhouse.tech/docs/en/operations/settings/settings/#load_balancing-first_or_random, `first_or_random` works for 1 replica per AZ, but doesn't work for 2 replicas per AZ.\r\nLet's say, there are two AZs (A and B), and 1 shard and 2 replicas in each AZ. 4 hosts are like below.\r\n```\r\nA_shard1_replicas1\r\nA_shard1_replicas2\r\nB_shard1_replicas1\r\nB_shard1_replicas2\r\n```\r\nConfigure load_balancing = first_or_random\r\nIn AZ A, remote_servers.xml is \r\n```\r\n<yandex>\r\n    <remote_servers>\r\n        <cross-az>\r\n            <shard>\r\n                <internal_replication>true</internal_replication>\r\n                <replica>\r\n                    <host>A_shard1_replicas1</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n                <replica>\r\n                    <host>A_shard1_replicas2</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n                <replica>\r\n                    <host>B_shard1_replicas1</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n                <replica>\r\n                    <host>B_shard1_replicas2</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n            </shard>\r\n        </cross-az>\r\n    </remote_servers>\r\n</yandex>\r\n```\r\nIn AZ B, remote_servers.xml is\r\n```\r\n<yandex>\r\n    <remote_servers>\r\n        <cross-az>\r\n            <shard>\r\n                <internal_replication>true</internal_replication>\r\n                <replica>\r\n                    <host>B_shard1_replicas1</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n                <replica>\r\n                    <host>B_shard1_replicas2</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n                <replica>\r\n                    <host>A_shard1_replicas1</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n                <replica>\r\n                    <host>A_shard1_replicas2</host>\r\n                    <port>9000</port>\r\n                </replica>\r\n            </shard>\r\n        </cross-az>\r\n    </remote_servers>\r\n</yandex>\r\n```\r\nIn AZ A, if `A_shard1_replicas1` is unavailable, then the first_or_random algorithm chooses randomly from the left 3 hosts, but it is better to choose `A_shard1_replicas2`. \r\n\r\n**Describe the solution you'd like**\r\nIn AZ A, we want first_2th_or_random load_balance, which will act as below:\r\n- If `A_shard1_replicas1` and `A_shard1_replicas2` are available, randomly choose one of them, \r\n- If one of `A_shard1_replicas1` and `A_shard1_replicas2` is available, choose the available one,\r\n- If `A_shard1_replicas1` and `A_shard1_replicas2` are unavailable, randomly choose one of `B_shard1_replicas1` and `B_shard1_replicas2`\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11564",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11564/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11564/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11564/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11564",
    "id": 635913235,
    "node_id": "MDU6SXNzdWU2MzU5MTMyMzU=",
    "number": 11564,
    "title": "DB::KeyCondition::mayBeTrueInRange() is a bottleneck in a PK lookup",
    "user": {
      "login": "bobrik",
      "id": 89186,
      "node_id": "MDQ6VXNlcjg5MTg2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobrik",
      "html_url": "https://github.com/bobrik",
      "followers_url": "https://api.github.com/users/bobrik/followers",
      "following_url": "https://api.github.com/users/bobrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobrik/subscriptions",
      "organizations_url": "https://api.github.com/users/bobrik/orgs",
      "repos_url": "https://api.github.com/users/bobrik/repos",
      "events_url": "https://api.github.com/users/bobrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 756395244,
        "node_id": "MDU6TGFiZWw3NTYzOTUyNDQ=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance",
        "name": "performance",
        "color": "c2e0c6",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "CurtizJ",
      "id": 20361854,
      "node_id": "MDQ6VXNlcjIwMzYxODU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20361854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CurtizJ",
      "html_url": "https://github.com/CurtizJ",
      "followers_url": "https://api.github.com/users/CurtizJ/followers",
      "following_url": "https://api.github.com/users/CurtizJ/following{/other_user}",
      "gists_url": "https://api.github.com/users/CurtizJ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CurtizJ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CurtizJ/subscriptions",
      "organizations_url": "https://api.github.com/users/CurtizJ/orgs",
      "repos_url": "https://api.github.com/users/CurtizJ/repos",
      "events_url": "https://api.github.com/users/CurtizJ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CurtizJ/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "CurtizJ",
        "id": 20361854,
        "node_id": "MDQ6VXNlcjIwMzYxODU0",
        "avatar_url": "https://avatars0.githubusercontent.com/u/20361854?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CurtizJ",
        "html_url": "https://github.com/CurtizJ",
        "followers_url": "https://api.github.com/users/CurtizJ/followers",
        "following_url": "https://api.github.com/users/CurtizJ/following{/other_user}",
        "gists_url": "https://api.github.com/users/CurtizJ/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/CurtizJ/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/CurtizJ/subscriptions",
        "organizations_url": "https://api.github.com/users/CurtizJ/orgs",
        "repos_url": "https://api.github.com/users/CurtizJ/repos",
        "events_url": "https://api.github.com/users/CurtizJ/events{/privacy}",
        "received_events_url": "https://api.github.com/users/CurtizJ/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-10T04:14:23Z",
    "updated_at": "2020-06-21T18:26:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I'm trying to make \"last X things\" query work reasonably fast on different ranges.\r\n\r\nMy schema can be reduced to:\r\n\r\n```sql\r\nCREATE TABLE jaeger_index_v2 (\r\n  timestamp DateTime CODEC(Delta, ZSTD(1)),\r\n  antiTimestamp Int64 MATERIALIZED -toUnixTimestamp(timestamp) CODEC(Delta, ZSTD(1)),\r\n  traceID String CODEC(ZSTD(1)),\r\n  service LowCardinality(String) CODEC(ZSTD(1))\r\n) ENGINE MergeTree()\r\nPARTITION BY toDate(toDateTime(-antiTimestamp))\r\nORDER BY (service, antiTimestamp)\r\nSETTINGS index_granularity=1024\r\n```\r\n\r\nIn #11541 you can find the reasoning behind `antiTimestamp`, but here it's only important that the primary key of my table is `(service, antiTimestamp)`.\r\n\r\nThere are two queries I'm interested in:\r\n\r\n* Last 10 unique `traceID`, 1h window: ~0.6s runtime.\r\n\r\n```sql\r\nSELECT DISTINCT traceID\r\n  FROM jaeger_index_v2\r\n WHERE service = 'nginx-fl'\r\n   AND antiTimestamp <= -toUnixTimestamp(now() - 3600)\r\n   AND antiTimestamp >= -toUnixTimestamp(now())\r\n ORDER BY service,\r\n          antiTimestamp\r\n LIMIT 10\r\n```\r\n\r\n<details>\r\n  <summary>Trace output</summary>\r\n\r\n```\r\n$ echo \"SELECT DISTINCT traceID FROM jaeger_index_v2 PREWHERE service = 'nginx-fl' AND antiTimestamp between -toUnixTimestamp(now()) and -toUnixTimestamp(now() - 3600) ORDER BY service, antiTimestamp LIMIT 10\" | docker exec -i clickhouse-jaeger clickhouse-client --send_logs_level=trace --database jaeger\r\n[36ssds310] 2020.06.10 04:06:19.119444 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> executeQuery: (from 127.0.0.1:61902) SELECT DISTINCT traceID FROM jaeger_index_v2 PREWHERE (service = 'nginx-fl') AND ((antiTimestamp >= (-toUnixTimestamp(now()))) AND (antiTimestamp <= (-toUnixTimestamp(now() - 3600)))) ORDER BY service ASC, antiTimestamp ASC LIMIT 10\r\n[36ssds310] 2020.06.10 04:06:19.121585 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> ContextAccess (default): Access granted: SELECT(antiTimestamp, traceID, service) ON jaeger.jaeger_index_v2\r\n[36ssds310] 2020.06.10 04:06:19.122545 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): Key condition: (column 0 in ['nginx-fl', 'nginx-fl']), (column 1 in [-1591761979, +inf)), (column 1 in (-inf, -1591758379]), and, and\r\n[36ssds310] 2020.06.10 04:06:19.122590 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): MinMax index condition: unknown, (column 0 in [-1591761979, +inf)), (column 0 in (-inf, -1591758379]), and, and\r\n[36ssds310] 2020.06.10 04:06:19.494531 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): Selected 29 parts by date, 29 parts by key, 250017 marks to read from 29 ranges\r\n[36ssds310] 2020.06.10 04:06:19.494785 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1299820_1299820_0, approx. 6144, up to 6144 rows starting from 4096\r\n[36ssds310] 2020.06.10 04:06:19.494864 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1299819_1299819_0, approx. 6144, up to 6144 rows starting from 4096\r\n[36ssds310] 2020.06.10 04:06:19.494933 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1299818_1299818_0, approx. 5120, up to 5120 rows starting from 4096\r\n[36ssds310] 2020.06.10 04:06:19.495000 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1299817_1299817_0, approx. 6144, up to 6144 rows starting from 3072\r\n[36ssds310] 2020.06.10 04:06:19.495066 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 5 ranges from part 20200610_1299811_1299816_1, approx. 30720, up to 30720 rows starting from 25600\r\n[36ssds310] 2020.06.10 04:06:19.495132 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 5 ranges from part 20200610_1299805_1299810_1, approx. 30720, up to 30720 rows starting from 25600\r\n[36ssds310] 2020.06.10 04:06:19.495191 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 5 ranges from part 20200610_1299799_1299804_1, approx. 31744, up to 31744 rows starting from 23552\r\n[36ssds310] 2020.06.10 04:06:19.495254 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 6 ranges from part 20200610_1299793_1299798_1, approx. 32768, up to 32768 rows starting from 23552\r\n[36ssds310] 2020.06.10 04:06:19.495320 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 7 ranges from part 20200610_1299776_1299792_2, approx. 89088, up to 89088 rows starting from 68608\r\n[36ssds310] 2020.06.10 04:06:19.495391 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299716_1299775_3, approx. 299008, up to 299008 rows starting from 252928\r\n[36ssds310] 2020.06.10 04:06:19.495456 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299660_1299715_3, approx. 279552, up to 279552 rows starting from 238592\r\n[36ssds310] 2020.06.10 04:06:19.495531 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299609_1299659_3, approx. 247808, up to 247808 rows starting from 224256\r\n[36ssds310] 2020.06.10 04:06:19.495602 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299547_1299608_3, approx. 325632, up to 325632 rows starting from 241664\r\n[36ssds310] 2020.06.10 04:06:19.495669 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299310_1299546_4, approx. 1239040, up to 1239040 rows starting from 940032\r\n[36ssds310] 2020.06.10 04:06:19.496741 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299122_1299309_4, approx. 952320, up to 952320 rows starting from 780288\r\n[36ssds310] 2020.06.10 04:06:19.496813 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298940_1299121_4, approx. 903168, up to 903168 rows starting from 778240\r\n[36ssds310] 2020.06.10 04:06:19.496892 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298881_1298939_3, approx. 289792, up to 289792 rows starting from 256000\r\n[36ssds310] 2020.06.10 04:06:19.496957 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298776_1298880_4, approx. 500736, up to 500736 rows starting from 474112\r\n[36ssds310] 2020.06.10 04:06:19.497020 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298726_1298775_3, approx. 260096, up to 260096 rows starting from 200704\r\n[36ssds310] 2020.06.10 04:06:19.497084 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298501_1298725_4, approx. 1156096, up to 1156096 rows starting from 917504\r\n[36ssds310] 2020.06.10 04:06:19.497140 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298318_1298500_4, approx. 925696, up to 925696 rows starting from 761856\r\n[36ssds310] 2020.06.10 04:06:19.497204 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298064_1298317_4, approx. 1274880, up to 1274880 rows starting from 1070080\r\n[36ssds310] 2020.06.10 04:06:19.497278 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1296990_1298063_5, approx. 1775616, up to 1775616 rows starting from 4359168\r\n[36ssds310] 2020.06.10 04:06:19.497530 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1296990_1298063_5, approx. 3749888, up to 3749888 rows starting from 6134784\r\n[36ssds310] 2020.06.10 04:06:19.497622 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1295858_1296989_5, approx. 5734400, up to 5734400 rows starting from 4700160\r\n[36ssds310] 2020.06.10 04:06:19.497722 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1294629_1295857_5, approx. 1183744, up to 1183744 rows starting from 5324800\r\n[36ssds310] 2020.06.10 04:06:19.497833 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1294629_1295857_5, approx. 4847616, up to 4847616 rows starting from 6508544\r\n[36ssds310] 2020.06.10 04:06:19.497904 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1293763_1294628_5, approx. 4402176, up to 4402176 rows starting from 3566592\r\n[36ssds310] 2020.06.10 04:06:19.497976 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1287217_1293762_7, approx. 1418240, up to 1418240 rows starting from 26479616\r\n[36ssds310] 2020.06.10 04:06:19.498064 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1287217_1293762_7, approx. 10668032, up to 10668032 rows starting from 27897856\r\n[36ssds310] 2020.06.10 04:06:19.498142 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1287217_1293762_7, approx. 10668032, up to 10668032 rows starting from 38565888\r\n[36ssds310] 2020.06.10 04:06:19.498254 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1287217_1293762_7, approx. 10668032, up to 10668032 rows starting from 49233920\r\n[36ssds310] 2020.06.10 04:06:19.498327 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1287217_1293762_7, approx. 328704, up to 328704 rows starting from 59901952\r\n[36ssds310] 2020.06.10 04:06:19.498396 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10339328, up to 10339328 rows starting from 98164736\r\n[36ssds310] 2020.06.10 04:06:19.498527 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 108504064\r\n[36ssds310] 2020.06.10 04:06:19.498631 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 119172096\r\n[36ssds310] 2020.06.10 04:06:19.498732 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 129840128\r\n[36ssds310] 2020.06.10 04:06:19.498847 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 140508160\r\n[36ssds310] 2020.06.10 04:06:19.498946 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 151176192\r\n[36ssds310] 2020.06.10 04:06:19.499049 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 161844224\r\n[36ssds310] 2020.06.10 04:06:19.499142 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 172512256\r\n[36ssds310] 2020.06.10 04:06:19.499232 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 183180288\r\n[36ssds310] 2020.06.10 04:06:19.499332 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 193848320\r\n[36ssds310] 2020.06.10 04:06:19.499413 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 204516352\r\n[36ssds310] 2020.06.10 04:06:19.499520 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 10668032, up to 10668032 rows starting from 215184384\r\n[36ssds310] 2020.06.10 04:06:19.499614 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 654336, up to 654336 rows starting from 225852416\r\n[36ssds310] 2020.06.10 04:06:19.499714 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 10013696, up to 10013696 rows starting from 100039680\r\n[36ssds310] 2020.06.10 04:06:19.499837 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 10668032, up to 10668032 rows starting from 110053376\r\n[36ssds310] 2020.06.10 04:06:19.499909 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 10668032, up to 10668032 rows starting from 120721408\r\n[36ssds310] 2020.06.10 04:06:19.499972 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 10668032, up to 10668032 rows starting from 131389440\r\n[36ssds310] 2020.06.10 04:06:19.500045 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 10668032, up to 10668032 rows starting from 142057472\r\n[36ssds310] 2020.06.10 04:06:19.500124 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 10652672, up to 10652672 rows starting from 152725504\r\n[36ssds310] 2020.06.10 04:06:19.500242 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n28baf857f540ac76\r\n00e89427a40aed20\r\n24596c03d40a825d\r\neb766c4f037f10ce\r\n31944fce16174447\r\nb20232192914afc1\r\n95ca0f9b5476c2cb\r\n85b7756978a73254\r\n50653aba8fb888ed\r\n91d9ff11ada4ec47\r\n[36ssds310] 2020.06.10 04:06:19.631431 [ 162 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 4809 rows in 0.13 sec., 36991.24 rows/sec., 66.58 MB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.631598 [ 162 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.13 sec., 473777.43 rows/sec., 28.15 MB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.631693 [ 162 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.13 sec., 473777.43 rows/sec., 28.15 MB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.631807 [ 162 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.13 sec., 480955.87 rows/sec., 28.58 MB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.638128 [ 129 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 150059 rows in 0.14 sec., 1064217.64 rows/sec., 61.38 MB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.639514 [ 181 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MergingSortedTransform: Merge sorted 1 blocks, 109214 rows in 0.14 sec., 769090.57 rows/sec., 30.47 MB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.642601 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Information> executeQuery: Read 3196448 rows, 103.71 MiB in 0.523 sec., 6111478 rows/sec., 198.29 MiB/sec.\r\n[36ssds310] 2020.06.10 04:06:19.642791 [ 134 ] {dd4074bc-33da-423e-a41d-df287f86e280} <Debug> MemoryTracker: Peak memory usage (for query): 214.62 MiB.\r\n```\r\n</details>\r\n\r\n* Last 10 unique `traceID`, 24h window: ~9.5s runtime.\r\n\r\n```\r\nSELECT DISTINCT traceID\r\n  FROM jaeger_index_v2\r\n WHERE service = 'nginx-fl'\r\n   AND antiTimestamp <= -toUnixTimestamp(now() - 3600 * 24)\r\n   AND antiTimestamp >= -toUnixTimestamp(now())\r\n ORDER BY service,\r\n          antiTimestamp\r\n LIMIT 10\r\n```\r\n\r\n<details>\r\n  <summary>Trace output</summary>\r\n\r\n```\r\n$ echo \"SELECT DISTINCT traceID FROM jaeger_index_v2 PREWHERE service = 'nginx-fl' AND antiTimestamp between -toUnixTimestamp(now()) and -toUnixTimestamp(now() - 3600 * 24) ORDER BY service, antiTimestamp LIMIT 10\" | docker exec -i clickhouse-jaeger clickhouse-client --send_logs_level=trace --database jaeger\r\n[36ssds310] 2020.06.10 04:07:14.361998 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> executeQuery: (from 127.0.0.1:62214) SELECT DISTINCT traceID FROM jaeger_index_v2 PREWHERE (service = 'nginx-fl') AND ((antiTimestamp >= (-toUnixTimestamp(now()))) AND (antiTimestamp <= (-toUnixTimestamp(now() - (3600 * 24))))) ORDER BY service ASC, antiTimestamp ASC LIMIT 10\r\n[36ssds310] 2020.06.10 04:07:14.371332 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> ContextAccess (default): Access granted: SELECT(antiTimestamp, traceID, service) ON jaeger.jaeger_index_v2\r\n[36ssds310] 2020.06.10 04:07:14.373382 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): Key condition: (column 0 in ['nginx-fl', 'nginx-fl']), (column 1 in [-1591762034, +inf)), (column 1 in (-inf, -1591675634]), and, and\r\n[36ssds310] 2020.06.10 04:07:14.373459 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): MinMax index condition: unknown, (column 0 in [-1591762034, +inf)), (column 0 in (-inf, -1591675634]), and, and\r\n[36ssds310] 2020.06.10 04:07:22.660561 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): Selected 53 parts by date, 50 parts by key, 6756938 marks to read from 50 ranges\r\n[36ssds310] 2020.06.10 04:07:22.660811 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1300555_1300555_0, approx. 6144, up to 6144 rows starting from 3072\r\n[36ssds310] 2020.06.10 04:07:22.660906 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1300554_1300554_0, approx. 6144, up to 6144 rows starting from 4096\r\n[36ssds310] 2020.06.10 04:07:22.660990 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1300553_1300553_0, approx. 5120, up to 5120 rows starting from 4096\r\n[36ssds310] 2020.06.10 04:07:22.661063 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 3 ranges from part 20200610_1300552_1300552_0, approx. 6144, up to 6144 rows starting from 4096\r\n[36ssds310] 2020.06.10 04:07:22.661145 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 5 ranges from part 20200610_1300547_1300551_1, approx. 26624, up to 26624 rows starting from 19456\r\n[36ssds310] 2020.06.10 04:07:22.661228 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 5 ranges from part 20200610_1300541_1300546_1, approx. 31744, up to 31744 rows starting from 24576\r\n[36ssds310] 2020.06.10 04:07:22.661311 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 7 ranges from part 20200610_1300524_1300540_2, approx. 84992, up to 84992 rows starting from 71680\r\n[36ssds310] 2020.06.10 04:07:22.661393 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 7 ranges from part 20200610_1300507_1300523_2, approx. 88064, up to 88064 rows starting from 68608\r\n[36ssds310] 2020.06.10 04:07:22.661465 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1300436_1300506_3, approx. 359424, up to 359424 rows starting from 295936\r\n[36ssds310] 2020.06.10 04:07:22.661559 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1300386_1300435_3, approx. 246784, up to 246784 rows starting from 214016\r\n[36ssds310] 2020.06.10 04:07:22.661644 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1300089_1300385_4, approx. 1539072, up to 1539072 rows starting from 1189888\r\n[36ssds310] 2020.06.10 04:07:22.661725 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 7 ranges from part 20200610_1300072_1300088_2, approx. 89088, up to 89088 rows starting from 68608\r\n[36ssds310] 2020.06.10 04:07:22.661804 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 7 ranges from part 20200610_1300055_1300071_2, approx. 90112, up to 90112 rows starting from 66560\r\n[36ssds310] 2020.06.10 04:07:22.661869 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1300005_1300054_3, approx. 252928, up to 252928 rows starting from 208896\r\n[36ssds310] 2020.06.10 04:07:22.661949 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299805_1300004_4, approx. 976896, up to 976896 rows starting from 866304\r\n[36ssds310] 2020.06.10 04:07:22.662029 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299547_1299804_4, approx. 1299456, up to 1299456 rows starting from 1076224\r\n[36ssds310] 2020.06.10 04:07:22.662108 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299310_1299546_4, approx. 1239040, up to 1239040 rows starting from 940032\r\n[36ssds310] 2020.06.10 04:07:22.662190 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1299122_1299309_4, approx. 952320, up to 952320 rows starting from 780288\r\n[36ssds310] 2020.06.10 04:07:22.662269 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298940_1299121_4, approx. 903168, up to 903168 rows starting from 778240\r\n[36ssds310] 2020.06.10 04:07:22.662339 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298881_1298939_3, approx. 289792, up to 289792 rows starting from 256000\r\n[36ssds310] 2020.06.10 04:07:22.662418 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298776_1298880_4, approx. 500736, up to 500736 rows starting from 474112\r\n[36ssds310] 2020.06.10 04:07:22.662503 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298726_1298775_3, approx. 260096, up to 260096 rows starting from 200704\r\n[36ssds310] 2020.06.10 04:07:22.662584 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298501_1298725_4, approx. 1156096, up to 1156096 rows starting from 917504\r\n[36ssds310] 2020.06.10 04:07:22.662668 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298318_1298500_4, approx. 925696, up to 925696 rows starting from 761856\r\n[36ssds310] 2020.06.10 04:07:22.662733 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1298064_1298317_4, approx. 1274880, up to 1274880 rows starting from 1070080\r\n[36ssds310] 2020.06.10 04:07:22.662813 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1296990_1298063_5, approx. 5525504, up to 5525504 rows starting from 4359168\r\n[36ssds310] 2020.06.10 04:07:22.662892 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1295858_1296989_5, approx. 5734400, up to 5734400 rows starting from 4700160\r\n[36ssds310] 2020.06.10 04:07:22.662979 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1294629_1295857_5, approx. 6031360, up to 6031360 rows starting from 5324800\r\n[36ssds310] 2020.06.10 04:07:22.663065 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1293763_1294628_5, approx. 4402176, up to 4402176 rows starting from 3566592\r\n[36ssds310] 2020.06.10 04:07:22.663130 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1287217_1293762_7, approx. 33751040, up to 33751040 rows starting from 26479616\r\n[36ssds310] 2020.06.10 04:07:22.663218 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1262566_1287216_7, approx. 128343040, up to 128343040 rows starting from 98164736\r\n[36ssds310] 2020.06.10 04:07:22.663338 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 91898880, up to 91898880 rows starting from 100039680\r\n[36ssds310] 2020.06.10 04:07:22.663804 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1237164_1262565_7, approx. 41167872, up to 41167872 rows starting from 191938560\r\n[36ssds310] 2020.06.10 04:07:22.663931 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1211723_1237163_7, approx. 136497152, up to 136497152 rows starting from 96418816\r\n[36ssds310] 2020.06.10 04:07:22.664029 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1083678_1211722_14, approx. 110631936, up to 110631936 rows starting from 474645504\r\n[36ssds310] 2020.06.10 04:07:22.664144 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1083678_1211722_14, approx. 288296960, up to 288296960 rows starting from 585277440\r\n[36ssds310] 2020.06.10 04:07:22.664222 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200610_1083678_1211722_14, approx. 282084352, up to 282084352 rows starting from 873574400\r\n[36ssds310] 2020.06.10 04:07:22.664299 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 5 ranges from part 20200609_1084082_1283714_1272, approx. 23552, up to 23552 rows starting from 1024\r\n[36ssds310] 2020.06.10 04:07:22.664383 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1083773_1084080_5, approx. 478208, up to 478208 rows starting from 27648\r\n[36ssds310] 2020.06.10 04:07:22.664463 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1083650_1083770_3, approx. 418816, up to 418816 rows starting from 151552\r\n[36ssds310] 2020.06.10 04:07:22.664538 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1083577_1083649_3, approx. 421888, up to 421888 rows starting from 244736\r\n[36ssds310] 2020.06.10 04:07:22.664619 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1083516_1083576_3, approx. 343040, up to 343040 rows starting from 212992\r\n[36ssds310] 2020.06.10 04:07:22.664701 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1082407_1083515_5, approx. 4527104, up to 4527104 rows starting from 3988480\r\n[36ssds310] 2020.06.10 04:07:22.664828 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1082407_1083515_5, approx. 1615872, up to 1615872 rows starting from 8515584\r\n[36ssds310] 2020.06.10 04:07:22.664904 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1051256_1082406_7, approx. 169789440, up to 169789440 rows starting from 114937856\r\n[36ssds310] 2020.06.10 04:07:22.664994 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1018668_1051255_7, approx. 116891648, up to 116891648 rows starting from 120051712\r\n[36ssds310] 2020.06.10 04:07:22.665092 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1018668_1051255_7, approx. 61265920, up to 61265920 rows starting from 236943360\r\n[36ssds310] 2020.06.10 04:07:22.665173 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_875175_1018667_10, approx. 227031040, up to 227031040 rows starting from 520521728\r\n[36ssds310] 2020.06.10 04:07:22.665266 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_875175_1018667_10, approx. 288296960, up to 288296960 rows starting from 747552768\r\n[36ssds310] 2020.06.10 04:07:22.665348 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_875175_1018667_10, approx. 278558720, up to 278558720 rows starting from 1035849728\r\n[36ssds310] 2020.06.10 04:07:22.665432 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_824520_875174_8, approx. 9738240, up to 9738240 rows starting from 176712704\r\n[36ssds310] 2020.06.10 04:07:22.665535 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_824520_875174_8, approx. 277860352, up to 277860352 rows starting from 186450944\r\n[36ssds310] 2020.06.10 04:07:22.665621 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_656996_824519_8, approx. 10436608, up to 10436608 rows starting from 601774080\r\n[36ssds310] 2020.06.10 04:07:22.665709 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_656996_824519_8, approx. 288296960, up to 288296960 rows starting from 612210688\r\n[36ssds310] 2020.06.10 04:07:22.665787 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_656996_824519_8, approx. 288296960, up to 288296960 rows starting from 900507648\r\n[36ssds310] 2020.06.10 04:07:22.665866 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_656996_824519_8, approx. 288296960, up to 288296960 rows starting from 1188804608\r\n[36ssds310] 2020.06.10 04:07:22.665943 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_656996_824519_8, approx. 60943360, up to 60943360 rows starting from 1477101568\r\n[36ssds310] 2020.06.10 04:07:22.666023 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_486578_656995_9, approx. 227353600, up to 227353600 rows starting from 627815424\r\n[36ssds310] 2020.06.10 04:07:22.666125 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_486578_656995_9, approx. 288296960, up to 288296960 rows starting from 855169024\r\n[36ssds310] 2020.06.10 04:07:22.666202 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_486578_656995_9, approx. 288296960, up to 288296960 rows starting from 1143465984\r\n[36ssds310] 2020.06.10 04:07:22.666286 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_486578_656995_9, approx. 132886528, up to 132886528 rows starting from 1431762944\r\n[36ssds310] 2020.06.10 04:07:22.666359 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_350519_486577_9, approx. 155410432, up to 155410432 rows starting from 541052928\r\n[36ssds310] 2020.06.10 04:07:22.666456 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_350519_486577_9, approx. 288296960, up to 288296960 rows starting from 696463360\r\n[36ssds310] 2020.06.10 04:07:22.666544 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_350519_486577_9, approx. 268983296, up to 268983296 rows starting from 984760320\r\n[36ssds310] 2020.06.10 04:07:22.666636 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_234466_350518_8, approx. 19313664, up to 19313664 rows starting from 497026048\r\n[36ssds310] 2020.06.10 04:07:22.666735 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_234466_350518_8, approx. 288296960, up to 288296960 rows starting from 516339712\r\n[36ssds310] 2020.06.10 04:07:22.666811 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_234466_350518_8, approx. 273871872, up to 273871872 rows starting from 804636672\r\n[36ssds310] 2020.06.10 04:07:22.666892 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_122523_234465_9, approx. 14425088, up to 14425088 rows starting from 484709376\r\n[36ssds310] 2020.06.10 04:07:22.666984 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_122523_234465_9, approx. 288296960, up to 288296960 rows starting from 499134464\r\n[36ssds310] 2020.06.10 04:07:22.667049 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_122523_234465_9, approx. 255476736, up to 255476736 rows starting from 787431424\r\n[36ssds310] 2020.06.10 04:07:22.667140 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1_122522_9, approx. 32820224, up to 32820224 rows starting from 528824320\r\n[36ssds310] 2020.06.10 04:07:22.667235 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1_122522_9, approx. 288296960, up to 288296960 rows starting from 561644544\r\n[36ssds310] 2020.06.10 04:07:22.667309 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> MergeTreeSelectProcessor: Reading 8 ranges from part 20200609_1_122522_9, approx. 288274432, up to 288274432 rows starting from 849941504\r\n[36ssds310] 2020.06.10 04:07:22.667443 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n1fd36a43b7271902\r\n0033f08e56b858ab\r\n0016ca40f89258c8\r\na62e14be43cb1c2f\r\ndcb5819b0cc6c229\r\n62fc4f785a0bc041\r\n0ad90f5ca4dce48b\r\n7d76713ce9a7dcc1\r\nfeec2152e982d327\r\na717c839b2d45551\r\n[36ssds310] 2020.06.10 04:07:22.819913 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 4785 rows in 0.15 sec., 31479.36 rows/sec., 56.94 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820041 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.16 sec., 406962.66 rows/sec., 24.18 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820093 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.16 sec., 409588.23 rows/sec., 24.33 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820155 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 64512 rows in 0.16 sec., 416194.49 rows/sec., 24.33 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820166 [ 128 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 64512 rows in 0.15 sec., 418897.05 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820208 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 64512 rows in 0.16 sec., 416194.49 rows/sec., 24.33 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820274 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 64512 rows in 0.15 sec., 418897.05 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820347 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 64512 rows in 0.15 sec., 418897.05 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820420 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.15 sec., 412247.89 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820508 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.15 sec., 412247.89 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820604 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.15 sec., 412247.89 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.820668 [ 129 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 63488 rows in 0.15 sec., 412247.89 rows/sec., 24.49 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.825541 [ 132 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MergingSortedTransform: Merge sorted 2 blocks, 161712 rows in 0.16 sec., 998193.53 rows/sec., 53.43 MB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.829265 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Information> executeQuery: Read 4963872 rows, 161.06 MiB in 8.467 sec., 586255 rows/sec., 19.02 MiB/sec.\r\n[36ssds310] 2020.06.10 04:07:22.829524 [ 134 ] {6f4693c7-3fd7-4533-85f8-beda82826b49} <Debug> MemoryTracker: Peak memory usage (for query): 341.98 MiB.\r\n```\r\n</details>\r\n\r\nBoth are supposed to walk the primary key in forward direction and I expect roughly the same performance. In reality there's a significant difference, which largely boils down to this:\r\n\r\n![image](https://user-images.githubusercontent.com/89186/84225785-de51b580-aa94-11ea-9c59-1c3af719a0b5.png)\r\n\r\nPretty much all the time is spent there (look at the time gaps):\r\n\r\n```\r\n[36ssds310] 2020.06.10 04:03:48.248394 [ 134 ] {8f3e3501-e069-4200-b9fd-bc54a04c6065} <Debug> executeQuery: (from 127.0.0.1:60868) SELECT DISTINCT traceID FROM jaeger_index_v2 PREWHERE (service = 'nginx-fl') AND (antiTimestamp <= (-toUnixTimestamp(now() - (3600 * 24)))) AND (antiTimestamp >= (-toUnixTimestamp(now()))) ORDER BY service ASC, antiTimestamp ASC LIMIT 10\r\n...\r\n[36ssds310] 2020.06.10 04:03:48.253344 [ 134 ] {8f3e3501-e069-4200-b9fd-bc54a04c6065} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): MinMax index condition: unknown, (column 0 in (-inf, -1591675428]), and, (column 0 in [-1591761828, +inf)), and\r\n[36ssds310] 2020.06.10 04:03:55.873758 [ 134 ] {8f3e3501-e069-4200-b9fd-bc54a04c6065} <Debug> jaeger.jaeger_index_v2 (SelectExecutor): Selected 47 parts by date, 44 parts by key, 6743228 marks to read from 44 ranges\r\n...\r\n[36ssds310] 2020.06.10 04:03:55.879881 [ 134 ] {8f3e3501-e069-4200-b9fd-bc54a04c6065} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n...\r\n[36ssds310] 2020.06.10 04:03:56.051030 [ 134 ] {8f3e3501-e069-4200-b9fd-bc54a04c6065} <Debug> MemoryTracker: Peak memory usage (for query): 316.84 MiB.\r\n```\r\n\r\nIf I trace the function:\r\n\r\n```\r\n$ docker exec -it clickhouse-jaeger objdump -T /usr/bin/clickhouse | fgrep mayBeTrueInRange\r\n0000000009374b50 g    DF .text\t000000000000001d  Base        _ZNK2DB12KeyCondition16mayBeTrueInRangeEmPKNS_8FieldRefES3_RKNSt3__16vectorINS4_10shared_ptrIKNS_9IDataTypeEEENS4_9allocatorIS9_EEEE\r\n```\r\n\r\n```\r\n$ echo _ZNK2DB12KeyCondition16mayBeTrueInRangeEmPKNS_8FieldRefES3_RKNSt3__16vectorINS4_10shared_ptrIKNS_9IDataTypeEEENS4_9allocatorIS9_EEEE | c++filt\r\nDB::KeyCondition::mayBeTrueInRange(unsigned long, DB::FieldRef const*, DB::FieldRef const*, std::__1::vector<std::__1::shared_ptr<DB::IDataType const>, std::__1::allocator<std::__1::shared_ptr<DB::IDataType const> > > const&) const\r\n```\r\n\r\n```\r\n$ sudo /usr/share/bcc/tools/funccount /state/var/lib/docker/overlay2/8794eb76eb8d76868fc1602075b0d920abece7c257ece060216aeecf23d115de/merged/usr/bin/clickhouse:_ZNK2DB12KeyCondition16mayBeTrueInRangeEmPKNS_8FieldRefES3_RKNSt3__16vectorINS4_10shared_ptrIKNS_9IDataTypeEEENS4_9allocatorIS9_EEEE\r\n```\r\n\r\nI can see that for 1h query it's called 344871 times, while for 24h query it's called 8346350 times, which happens to be 24.2 times more. My understanding is that range selection from a sorted primary key should be a log2 time, not linear, as it appears to be.\r\n\r\nI'm on Clickhouse v20.4.4.18-stable, but I'm happy to try any commit."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11551/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11551",
    "id": 635361285,
    "node_id": "MDU6SXNzdWU2MzUzNjEyODU=",
    "number": 11551,
    "title": "Directory for table data [...] already exists on replicated table in case of disk failure",
    "user": {
      "login": "YiuRULE",
      "id": 4019437,
      "node_id": "MDQ6VXNlcjQwMTk0Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4019437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YiuRULE",
      "html_url": "https://github.com/YiuRULE",
      "followers_url": "https://api.github.com/users/YiuRULE/followers",
      "following_url": "https://api.github.com/users/YiuRULE/following{/other_user}",
      "gists_url": "https://api.github.com/users/YiuRULE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YiuRULE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YiuRULE/subscriptions",
      "organizations_url": "https://api.github.com/users/YiuRULE/orgs",
      "repos_url": "https://api.github.com/users/YiuRULE/repos",
      "events_url": "https://api.github.com/users/YiuRULE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YiuRULE/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-09T11:50:49Z",
    "updated_at": "2020-06-11T03:40:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Not sure if it's a bug or not, but I prefer to be sure.\r\n\r\n**Describe the bug**\r\nIf we had a disk failure, we cannot recreate the table without removing the node on zookeeper.\r\n\r\n**How to reproduce**\r\nclickhouse-server 20.4\r\n\r\nThe error can be reproduced easily using docker containers. Two containers are present, clickhouse1a and clickhouse1b, both are them are part of the same shard, both of them have a volume, and both of them have an hostname (`clickhouse1a` and `clickhouse1b`).\r\n\r\nWe create a table using the `ON CLUSTER` clause.\r\n\r\n`CREATE TABLE test ON CLUSTER 'cluster' (foo UInt32) Engine = ReplicatedMergeTree('/clickhouse/test', '{replica-name}') PRIMARY KEY foo ORDER BY foo`\r\n\r\nWe insert datas on the table.\r\n\r\n`INSERT INTO test VALUES (1)`\r\n\r\nthen, we stop and remove the container `clickhouse1b`, and after this we remove the volume affiliated to `clickhouse1b`.\r\n\r\nAfter running the container `clickhouse1b` again, and try to recreate the table again, we got this error.\r\n\r\n```\r\nReceived exception from server (version 20.4.3):\r\nCode: 57. DB::Exception: Received from 127.0.0.1:10001. DB::Exception: Directory for table data data/default/test/ already exists.\r\n```\r\n\r\n**Expected behavior**\r\nDifferent way to fix it. ClickHouse could possibly get his metadatas back from zookeeper, or during creation of the table, with a setting or by default, to be less strict in a case that's the same instance with the same schemas create the table again. \r\n\r\n**Error message and/or stacktrace**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11549/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11549",
    "id": 635310353,
    "node_id": "MDU6SXNzdWU2MzUzMTAzNTM=",
    "number": 11549,
    "title": "ClickHouse & Event-based statistics",
    "user": {
      "login": "AlexVo1d",
      "id": 66670376,
      "node_id": "MDQ6VXNlcjY2NjcwMzc2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/66670376?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlexVo1d",
      "html_url": "https://github.com/AlexVo1d",
      "followers_url": "https://api.github.com/users/AlexVo1d/followers",
      "following_url": "https://api.github.com/users/AlexVo1d/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlexVo1d/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlexVo1d/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlexVo1d/subscriptions",
      "organizations_url": "https://api.github.com/users/AlexVo1d/orgs",
      "repos_url": "https://api.github.com/users/AlexVo1d/repos",
      "events_url": "https://api.github.com/users/AlexVo1d/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlexVo1d/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-09T10:29:19Z",
    "updated_at": "2020-06-09T10:40:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI have application with relational data model. Simplified example:\r\n```\r\nEmployee {\r\n    String id;\r\n    String name;\r\n    String email;\r\n    String orgId;\r\n}\r\nOrganization {\r\n    String id;\r\n    String name;\r\n}\r\n```\r\nMy app sends CRUD **events to ClickHouse** in denormalized form:\r\n```\r\n{“eventDate”: “2020-06-04 11:11:28.461”, “id”: “442700df-bc18-4a84-ac2a-e882d787f9e6”, “name”: “Employee 1”, \"email\": \"mail@mail.com\", “orgId”: “fc6d4a3d-e4f1-4d08-ac9d-22edbbe3fcad”, “orgName”: “Organization 1”, “operation”: “CREATE”}\r\n{“eventDate”: “2020-06-04 12:13:27.567”, “id”: “442700df-bc18-4a84-ac2a-e882d787f9e6”, “name”: “Employee 1”, \"email\": \"newmail@mail.com\", “orgId”: “fc6d4a3d-e4f1-4d08-ac9d-22edbbe3fcad”, “orgName”: “Organization 1”, “operation”: “UPDATE”}\r\n{“eventDate”: “2020-06-04 13:11:16.376”, “id”: “442700df-bc18-4a84-ac2a-e882d787f9e6”, “name”: “Employee 1”, \"email\": \"newmail@mail.com\", “orgId”: “fc6d4a3d-e4f1-4d08-ac9d-22edbbe3fcad”, “orgName”: “Organization 1”, “operation”: “DELETE”}\r\n```\r\nI need to get statistics on these events:\r\n1. Actual number of employees (created but not deleted)\r\n2. Number of employees for each organization (Organization Name : NNN)\r\n3. Number of employees for specified organization by day\r\n4. Reports: list of all employees (not events!) & employees for given condition\r\n\r\nQuestions and problems:\r\n1. Is it right way to use events for such statistics?\r\n2. What is the best way to get actual number of employees (created but not deleted)? Are there any special features for this in Clickhouse?\r\n3. How to get actual information for reports (get fields from last create/update event for not deleted employees)? Are there any special features for this in Clickhouse?\r\n4. If the organization has been renamed, I must send update event for all employees of this organization. There are hundreds of employees in organization and application does not send events for related entities now. What is the best way? Dont use denormalization? Use JOINs?"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11547",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11547/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11547/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11547/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11547",
    "id": 635289421,
    "node_id": "MDU6SXNzdWU2MzUyODk0MjE=",
    "number": 11547,
    "title": "Setting to prevent non-metadata alters",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "alesapin",
      "id": 3684697,
      "node_id": "MDQ6VXNlcjM2ODQ2OTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3684697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alesapin",
      "html_url": "https://github.com/alesapin",
      "followers_url": "https://api.github.com/users/alesapin/followers",
      "following_url": "https://api.github.com/users/alesapin/following{/other_user}",
      "gists_url": "https://api.github.com/users/alesapin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alesapin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alesapin/subscriptions",
      "organizations_url": "https://api.github.com/users/alesapin/orgs",
      "repos_url": "https://api.github.com/users/alesapin/repos",
      "events_url": "https://api.github.com/users/alesapin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alesapin/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "alesapin",
        "id": 3684697,
        "node_id": "MDQ6VXNlcjM2ODQ2OTc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/3684697?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alesapin",
        "html_url": "https://github.com/alesapin",
        "followers_url": "https://api.github.com/users/alesapin/followers",
        "following_url": "https://api.github.com/users/alesapin/following{/other_user}",
        "gists_url": "https://api.github.com/users/alesapin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alesapin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alesapin/subscriptions",
        "organizations_url": "https://api.github.com/users/alesapin/orgs",
        "repos_url": "https://api.github.com/users/alesapin/repos",
        "events_url": "https://api.github.com/users/alesapin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alesapin/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-09T09:59:40Z",
    "updated_at": "2020-06-09T09:59:48Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "Want to avoid expensive accidental alters, but allow metadata changes (like changing defaults).\r\nSometing like `allow_non_metadata_alters = 0`."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11536",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11536/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11536/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11536/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11536",
    "id": 634967279,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMxNDIzMzI4",
    "number": 11536,
    "title": "Update SIMDJSON to the latest master",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304141686,
        "node_id": "MDU6TGFiZWwxMzA0MTQxNjg2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement",
        "name": "pr-improvement",
        "color": "007700",
        "default": false,
        "description": "Pull request with some product improvements"
      },
      {
        "id": 1507864673,
        "node_id": "MDU6TGFiZWwxNTA3ODY0Njcz",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-waiting-for-fix",
        "name": "st-waiting-for-fix",
        "color": "e5b890",
        "default": false,
        "description": "We verified the report, and was able to reproduce that. Bug is waiting to be fixed."
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-08T22:09:56Z",
    "updated_at": "2020-06-15T00:30:04Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11536",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11536",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11536.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11536.patch"
    },
    "body": "Changelog category (leave one):\r\n- Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nUpdate SIMDJSON to the latest master. This fixes #9976."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11535",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11535/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11535/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11535/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11535",
    "id": 634963262,
    "node_id": "MDU6SXNzdWU2MzQ5NjMyNjI=",
    "number": 11535,
    "title": "WITH with functions leads to `Unknown column` error",
    "user": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2121848770,
        "node_id": "MDU6TGFiZWwyMTIxODQ4Nzcw",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-sql",
        "name": "comp-sql",
        "color": "b5bcff",
        "default": false,
        "description": "General SQL support"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "4ertus2",
        "id": 8061274,
        "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/4ertus2",
        "html_url": "https://github.com/4ertus2",
        "followers_url": "https://api.github.com/users/4ertus2/followers",
        "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
        "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
        "organizations_url": "https://api.github.com/users/4ertus2/orgs",
        "repos_url": "https://api.github.com/users/4ertus2/repos",
        "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/4ertus2/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-08T22:01:38Z",
    "updated_at": "2020-06-09T15:13:59Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nselect a\r\nfrom (\r\n    with a+1 as aa,\r\n        sumIf(aa, b > 0) as aaif\r\n    select a, aaif\r\n    FROM (select 1 as a, 2 as b)\r\n    GROUP BY a\r\n) as V;\r\n```\r\n```\r\nDB::Exception: Unknown column: aa, there are only columns a, b.\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11526",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11526/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11526/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11526/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11526",
    "id": 634830395,
    "node_id": "MDU6SXNzdWU2MzQ4MzAzOTU=",
    "number": 11526,
    "title": "Copier --daemon option doesn't work.",
    "user": {
      "login": "nikitamikhaylov",
      "id": 25705399,
      "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitamikhaylov",
      "html_url": "https://github.com/nikitamikhaylov",
      "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
      "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
      "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
      "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1401853216,
        "node_id": "MDU6TGFiZWwxNDAxODUzMjE2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-copier",
        "name": "comp-copier",
        "color": "b5bcff",
        "default": false,
        "description": "clickhouse-copier"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "nikitamikhaylov",
      "id": 25705399,
      "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitamikhaylov",
      "html_url": "https://github.com/nikitamikhaylov",
      "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
      "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
      "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
      "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "nikitamikhaylov",
        "id": 25705399,
        "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nikitamikhaylov",
        "html_url": "https://github.com/nikitamikhaylov",
        "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
        "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
        "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
        "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
        "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
        "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-08T18:16:51Z",
    "updated_at": "2020-06-08T18:16:51Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Copier forks its process, then a child try to do main work. But it fails here:\r\nhttps://github.com/ClickHouse/ClickHouse/blob/42acb627fbd1f5c155d2e6ea589a6471b2a46e94/programs/copier/ClusterCopierApp.cpp#L35\r\n\r\n```\r\n(gdb) next \r\n34\t    process_path = Poco::Path(base_dir + \"/clickhouse-copier_\" + process_id).absolute().toString();\r\n(gdb) next \r\n35\t    Poco::File(process_path).createDirectories();\r\n(gdb) next \r\n[Inferior 1 (process 1024) exited with code 0350]\r\n(gdb) \r\n```\r\nTo reproduce you can print `pid` https://github.com/ClickHouse-Extras/poco/blob/be2ab90ba5dccd46919a116e3fe4fa77bb85063b/Util/src/ServerApplication.cpp#L667 and add a `sleep` in child process. "
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11524",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11524/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11524/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11524/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11524",
    "id": 634807384,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMxMjkzMjc5",
    "number": 11524,
    "title": "Avoid too large stack frames",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1309693854,
        "node_id": "MDU6TGFiZWwxMzA5NjkzODU0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-build",
        "name": "pr-build",
        "color": "007700",
        "default": false,
        "description": "Pull request with build/testing/packaging improvement"
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-08T17:37:05Z",
    "updated_at": "2020-06-09T02:03:51Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11524",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11524",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11524.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11524.patch"
    },
    "body": "Changelog category (leave one):\r\n- Build/Testing/Packaging Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd compiler option to control that stack frames are not too large. This will help to run the code in fibers with small stack size.\r\n\r\n\r\nDetailed description / Documentation draft:\r\nShould wait for performance tests."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11518",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11518/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11518/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11518/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11518",
    "id": 634715363,
    "node_id": "MDU6SXNzdWU2MzQ3MTUzNjM=",
    "number": 11518,
    "title": "Permission to precision of data fraction part exceed S in field definition",
    "user": {
      "login": "calebeaires",
      "id": 794195,
      "node_id": "MDQ6VXNlcjc5NDE5NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/794195?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calebeaires",
      "html_url": "https://github.com/calebeaires",
      "followers_url": "https://api.github.com/users/calebeaires/followers",
      "following_url": "https://api.github.com/users/calebeaires/following{/other_user}",
      "gists_url": "https://api.github.com/users/calebeaires/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calebeaires/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calebeaires/subscriptions",
      "organizations_url": "https://api.github.com/users/calebeaires/orgs",
      "repos_url": "https://api.github.com/users/calebeaires/repos",
      "events_url": "https://api.github.com/users/calebeaires/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calebeaires/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-08T15:22:46Z",
    "updated_at": "2020-06-08T15:22:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I can create and insert data to a Decimal field. This is simple and easy. Some case when doing calculations or when importing data or when changing date I get this error:\r\n\r\n```\r\nError: **Code: 69 - DB::Exception: Decimal value is too small: at row 0**\r\nClickHouse version 20.4.2.9\r\n```\r\n\r\nDescriptions of the problem\r\n```sql\r\n-- CREATE TABLE with DECIMAL FIELD\r\nCREATE TABLE bucket_18.mytable(\r\n\tsome_base Decimal(10, 3)\r\n) ENGINE = MergeTree\r\nORDER BY tuple();\r\n\r\n-- TRY to insert value\r\n\r\n-- SUCCESS\r\ninsert into table bucket_18.mytable (some_base) VALUES (1.1);\r\n\r\n-- SUCCESS\r\ninsert into table bucket_18.mytable (some_base) VALUES (1.12);\r\n\r\n-- SUCCESS\r\ninsert into table bucket_18.mytable (some_base) VALUES (1.123);\r\n\r\n-- ERR, FAIL, you cant!\r\ninsert into table bucket_18.mytable (some_base) VALUES (1.1234);\r\n```\r\n\r\n\r\n\r\n**I ask to myself**\r\n1.  Why decimal sizes with less then the precision does not fail but with more then the given precision fails?\r\n2. Is there some configuration/settings that I can set to make this work?\r\n\r\n**FEATURE REQUEST: Describe the solution you'd like**\r\n\r\nA. SOLUTION/Suggestion ONE: \r\nGive permission/function to ClickHouse to lead with precision bigger then that one of the field doing operation like round or ceil or just throw away the sizes that exceeds.\r\n\r\nB. SOLUTION/Suggestion TWO:\r\nWhile create a MergeTree table, make use of a CHECK function that works with the values while you execute a INSERT operation, something like that: \r\n\r\n```sql\r\n-- CREATE TABLE with DECIMAL FIELD\r\nCREATE TABLE bucket_18.mytable(\r\n\tsome_base Decimal(10, 3) check(round(some_base))\r\n) ENGINE = MergeTree\r\nORDER BY tuple();\r\n````\r\n\r\nObs.:\r\nI am aware that clickhouse users can transform data while insert, but sometimes the values comes with diferente decimal sizes. It would be great to have one of those suggestions on the great clickhouse"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11512",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11512/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11512/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11512/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11512",
    "id": 634591139,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMxMTE3ODYw",
    "number": 11512,
    "title": "WIP: MySql datatypes dateTime64 and decimal",
    "user": {
      "login": "Enmk",
      "id": 1110183,
      "node_id": "MDQ6VXNlcjExMTAxODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1110183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Enmk",
      "html_url": "https://github.com/Enmk",
      "followers_url": "https://api.github.com/users/Enmk/followers",
      "following_url": "https://api.github.com/users/Enmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/Enmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Enmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Enmk/subscriptions",
      "organizations_url": "https://api.github.com/users/Enmk/orgs",
      "repos_url": "https://api.github.com/users/Enmk/repos",
      "events_url": "https://api.github.com/users/Enmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Enmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-08T12:59:09Z",
    "updated_at": "2020-06-25T13:24:49Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11512",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11512",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11512.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11512.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSupporting MySQL types: `decimal` (as ClickHouse `Decimal`) and `datetime` with sub-second precision (as `DateTime64`). \r\n...\r\n\r\n\r\nDetailed description / Documentation draft:\r\n\r\n...\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11501",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11501/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11501/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11501/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11501",
    "id": 634287936,
    "node_id": "MDU6SXNzdWU2MzQyODc5MzY=",
    "number": 11501,
    "title": "Can we use delete mutation within an ETL logic?",
    "user": {
      "login": "jeanatpi",
      "id": 46261261,
      "node_id": "MDQ6VXNlcjQ2MjYxMjYx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/46261261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeanatpi",
      "html_url": "https://github.com/jeanatpi",
      "followers_url": "https://api.github.com/users/jeanatpi/followers",
      "following_url": "https://api.github.com/users/jeanatpi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeanatpi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeanatpi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeanatpi/subscriptions",
      "organizations_url": "https://api.github.com/users/jeanatpi/orgs",
      "repos_url": "https://api.github.com/users/jeanatpi/repos",
      "events_url": "https://api.github.com/users/jeanatpi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeanatpi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-08T07:26:22Z",
    "updated_at": "2020-06-09T06:47:39Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi guys,\r\n\r\nI'm asking here after having read and test some things.\r\n\r\nMy use case is the following : I've a big table of hospitality data (+100M rows) with many dimensions (20/30) and some measures (10). \r\nThe way we need to update our data is first doing a DELETE for an \"hotel_id\" + a date range. Once data is deleted we can INSERT the new data for this hotel_id and date range.\r\n\r\nI'm considering 2 ways : \r\n- delete mutation\r\n- replacingMergeTree\r\n\r\nI've read that mutation should not be used on prod but I don't understand why. \r\nFrom what I've tested an ALTER TABLE ... DELETE where htl_id=.. AND stay_date BETWEEN .. AND ... is fast (I've checked in system.mutations).\r\n\r\nReplacingMergeTree is more complex to handle.\r\n\r\n\r\nMy question is : what would you recommend? Especially with the usage of delete mutations.\r\n\r\nThanks for this great product!\r\n\r\nBest regards\r\n\r\nJean"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11499",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11499/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11499/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11499/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11499",
    "id": 633942049,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMwNTQ2Njcy",
    "number": 11499,
    "title": "Network dump (experimental)",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1876999755,
        "node_id": "MDU6TGFiZWwxODc2OTk5NzU1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog",
        "name": "pr-not-for-changelog",
        "color": "007700",
        "default": false,
        "description": "This PR should not be mentioned in the changelog"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-08T01:05:26Z",
    "updated_at": "2020-06-09T02:03:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11499",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11499",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11499.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11499.patch"
    },
    "body": "Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAllow to dump network interactions of the server. This can possibly allow to implement \"network replay\" server that can be used for testing of backwards incompatibilities #11481 "
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11498",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11498/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11498/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11498/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11498",
    "id": 633872576,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMwNDgzMTA1",
    "number": 11498,
    "title": "[RFC] Add proxy users for distributed queries",
    "user": {
      "login": "azat",
      "id": 430798,
      "node_id": "MDQ6VXNlcjQzMDc5OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/430798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azat",
      "html_url": "https://github.com/azat",
      "followers_url": "https://api.github.com/users/azat/followers",
      "following_url": "https://api.github.com/users/azat/following{/other_user}",
      "gists_url": "https://api.github.com/users/azat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azat/subscriptions",
      "organizations_url": "https://api.github.com/users/azat/orgs",
      "repos_url": "https://api.github.com/users/azat/repos",
      "events_url": "https://api.github.com/users/azat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304141686,
        "node_id": "MDU6TGFiZWwxMzA0MTQxNjg2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement",
        "name": "pr-improvement",
        "color": "007700",
        "default": false,
        "description": "Pull request with some product improvements"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "abyss7",
      "id": 5627721,
      "node_id": "MDQ6VXNlcjU2Mjc3MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5627721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abyss7",
      "html_url": "https://github.com/abyss7",
      "followers_url": "https://api.github.com/users/abyss7/followers",
      "following_url": "https://api.github.com/users/abyss7/following{/other_user}",
      "gists_url": "https://api.github.com/users/abyss7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abyss7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abyss7/subscriptions",
      "organizations_url": "https://api.github.com/users/abyss7/orgs",
      "repos_url": "https://api.github.com/users/abyss7/repos",
      "events_url": "https://api.github.com/users/abyss7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abyss7/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "abyss7",
        "id": 5627721,
        "node_id": "MDQ6VXNlcjU2Mjc3MjE=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5627721?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abyss7",
        "html_url": "https://github.com/abyss7",
        "followers_url": "https://api.github.com/users/abyss7/followers",
        "following_url": "https://api.github.com/users/abyss7/following{/other_user}",
        "gists_url": "https://api.github.com/users/abyss7/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/abyss7/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/abyss7/subscriptions",
        "organizations_url": "https://api.github.com/users/abyss7/orgs",
        "repos_url": "https://api.github.com/users/abyss7/repos",
        "events_url": "https://api.github.com/users/abyss7/events{/privacy}",
        "received_events_url": "https://api.github.com/users/abyss7/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2020-06-07T23:35:27Z",
    "updated_at": "2020-06-28T13:46:01Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11498",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11498",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11498.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11498.patch"
    },
    "body": "Changelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nAdd proxy users for distributed queries\r\n\r\nDetailed description / Documentation draft:\r\n\r\nBased on ideas from #9751\r\n\r\n[Usage example](https://github.com/azat/ClickHouse/blob/dist-proxy-user/docs/en/engines/table-engines/special/distributed.md#user-proxying)\r\n\r\nFor this the following had been added:\r\n- ~CREATE USER proxied_user ALLOW PROXYING VIA proxy_user (covered)~\r\n- ~ALTER USER proxied_user [ALLOW|DENY] PROXYING VIA proxy_user (covered)~\r\n- GRANT PROXY ON *.* TO prooxy_user (covered)\r\n- REVOKE PROXY ON *.* FROM proxy_user (covered)\r\n- ~allowed_proxy_user config directive~\r\n- ~allowed_proxy_users into system.users table~\r\n- proxy_user in remote_servers (covered)\r\n\r\nWhere:\r\n- proxy_user   -- user that allows to proxy\r\n- proxied_user -- update list of users that are alloewd to proxy to it\r\n\r\nLeft:\r\n- [x] documentation\r\n- [x] non-clumsy ALTER/CREATE\r\n- [ ] `system.processes` uses `current_user` (and also log message from ProcessList.cpp)\r\n- [ ] #8926 (row base filter)\r\n- [x] ~more testing~\r\n- [x] ~non-clumsy GRANT~\r\n- [ ] ~exception constructor via fmt~\r\n- [ ] ~remote() support~\r\n\r\nRevs:\r\n- v2: rename setting to proxied_user to avoid overlaps with client CLI\r\n- v3: rebase and fix conflicts\r\n\r\nConflicts: #11391 (outperform)\r\nFixes: #6843\r\nFixes: #9751\r\nCc: @filimonov \r\nCc: @abyss7 \r\n\r\n<details>\r\n\r\n`HEAD`:\r\n- 5c72b02f86a1e483c5220aac7d572809f53f4b78\r\n- 35bbc5da23e984faba27c7293424c654211672f7\r\n\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11492",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11492/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11492/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11492/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11492",
    "id": 633554769,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDMwMTkzMDA3",
    "number": 11492,
    "title": "Syntax highlight in clickhouse-client, v2",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-07T16:29:11Z",
    "updated_at": "2020-06-09T02:03:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11492",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11492",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11492.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11492.patch"
    },
    "body": "Changelog category (leave one):\r\n- New Feature\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nSyntax highlight in clickhouse-client with full featured parser. It allows to see syntax error before executing query.\r\n\r\n\r\nDetailed description / Documentation draft:\r\nA prototype, not kind of convenient in code."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11482",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11482/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11482/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11482/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11482",
    "id": 632128512,
    "node_id": "MDU6SXNzdWU2MzIxMjg1MTI=",
    "number": 11482,
    "title": "Clichouse v20.4 performance issue",
    "user": {
      "login": "bobrik",
      "id": 89186,
      "node_id": "MDQ6VXNlcjg5MTg2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobrik",
      "html_url": "https://github.com/bobrik",
      "followers_url": "https://api.github.com/users/bobrik/followers",
      "following_url": "https://api.github.com/users/bobrik/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobrik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobrik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobrik/subscriptions",
      "organizations_url": "https://api.github.com/users/bobrik/orgs",
      "repos_url": "https://api.github.com/users/bobrik/repos",
      "events_url": "https://api.github.com/users/bobrik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobrik/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1481221764,
        "node_id": "MDU6TGFiZWwxNDgxMjIxNzY0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime",
        "name": "comp-datetime",
        "color": "b5bcff",
        "default": false,
        "description": "date & time & timezone related"
      },
      {
        "id": 756395244,
        "node_id": "MDU6TGFiZWw3NTYzOTUyNDQ=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance",
        "name": "performance",
        "color": "c2e0c6",
        "default": false,
        "description": null
      },
      {
        "id": 1907525265,
        "node_id": "MDU6TGFiZWwxOTA3NTI1MjY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected",
        "name": "v20.3-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.3"
      },
      {
        "id": 2070999159,
        "node_id": "MDU6TGFiZWwyMDcwOTk5MTU5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.4-affected",
        "name": "v20.4-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.4"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-06-06T01:50:40Z",
    "updated_at": "2020-06-08T07:42:06Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Describe the situation**\r\n\r\nI'm seeing slower than expected queries on v20.4.4.18-stable compared to v20.1:20.1.4.14-stable.\r\n\r\nMy schema:\r\n\r\n```sql\r\nCREATE TABLE jaeger_index_v2 (\r\n  timestamp DateTime CODEC(Delta, ZSTD(1)),\r\n  traceID String CODEC(ZSTD(1)),\r\n  service LowCardinality(String) CODEC(ZSTD(1)),\r\n  operation LowCardinality(String) CODEC(ZSTD(1)),\r\n  durationUs UInt64 CODEC(ZSTD(1)),\r\n  tags Array(String) CODEC(ZSTD(1)),\r\n  INDEX idx_tags tags TYPE bloom_filter(0.01) GRANULARITY 64\r\n) ENGINE MergeTree()\r\nPARTITION BY toDate(timestamp)\r\nORDER BY (service, timestamp)\r\nSETTINGS index_granularity=1024\r\n```\r\n\r\nMy query:\r\n\r\n```sql\r\nSELECT DISTINCT traceID\r\n  FROM jaeger_index_v2\r\nPREWHERE service = 'nginx-fl'\r\n   AND timestamp >= now() - 3600\r\n   AND timestamp <= now()\r\n ORDER BY service DESC,\r\n       timestamp DESC\r\n LIMIT 20\r\n```\r\n\r\nOn v20.1 I see ~0.5s per query\r\nOn v20.4 I see a very different picture for 1.5s per query."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11481/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11481",
    "id": 632002339,
    "node_id": "MDU6SXNzdWU2MzIwMDIzMzk=",
    "number": 11481,
    "title": "Network replay server for testing",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T22:00:35Z",
    "updated_at": "2020-06-05T22:01:38Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "The idea of this feature is from @4ertus2, we discussed it today.\r\n\r\nCapture network interaction (requests and responses) from clickhouse-server.\r\nMake clickhouse-mock server that will use this dump to provide the same responses to the same requests.\r\nUse it for backward compatibility checks in distributed setups.\r\n\r\nTricks and caveats:\r\n- it should reply with the best suitable response based on the history of requests;\r\n- it should track connection identifier to allow to keep a chain of requests and responses;\r\n- it will not take into account all timing issues;\r\n- real requests can be slightly different from expected... for example, by client name.\r\n\r\nPossible way of implementation:\r\n- hook into send/recv functions and dump data into system.network_dump table;\r\n- mock server can load the data from dump in any supported format, keep it in memory and find the best response based on search by a tree of previously seen requests at the same connection."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11479",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11479/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11479/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11479/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11479",
    "id": 631917052,
    "node_id": "MDU6SXNzdWU2MzE5MTcwNTI=",
    "number": 11479,
    "title": "20.3 Segmentation fault during query with mysq() & GLOBAL JOIN",
    "user": {
      "login": "millin",
      "id": 6498041,
      "node_id": "MDQ6VXNlcjY0OTgwNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6498041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/millin",
      "html_url": "https://github.com/millin",
      "followers_url": "https://api.github.com/users/millin/followers",
      "following_url": "https://api.github.com/users/millin/following{/other_user}",
      "gists_url": "https://api.github.com/users/millin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/millin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/millin/subscriptions",
      "organizations_url": "https://api.github.com/users/millin/orgs",
      "repos_url": "https://api.github.com/users/millin/repos",
      "events_url": "https://api.github.com/users/millin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/millin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1357578153,
        "node_id": "MDU6TGFiZWwxMzU3NTc4MTUz",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-joins",
        "name": "comp-joins",
        "color": "b5bcff",
        "default": false,
        "description": "JOINs"
      },
      {
        "id": 1234601830,
        "node_id": "MDU6TGFiZWwxMjM0NjAxODMw",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/crash",
        "name": "crash",
        "color": "082b68",
        "default": false,
        "description": "Crash / segfault / segmentation"
      },
      {
        "id": 1907525265,
        "node_id": "MDU6TGFiZWwxOTA3NTI1MjY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected",
        "name": "v20.3-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.3"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "4ertus2",
      "id": 8061274,
      "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/4ertus2",
      "html_url": "https://github.com/4ertus2",
      "followers_url": "https://api.github.com/users/4ertus2/followers",
      "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
      "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
      "organizations_url": "https://api.github.com/users/4ertus2/orgs",
      "repos_url": "https://api.github.com/users/4ertus2/repos",
      "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/4ertus2/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "4ertus2",
        "id": 8061274,
        "node_id": "MDQ6VXNlcjgwNjEyNzQ=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/8061274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/4ertus2",
        "html_url": "https://github.com/4ertus2",
        "followers_url": "https://api.github.com/users/4ertus2/followers",
        "following_url": "https://api.github.com/users/4ertus2/following{/other_user}",
        "gists_url": "https://api.github.com/users/4ertus2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/4ertus2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/4ertus2/subscriptions",
        "organizations_url": "https://api.github.com/users/4ertus2/orgs",
        "repos_url": "https://api.github.com/users/4ertus2/repos",
        "events_url": "https://api.github.com/users/4ertus2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/4ertus2/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-06-05T20:11:43Z",
    "updated_at": "2020-06-22T21:07:33Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nWhen query contains mysql() table function & GLOBAL JOIN segmentation fault may occur.\r\n\r\n**How to reproduce**\r\n* ClickHouse server version 20.3.9.70\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n2020.06.05 14:50:53.014570 [ 3744 ] {} <Fatal> BaseDaemon: ########################################\r\n2020.06.05 14:50:53.014707 [ 3744 ] {} <Fatal> BaseDaemon: (version 20.3.9.70 (official build)) (from thread 953) (query_id: 160A038829104004) Received signal Segmentation fault (11).\r\n2020.06.05 14:50:53.014771 [ 3744 ] {} <Fatal> BaseDaemon: Address: NULL pointer. Access: read. Unknown si_code.\r\n2020.06.05 14:50:53.014816 [ 3744 ] {} <Fatal> BaseDaemon: Stack trace: 0x1060397b 0x103f68b5 0x103f8621 0xdb561f9 0xce48ccf 0xdeed484 0xdb9ac1b 0xdeed365 0xdbe264e 0xdbe3e27 0xce48ccf 0xd27448a 0xce48ccf 0xd27448a 0xce48ccf 0xd2e8cbe 0xd2eac67 0xce475ea 0xce878b1 0xd554297 0x8fed706 0x8ff0bc3 0xe37c6f4 0xe3ac69b 0xe3acb1d 0x105c3317 0x105bf11c 0x105c0abd 0x7f793cd326db\r\n2020.06.05 14:50:53.014980 [ 3744 ] {} <Fatal> BaseDaemon: 3. mysql_errno @ 0x1060397b in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015101 [ 3744 ] {} <Fatal> BaseDaemon: 4. mysqlxx::checkError(st_mysql*) @ 0x103f68b5 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015134 [ 3744 ] {} <Fatal> BaseDaemon: 5. mysqlxx::UseQueryResult::fetch() @ 0x103f8621 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015206 [ 3744 ] {} <Fatal> BaseDaemon: 6. DB::MySQLBlockInputStream::readImpl() @ 0xdb561f9 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015268 [ 3744 ] {} <Fatal> BaseDaemon: 7. DB::IBlockInputStream::read() @ 0xce48ccf in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015367 [ 3744 ] {} <Fatal> BaseDaemon: 8. DB::SourceFromInputStream::generate() @ 0xdeed484 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015427 [ 3744 ] {} <Fatal> BaseDaemon: 9. DB::ISource::work() @ 0xdb9ac1b in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015462 [ 3744 ] {} <Fatal> BaseDaemon: 10. DB::SourceFromInputStream::work() @ 0xdeed365 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015512 [ 3744 ] {} <Fatal> BaseDaemon: 11. DB::TreeExecutorBlockInputStream::execute(bool, bool) @ 0xdbe264e in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015545 [ 3744 ] {} <Fatal> BaseDaemon: 12. DB::TreeExecutorBlockInputStream::readImpl() @ 0xdbe3e27 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015580 [ 3744 ] {} <Fatal> BaseDaemon: 13. DB::IBlockInputStream::read() @ 0xce48ccf in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015638 [ 3744 ] {} <Fatal> BaseDaemon: 14. DB::ExpressionBlockInputStream::readImpl() @ 0xd27448a in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015668 [ 3744 ] {} <Fatal> BaseDaemon: 15. DB::IBlockInputStream::read() @ 0xce48ccf in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015755 [ 3744 ] {} <Fatal> BaseDaemon: 16. DB::ExpressionBlockInputStream::readImpl() @ 0xd27448a in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.015791 [ 3744 ] {} <Fatal> BaseDaemon: 17. DB::IBlockInputStream::read() @ 0xce48ccf in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.016789 [ 3744 ] {} <Fatal> BaseDaemon: 18. DB::CreatingSetsBlockInputStream::createOne(DB::SubqueryForSet&) @ 0xd2e8cbe in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.016860 [ 3744 ] {} <Fatal> BaseDaemon: 19. DB::CreatingSetsBlockInputStream::readPrefixImpl() @ 0xd2eac67 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.016894 [ 3744 ] {} <Fatal> BaseDaemon: 20. DB::IBlockInputStream::readPrefix() @ 0xce475ea in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.016937 [ 3744 ] {} <Fatal> BaseDaemon: 21. DB::copyData(DB::IBlockInputStream&, DB::IBlockOutputStream&, std::__1::atomic<bool>*) @ 0xce878b1 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017033 [ 3744 ] {} <Fatal> BaseDaemon: 22. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xd554297 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017075 [ 3744 ] {} <Fatal> BaseDaemon: 23. DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x8fed706 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017117 [ 3744 ] {} <Fatal> BaseDaemon: 24. DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) @ 0x8ff0bc3 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017156 [ 3744 ] {} <Fatal> BaseDaemon: 25. Poco::Net::HTTPServerConnection::run() @ 0xe37c6f4 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017192 [ 3744 ] {} <Fatal> BaseDaemon: 26. Poco::Net::TCPServerConnection::start() @ 0xe3ac69b in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017229 [ 3744 ] {} <Fatal> BaseDaemon: 27. Poco::Net::TCPServerDispatcher::run() @ 0xe3acb1d in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017257 [ 3744 ] {} <Fatal> BaseDaemon: 28. Poco::PooledThread::run() @ 0x105c3317 in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017309 [ 3744 ] {} <Fatal> BaseDaemon: 29. Poco::ThreadImpl::runnableEntry(void*) @ 0x105bf11c in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017338 [ 3744 ] {} <Fatal> BaseDaemon: 30. ? @ 0x105c0abd in /usr/bin/clickhouse\r\n2020.06.05 14:50:53.017424 [ 3744 ] {} <Fatal> BaseDaemon: 31. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11476/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11476",
    "id": 631643875,
    "node_id": "MDU6SXNzdWU2MzE2NDM4NzU=",
    "number": 11476,
    "title": ">= 20.3.x: Select on a buffer table doesn't work with FINAL",
    "user": {
      "login": "adubovikov",
      "id": 4513061,
      "node_id": "MDQ6VXNlcjQ1MTMwNjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4513061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adubovikov",
      "html_url": "https://github.com/adubovikov",
      "followers_url": "https://api.github.com/users/adubovikov/followers",
      "following_url": "https://api.github.com/users/adubovikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/adubovikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adubovikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adubovikov/subscriptions",
      "organizations_url": "https://api.github.com/users/adubovikov/orgs",
      "repos_url": "https://api.github.com/users/adubovikov/repos",
      "events_url": "https://api.github.com/users/adubovikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adubovikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1575085465,
        "node_id": "MDU6TGFiZWwxNTc1MDg1NDY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/unexpected%20behaviour",
        "name": "unexpected behaviour",
        "color": "e088ca",
        "default": false,
        "description": ""
      },
      {
        "id": 1907525265,
        "node_id": "MDU6TGFiZWwxOTA3NTI1MjY1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.3-affected",
        "name": "v20.3-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.3"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T14:35:29Z",
    "updated_at": "2020-06-08T20:59:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Since we have upgraded the system from 19.16.19 to 20.4.4.18( same on 20.3.8) a SELECT on the table (ENGINE = Buffer) that pointed to another table with ENGINE = ReplacingMergeTree , doesn't work with FINAL param:\r\n\r\nCode: 171. DB::Exception: Received from 10.0.0.1:9000. DB::Exception: Received from 10.0.0.1:9000. DB::Exception: Block structure mismatch in\r\nQueryPipeline stream: different names of columns:\r\nCorrelations Array(String) Array(size = 0, UInt64(size = 0), String(size = 0)), CustomString.Key Array(String) Array(size = 0, UInt64(size = 0),\r\n\r\nif you don't use FINAL - we have result. Unfortunately we have rolled back to 19.16.19 - and now the query with FINAL works without any problem. Can you please check it ?\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11474/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11474",
    "id": 631615168,
    "node_id": "MDU6SXNzdWU2MzE2MTUxNjg=",
    "number": 11474,
    "title": "count() can pick calculated columns in simple VIEW",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 756395244,
        "node_id": "MDU6TGFiZWw3NTYzOTUyNDQ=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance",
        "name": "performance",
        "color": "c2e0c6",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-05T13:59:01Z",
    "updated_at": "2020-06-05T13:59:01Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "```\r\ncreate table count_issue Engine=MergeTree ORDER BY number AS SELECT number, randomPrintableASCII(300) as str from numbers(10000000);\r\ncreate view count_issue_view AS select number, toUInt8OrZero(extract(str, '([0-9]+)')) honeypot from count_issue;\r\n\r\nselect count() from count_issue_view;\r\n--- 1 rows in set. Elapsed: 1.445 sec.\r\n\r\n\r\n---  that can be calculated much faster:\r\n\r\nselect count(number) from count_issue_view;\r\n-- 1 rows in set. Elapsed: 0.030 sec.\r\n\r\nselect count() from count_issue;\r\n--- 0.004 sec.\r\n\r\nset optimize_trivial_count_query=0;\r\nselect count() from count_issue;\r\n1 rows in set. Elapsed: 0.030 sec\r\n-- "
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11473",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11473/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11473/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11473/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11473",
    "id": 631590042,
    "node_id": "MDU6SXNzdWU2MzE1OTAwNDI=",
    "number": 11473,
    "title": "DB::Exception: Received from localhost:9000. DB::Exception: Memory limit (total) exceeded",
    "user": {
      "login": "gbakthavatchalam",
      "id": 26194642,
      "node_id": "MDQ6VXNlcjI2MTk0NjQy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/26194642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gbakthavatchalam",
      "html_url": "https://github.com/gbakthavatchalam",
      "followers_url": "https://api.github.com/users/gbakthavatchalam/followers",
      "following_url": "https://api.github.com/users/gbakthavatchalam/following{/other_user}",
      "gists_url": "https://api.github.com/users/gbakthavatchalam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gbakthavatchalam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gbakthavatchalam/subscriptions",
      "organizations_url": "https://api.github.com/users/gbakthavatchalam/orgs",
      "repos_url": "https://api.github.com/users/gbakthavatchalam/repos",
      "events_url": "https://api.github.com/users/gbakthavatchalam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gbakthavatchalam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 756395244,
        "node_id": "MDU6TGFiZWw3NTYzOTUyNDQ=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance",
        "name": "performance",
        "color": "c2e0c6",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-05T13:29:15Z",
    "updated_at": "2020-06-08T17:15:58Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(you don't have to strictly follow this form)\r\n\r\n**Describe the situation**\r\nI intended to load test the join capacity of Clickhouse MergeTree engine.\r\nI have 2 tables (table1 and table2) with the below schema\r\nNo of cols -> 2250 (str cols - 1125, int cols - 1125)\r\nNo of rows -> 225000\r\nEngine -> MergeTree\r\n\r\nI perform an inner join between these 2 tables using an integer column\r\n`select * from table1 inner join table2 using join_column`\r\n\r\nI ran the setup in an EC2 instance with 16GB RAM and I got the below error.\r\n\r\n![image](https://user-images.githubusercontent.com/26194642/83881367-2489da80-a75e-11ea-9ab8-deaa37b3dfc1.png)\r\n\r\n\r\nWhen I ran the same setup in an EC2 instance with 32GB RAM, it again failed due to the below error.\r\n\r\n![image](https://user-images.githubusercontent.com/26194642/83881391-2e134280-a75e-11ea-8aef-f4e2c52755d4.png)\r\n\r\n\r\n**How to reproduce**\r\n* Clickhouse Version 20.4.4.18\r\n* clickhouse-client,\r\n* Queries to run that lead to slow performance\r\nclickhouse-client --max_memory_usage 0 -d 'default' -q 'SELECT * FROM table1 INNER JOIN table2 using join_column FORMAT CSVWithNames' > output.csv\r\n\r\n**Expected performance**\r\nWhen the join query failed in a 16G ram , I spun up a 32G RAM and I thought the query would run fine. But again the query failed due to memory limit error.\r\n\r\nIs this an expected behaviour or is a memory leak issue ? Kindly suggest"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11470/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11470",
    "id": 631530089,
    "node_id": "MDU6SXNzdWU2MzE1MzAwODk=",
    "number": 11470,
    "title": "PREWHERE optimizer does not work properly for MV",
    "user": {
      "login": "EliseAzure",
      "id": 8440290,
      "node_id": "MDQ6VXNlcjg0NDAyOTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8440290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EliseAzure",
      "html_url": "https://github.com/EliseAzure",
      "followers_url": "https://api.github.com/users/EliseAzure/followers",
      "following_url": "https://api.github.com/users/EliseAzure/following{/other_user}",
      "gists_url": "https://api.github.com/users/EliseAzure/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EliseAzure/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EliseAzure/subscriptions",
      "organizations_url": "https://api.github.com/users/EliseAzure/orgs",
      "repos_url": "https://api.github.com/users/EliseAzure/repos",
      "events_url": "https://api.github.com/users/EliseAzure/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EliseAzure/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1401777979,
        "node_id": "MDU6TGFiZWwxNDAxNzc3OTc5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-optimizers",
        "name": "comp-optimizers",
        "color": "b5bcff",
        "default": false,
        "description": "Query optimizations"
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 756395244,
        "node_id": "MDU6TGFiZWw3NTYzOTUyNDQ=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/performance",
        "name": "performance",
        "color": "c2e0c6",
        "default": false,
        "description": null
      },
      {
        "id": 1507888214,
        "node_id": "MDU6TGFiZWwxNTA3ODg4MjE0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-accepted",
        "name": "st-accepted",
        "color": "e5b890",
        "default": false,
        "description": "The issue is in our backlog, ready to take"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-05T11:46:23Z",
    "updated_at": "2020-06-06T16:35:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "When using materialized views:\r\n - SELECT from .inner.view moves some conditions from WHERE to PREWHERE as it's supposed to do\r\n - SELECT from view does not but is supposed to (these tables should actually be the same)\r\n\r\n**How to reproduce**\r\n* Tested on versions: 19.9.2.4, 19.17.2.4, 20.3.8.53, 20.4.4.18 (could not reproduce on 20.4 =\\ was too lazy to fill the tables with the right data, but logs suggest that bug is still there)\r\n* Used HTTP interface directly via custom client/ Tabix client/ clickhouse console client\r\n* Tested on MergeTree and ReplicatedMergeTree engines\r\n* Can't provide sample datasets (NDA)\r\n* Sample queries can be found in the attached log files, WHERE conditions are not contained in primary key\r\n\r\n**Expected behavior**\r\nSELECT from view moves some conditions from WHERE to PREWHERE\r\n\r\n**Error message and/or stacktrace**\r\nSee attached log files.\r\nFor SELECT from view queries you can see an additional step (Filter) in pipeline. Also much many bytes are read in view case opposed to .inner.view case.\r\n[19.9.2.4_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735691/19.9.2.4_log.txt)\r\n[19.17.2.4_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735692/19.17.2.4_log.txt)\r\n[20.3.8.53_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735834/20.3.8.53_log.txt)\r\n[20.4.4.18_log.txt](https://github.com/ClickHouse/ClickHouse/files/4735693/20.4.4.18_log.txt)\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11469",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11469/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11469/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11469/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11469",
    "id": 631493454,
    "node_id": "MDU6SXNzdWU2MzE0OTM0NTQ=",
    "number": 11469,
    "title": "20.4 + dictGet + group by = Function dictGet... takes 3 or 4 arguments.",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1351463315,
        "node_id": "MDU6TGFiZWwxMzUxNDYzMzE1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary",
        "name": "comp-dictionary",
        "color": "b5bcff",
        "default": false,
        "description": "Dictionaries"
      },
      {
        "id": 2070999159,
        "node_id": "MDU6TGFiZWwyMDcwOTk5MTU5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/v20.4-affected",
        "name": "v20.4-affected",
        "color": "55007a",
        "default": false,
        "description": "This issue affects some releases of v20.4"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-05T10:41:05Z",
    "updated_at": "2020-06-25T10:08:07Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "Regression (20.3 and earlier work properly).\r\n\r\n`dictGetString` works properly too. \r\n\r\ntest case:\r\n```sql\r\nCREATE TABLE countries_table\r\n(\r\n  id UInt64,\r\n  code String,\r\n  country String\r\n)\r\nENGINE = MergeTree()\r\nORDER BY id;\r\n\r\nINSERT INTO countries_table VALUES (0,'AF','Afghanistan'), (1,'AL','Albania'), (2,'DZ','Algeria'), (3,'AS','American Samoa');\r\n\r\nCREATE DICTIONARY countryId\r\n(\r\n  id UInt64 DEFAULT 0,\r\n  code String DEFAULT '',\r\n  country String DEFAULT ''\r\n)\r\nPRIMARY KEY id\r\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT 9000 USER 'default' TABLE 'countries_table' PASSWORD '' DB 'default'))\r\nLIFETIME(MIN 1 MAX 10)\r\nLAYOUT(FLAT());\r\n\r\n-- that works\r\nSELECT dictGetString('default.countryId', 'country', toUInt64(number)) AS country FROM numbers(2) GROUP BY country;\r\n\r\n-- that does not work on 20.4\r\nSELECT dictGet('default.countryId', 'country', toUInt64(number)) AS country FROM numbers(2) GROUP BY country;\r\n\r\n-- that works\r\nSELECT dictGet('default.countryId', 'country', toUInt64(number)) AS country FROM numbers(2);\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11461",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11461/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11461/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11461/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11461",
    "id": 631288462,
    "node_id": "MDU6SXNzdWU2MzEyODg0NjI=",
    "number": 11461,
    "title": "ninja: build stopped: subcommand failed",
    "user": {
      "login": "LiemLin",
      "id": 16920347,
      "node_id": "MDQ6VXNlcjE2OTIwMzQ3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/16920347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LiemLin",
      "html_url": "https://github.com/LiemLin",
      "followers_url": "https://api.github.com/users/LiemLin/followers",
      "following_url": "https://api.github.com/users/LiemLin/following{/other_user}",
      "gists_url": "https://api.github.com/users/LiemLin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LiemLin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LiemLin/subscriptions",
      "organizations_url": "https://api.github.com/users/LiemLin/orgs",
      "repos_url": "https://api.github.com/users/LiemLin/repos",
      "events_url": "https://api.github.com/users/LiemLin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LiemLin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 521113272,
        "node_id": "MDU6TGFiZWw1MjExMTMyNzI=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/build",
        "name": "build",
        "color": "d93f0b",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-05T03:43:18Z",
    "updated_at": "2020-06-05T03:46:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Make sure that `git diff` result is empty and you've just pulled fresh master. Try cleaning up cmake cache. Just in case, official build instructions are published here: https://clickhouse.yandex/docs/en/development/build/\r\n\r\n**Operating system**\r\nmacos 10.15.5 \r\n\r\n**Cmake version**\r\n3.15.2\r\n\r\n**Ninja version**\r\n1.9.0\r\n\r\n**Compiler name and version**\r\nApple clang version 11.0.3 (clang-1103.0.32.62)\r\n\r\n**Full cmake and/or ninja output**\r\nclickhouse tag version 20.4.4.18\r\n\r\n\r\n[3940/3940] Linking CXX executable programs/clickhouse\r\nFAILED: programs/clickhouse \r\n: && /usr/bin/clang++  -fdiagnostics-color=always -std=c++2a -fsized-deallocation  -gdwarf-aranges -msse4.1 -msse4.2 -mpopcnt   -Wall -Wno-unused-command-line-argument  -Wnon-virtual-dtor -fno-omit-frame-pointer -stdlib=libc++ -Wl,-U,_inside_main -Werror -mmacosx-version-min=10.15 -O2 -g -DNDEBUG -O3  -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names -rdynamic -mmacosx-version-min=10.15 src/CMakeFiles/clickhouse_malloc.dir/Common/malloc.cpp.o programs/CMakeFiles/clickhouse.dir/main.cpp.o  -o programs/clickhouse  src/libclickhouse_new_delete.a src/libclickhouse_common_io.a src/Common/StringUtils/libstring_utils.a programs/server/libclickhouse-server-lib.a programs/client/libclickhouse-client-lib.a programs/local/libclickhouse-local-lib.a programs/benchmark/libclickhouse-benchmark-lib.a programs/copier/libclickhouse-copier-lib.a programs/extract-from-config/libclickhouse-extract-from-config-lib.a programs/compressor/libclickhouse-compressor-lib.a programs/format/libclickhouse-format-lib.a programs/obfuscator/libclickhouse-obfuscator-lib.a programs/server/libclickhouse-server-lib.a programs/client/libclickhouse-client-lib.a base/daemon/libdaemon.a base/loggers/libloggers.a src/Functions/libclickhouse_functions.a src/Dictionaries/libclickhouse_dictionaries.a contrib/consistent-hashing/libconsistent-hashing.a contrib/consistent-hashing-sumbur/libconsistent-hashing-sumbur.a contrib/libfarmhash/libfarmhash.a contrib/libmetrohash/libmetrohash.a contrib/murmurhash/libmurmurhash.a contrib/base64-cmake/libbase64.a contrib/h3-cmake/libh3.a contrib/simdjson-cmake/libsimdjson.a src/Functions/URL/libclickhouse_functions_url.a contrib/hyperscan/lib/libhs.a src/Functions/array/libclickhouse_functions_array.a src/Functions/GatherUtils/libclickhouse_functions_gatherutils.a src/AggregateFunctions/libclickhouse_aggregate_functions.a src/TableFunctions/libclickhouse_table_functions.a src/Storages/System/libclickhouse_storages_system.a src/libdbms.a src/Common/Config/libclickhouse_common_config.a src/Common/ZooKeeper/libclickhouse_common_zookeeper.a src/Parsers/libclickhouse_parsers.a contrib/libbtrie/libbtrie.a contrib/poco/MongoDB/libPocoMongoDB.a contrib/poco/Redis/libPocoRedis.a src/Dictionaries/Embedded/libclickhouse_dictionaries_embedded.a src/libclickhouse_common_io.a src/Common/StringUtils/libstring_utils.a base/common/libcommon.a contrib/replxx-cmake/libreplxx.a contrib/cctz-cmake/libcctz.a base/widechar_width/libwidechar_width.a contrib/ryu-cmake/libryu.a contrib/re2/libre2.a contrib/re2_st/libre2_st.a contrib/cityhash102/libcityhash.a contrib/boost-cmake/libboost_program_options_internal.a contrib/croaring/libroaring.a contrib/libcpuid/libcpuid.a contrib/poco/NetSSL_OpenSSL/libPocoNetSSL.a contrib/poco/Net/libPocoNet.a contrib/poco/Util/libPocoUtil.a contrib/poco/XML/libPocoXML.a contrib/poco/JSON/libPocoJSON.a contrib/poco/Crypto/libPocoCrypto.a contrib/poco/Foundation/libPocoFoundation.a contrib/brotli-cmake/libbrotli.a contrib/cppkafka-cmake/libcppkafka.a contrib/librdkafka-cmake/librdkafka.a contrib/openssl-cmake/libssl.a contrib/openssl-cmake/libcrypto.a contrib/libgsasl/liblibgsasl.a contrib/capnproto-cmake/libcapnpc.a contrib/capnproto-cmake/libcapnp.a contrib/capnproto-cmake/libkj.a contrib/arrow-cmake/libparquet_static.a contrib/arrow-cmake/libarrow_static.a contrib/double-conversion-cmake/libdouble-conversion.a contrib/boost-cmake/libboost_filesystem_internal.a contrib/boost-cmake/libboost_system_internal.a contrib/lz4-cmake/liblz4.a contrib/zstd-cmake/libzstd.a contrib/flatbuffers/libflatbuffers.a contrib/arrow-cmake/libthrift_static.a contrib/boost-cmake/libboost_regex_internal.a contrib/avro-cmake/libavrocpp.a contrib/boost-cmake/libboost_iostreams_internal.a contrib/zlib-ng/libzlib.a contrib/snappy/libsnappy.a contrib/protobuf/cmake/libprotobuf.a contrib/libcxx-cmake/libcxx.a contrib/libcxxabi-cmake/libcxxabi.a -nodefaultlibs  -lc -lm -lpthread -ldl && :\r\nUndefined symbols for architecture x86_64:\r\n  \"_HIST_countFast_wksp\", referenced from:\r\n      _ZSTD_compressBlock_internal in libzstd.a(zstd_compress.c.o)\r\n  \"_HIST_count_simple\", referenced from:\r\n      _HUF_writeCTable in libzstd.a(huf_compress.c.o)\r\n      _ZSTD_compressBlock_btopt in libzstd.a(zstd_opt.c.o)\r\n      _ZSTD_compressBlock_btultra in libzstd.a(zstd_opt.c.o)\r\n      _ZSTD_compressBlock_btultra2 in libzstd.a(zstd_opt.c.o)\r\n      _ZSTD_initStats_ultra in libzstd.a(zstd_opt.c.o)\r\n      _ZSTD_compressBlock_btopt_dictMatchState in libzstd.a(zstd_opt.c.o)\r\n      _ZSTD_compressBlock_btultra_dictMatchState in libzstd.a(zstd_opt.c.o)\r\n      ...\r\n  \"_HIST_count_wksp\", referenced from:\r\n      _FSE_compress_wksp in libzstd.a(fse_compress.c.o)\r\n      _HUF_compress_internal in libzstd.a(huf_compress.c.o)\r\n  \"_ZSTD_DDict_dictContent\", referenced from:\r\n      _ZSTD_decompressMultiFrame in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressBegin_usingDDict in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressStream in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_DDict_dictSize\", referenced from:\r\n      _ZSTD_decompressMultiFrame in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressBegin_usingDDict in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressStream in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_buildCTable\", referenced from:\r\n      _ZSTD_compressBlock_internal in libzstd.a(zstd_compress.c.o)\r\n  \"_ZSTD_buildFSETable\", referenced from:\r\n      _ZSTD_loadDEntropy in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_compressLiterals\", referenced from:\r\n      _ZSTD_compressBlock_internal in libzstd.a(zstd_compress.c.o)\r\n  \"_ZSTD_copyDDictParameters\", referenced from:\r\n      _ZSTD_decompressMultiFrame in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressBegin_usingDDict in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressStream in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_createDDict_advanced\", referenced from:\r\n      _ZSTD_DCtx_loadDictionary_advanced in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_loadDictionary_byReference in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_loadDictionary in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_refPrefix_advanced in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_refPrefix in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_initDStream_usingDict in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_decompressBlock_internal\", referenced from:\r\n      _ZSTD_decompressMultiFrame in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressContinue in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_encodeSequences\", referenced from:\r\n      _ZSTD_compressBlock_internal in libzstd.a(zstd_compress.c.o)\r\n  \"_ZSTD_freeDDict\", referenced from:\r\n      _ZSTD_freeDCtx in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressDCtx in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompress in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_loadDictionary_advanced in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_loadDictionary_byReference in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_loadDictionary in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_DCtx_refPrefix_advanced in libzstd.a(zstd_decompress.c.o)\r\n      ...\r\n  \"_ZSTD_getcBlockSize\", referenced from:\r\n      _ZSTD_findFrameSizeInfo in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressMultiFrame in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_decompressContinue in libzstd.a(zstd_decompress.c.o)\r\n  \"_ZSTD_selectEncodingType\", referenced from:\r\n      _ZSTD_compressBlock_internal in libzstd.a(zstd_compress.c.o)\r\n  \"_ZSTD_sizeof_DDict\", referenced from:\r\n      _ZSTD_sizeof_DCtx in libzstd.a(zstd_decompress.c.o)\r\n      _ZSTD_sizeof_DStream in libzstd.a(zstd_decompress.c.o)\r\n  \"_rd_fnv1a\", referenced from:\r\n      _rd_kafka_msg_partitioner_fnv1a in librdkafka.a(rdkafka_msg.c.o)\r\n      _rd_kafka_msg_partitioner_fnv1a_random in librdkafka.a(rdkafka_msg.c.o)\r\n  \"_rd_kafka_coord_cache_destroy\", referenced from:\r\n      _rd_kafka_destroy_internal in librdkafka.a(rdkafka.c.o)\r\n  \"_rd_kafka_coord_cache_expire\", referenced from:\r\n      _rd_kafka_1s_tmr_cb in librdkafka.a(rdkafka.c.o)\r\n  \"_rd_kafka_coord_cache_init\", referenced from:\r\n      _rd_kafka_new in librdkafka.a(rdkafka.c.o)\r\n  \"_rd_kafka_coord_reqs_init\", referenced from:\r\n      _rd_kafka_new in librdkafka.a(rdkafka.c.o)\r\n  \"_rd_kafka_coord_rkb_monitor_cb\", referenced from:\r\n      _rd_kafka_broker_add in librdkafka.a(rdkafka_broker.c.o)\r\n  \"_rd_kafka_error_destroy\", referenced from:\r\n      _rd_kafka_op_destroy in librdkafka.a(rdkafka_op.c.o)\r\n  \"_rd_kafka_error_new\", referenced from:\r\n      _rd_kafka_consumer_group_metadata_read in librdkafka.a(rdkafka_cgrp.c.o)\r\n  \"_rd_kafka_error_string\", referenced from:\r\n      _unittest_cgrp in librdkafka.a(rdkafka_cgrp.c.o)\r\n  \"_rd_kafka_mock_cgrp_check_state\", referenced from:\r\n      _rd_kafka_mock_handle_OffsetCommit in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_Heartbeat in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_LeaveGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_SyncGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_destroy\", referenced from:\r\n      _rd_kafka_mock_cluster_destroy in librdkafka.a(rdkafka_mock.c.o)\r\n  \"_rd_kafka_mock_cgrp_find\", referenced from:\r\n      _rd_kafka_mock_handle_OffsetCommit in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_Heartbeat in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_LeaveGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_SyncGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_get\", referenced from:\r\n      _rd_kafka_mock_handle_JoinGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_member_active\", referenced from:\r\n      _rd_kafka_mock_handle_Heartbeat in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_SyncGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_member_add\", referenced from:\r\n      _rd_kafka_mock_handle_JoinGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_member_assignment_set\", referenced from:\r\n      _rd_kafka_mock_handle_SyncGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_member_find\", referenced from:\r\n      _rd_kafka_mock_handle_OffsetCommit in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_Heartbeat in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_LeaveGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n      _rd_kafka_mock_handle_SyncGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_member_leave\", referenced from:\r\n      _rd_kafka_mock_handle_LeaveGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_member_sync_set\", referenced from:\r\n      _rd_kafka_mock_handle_SyncGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrp_protos_destroy\", referenced from:\r\n      _rd_kafka_mock_handle_JoinGroup in librdkafka.a(rdkafka_mock_handlers.c.o)\r\n  \"_rd_kafka_mock_cgrps_connection_closed\", referenced from:\r\n      _rd_kafka_mock_connection_close in librdkafka.a(rdkafka_mock.c.o)\r\n  \"_rd_kafka_txn_coord_query\", referenced from:\r\n      _rd_kafka_idemp_pid_fsm in librdkafka.a(rdkafka_idempotence.c.o)\r\n  \"_rd_kafka_txn_coord_set\", referenced from:\r\n      _rd_kafka_idemp_request_pid_failed in librdkafka.a(rdkafka_idempotence.c.o)\r\n  \"_rd_kafka_txn_idemp_state_change\", referenced from:\r\n      _rd_kafka_idemp_set_state in librdkafka.a(rdkafka_idempotence.c.o)\r\n  \"_rd_kafka_txn_schedule_register_partitions\", referenced from:\r\n      _rd_kafka_txn_add_partition in librdkafka.a(rdkafka_msg.c.o)\r\n  \"_rd_kafka_txn_set_abortable_error\", referenced from:\r\n      _rd_kafka_msgbatch_handle_Produce_result in librdkafka.a(rdkafka_request.c.o)\r\n  \"_rd_kafka_txn_set_fatal_error\", referenced from:\r\n      _rd_kafka_msgbatch_handle_Produce_result in librdkafka.a(rdkafka_request.c.o)\r\n      _rd_kafka_idemp_check_error in librdkafka.a(rdkafka_idempotence.c.o)\r\n      _rd_kafka_idemp_pid_fsm in librdkafka.a(rdkafka_idempotence.c.o)\r\n      _rd_kafka_idemp_request_pid_failed in librdkafka.a(rdkafka_idempotence.c.o)\r\n  \"_rd_kafka_txns_init\", referenced from:\r\n      _rd_kafka_idemp_init in librdkafka.a(rdkafka_idempotence.c.o)\r\n  \"_rd_kafka_txns_term\", referenced from:\r\n      _rd_kafka_idemp_term in librdkafka.a(rdkafka_idempotence.c.o)\r\n  \"_unittest_fnv1a\", referenced from:\r\n      l___const.rd_unittest.unittests in librdkafka.a(rdunittest.c.o)\r\nld: symbol(s) not found for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nninja: build stopped: subcommand failed.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11460",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11460/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11460/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11460/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11460",
    "id": 631210457,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI4MTQyNTQ5",
    "number": 11460,
    "title": "ssl in copier",
    "user": {
      "login": "nikitamikhaylov",
      "id": 25705399,
      "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitamikhaylov",
      "html_url": "https://github.com/nikitamikhaylov",
      "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
      "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
      "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
      "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1874596525,
        "node_id": "MDU6TGFiZWwxODc0NTk2NTI1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/no-docs-needed",
        "name": "no-docs-needed",
        "color": "efefef",
        "default": false,
        "description": ""
      },
      {
        "id": 1309693854,
        "node_id": "MDU6TGFiZWwxMzA5NjkzODU0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-build",
        "name": "pr-build",
        "color": "007700",
        "default": false,
        "description": "Pull request with build/testing/packaging improvement"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-04T23:33:31Z",
    "updated_at": "2020-06-09T02:03:54Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11460",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11460",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11460.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11460.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Build/Testing/Packaging Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nNow copier works with ssl. Also try to fix flappy tests. "
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11459",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11459/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11459/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11459/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11459",
    "id": 631210077,
    "node_id": "MDU6SXNzdWU2MzEyMTAwNzc=",
    "number": 11459,
    "title": "OrderBy on Aggregation without Group By",
    "user": {
      "login": "jakesyl",
      "id": 6392429,
      "node_id": "MDQ6VXNlcjYzOTI0Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6392429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jakesyl",
      "html_url": "https://github.com/jakesyl",
      "followers_url": "https://api.github.com/users/jakesyl/followers",
      "following_url": "https://api.github.com/users/jakesyl/following{/other_user}",
      "gists_url": "https://api.github.com/users/jakesyl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jakesyl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jakesyl/subscriptions",
      "organizations_url": "https://api.github.com/users/jakesyl/orgs",
      "repos_url": "https://api.github.com/users/jakesyl/repos",
      "events_url": "https://api.github.com/users/jakesyl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jakesyl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2020-06-04T23:32:15Z",
    "updated_at": "2020-06-09T16:00:20Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**tl;dr: Is there any way to do an order by on a materialized view without a group by**\r\n\r\nWe've got a few billion transactions of various values we sum to get a live `balance` for a given `users` in a materialized view. We then `ORDER BY` this `balance` in a materialized view and allow pagination. `GROUP BY`  is too slow so we'd like to pre-compute the data somehow.\r\n\r\n## The Schema\r\nWe have a table that looks something like this:\r\n\r\n```sql\r\nCREATE TABLE IF NOT EXISTS transactions\r\n\t(\r\n                 txid FixedString(32),\r\n\t\t value Float64,\r\n\t\t user String\r\n\t) ENGINE = AggregatingMergeTree()\r\n\tORDER BY (user, txid, value)\r\n\tPRIMARY KEY (user, txid, value)\r\n```\r\n\r\nThere are about 4 billion rows in here and we're adding about 7 million per day. We have a materialized view off of this table (using [`TO`](https://www.altinity.com/blog/clickhouse-materialized-views-illuminated-part-2)) that keeps track of transaction count, balance, and transaction count of these users. I've tried out a bunch of different implementations for this ([`MergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/mergetree/) [`SummingMergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/summingmergetree/), [`AggregatingMergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/aggregatingmergetree/), [`ReplacingMergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/replacingmergetree/)) but below,  I'll use the simplest iteration of the table:\r\n\r\n```sql\r\nCREATE TABLE IF NOT EXISTS users (\r\n\t\tbalance AggregateFunction(sum, Float64),\r\n\t\tuser String,\r\n\t\ttx_count AggregateFunction(uniq, FixedString(64)),\r\n\t)\r\n\tENGINE = AggregatingMergeTree()\r\n\tORDER BY (user, balance);\r\n```\r\nI do an initial insert like this:\r\n\r\n```sql\r\nINSERT INTO users\r\nSELECT\r\n\t\tsum(value) as balance,\r\n\t\tuser,\r\n                COUNT(*) as tx_count\r\nFROM transactions\r\nGROUP BY user\r\n```\r\n\r\n```sql\r\nCREATE MATERIALIZED VIEW users\r\n\tTO users\r\n\tAS SELECT\r\n\t\tsum(value) as balance,\r\n\t\tuser,\r\n               COUNT(*) as tx_count\r\nFROM transactions\r\nGROUP BY user -- I do have a where here to make sure this is only new data, \r\n             -- schema is simplified for github\r\n```\r\n\r\nI then have a materialized view using [`TO`](https://www.altinity.com/blog/clickhouse-materialized-views-illuminated-part-2) to populate this table. No matter what I do here I end up with duplicate records. All I'd like here is to be able to query ~700 million rows using and `ORDER BY balance` in a performant manner. As soon as I add in `GROUP BY` this slows to a halt.\r\n\r\nI realize above might not be correct (I'm not even sure if `SimpleAggregateFunction`) is meant to deduplicate here. It's just the simplest implementation to demonstrate the problem. Here are some of the solutions I've tried:\r\n\r\n## What I've Tried so Far\r\n\r\n- [`SummingMergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/summingmergetree/):   will allow me to deduplicate in the background (and this works), but still requires the `GROUP BY` query which is too slow ~20 seconds and took up too much memory. \r\n- [`AggregatingMergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/aggregatingmergetree/) with [sumState](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/aggregatingmergetree/#example-of-an-aggregated-materialized-view): As per #10326, tried using a sumState. This still required a group by and was less performant than `SummingMergeTree` (presumably because of the merging)\r\n- [`ReplacingMergeTree`](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/replacingmergetree/) I tried the same thing as `SummingMergeTree` and this was predictably less performant \r\n- [`LiveView`](https://github.com/ClickHouse/ClickHouse/pull/3925): [Creating a live view](https://www.altinity.com/blog/2019/11/13/making-data-come-to-life-with-clickhouse-live-view-tables) on the select query above. This is not supported as per #3925\r\n- Query time deduplication: In this implementation, I tried to query from a `subquery` which eliminated the duplicates in a group by with no luck #10876\r\n- Query time max: In this implementation, I introduced a `CREATED_BY` and tried a `MAX()` on this field with no performance improvements\r\n- `OPTIMIZE DEDUPLICATE`/ `OPTIMIZE DEDUPLICATE FINAL`- I didn't expect this to work, and it didn't as per #1178, #5125, etc.\r\n` SELECT FINAL` - less performant than group by everywhere.\r\n\r\n## What I'm going to try\r\nSo I think I understand the fundamental problems here:\r\n\r\n- Clickhouse is append only (deletes/updates are expensive)\r\n- MVs are therefore triggers (and have no context on underlying data)\r\n- Triggers are appending new data and old data can't be deleted synchronously.\r\n\r\nAlso keep in mind my data pipeline is not streaming - we're talking about an update every ~15 seconds. Here are my ideas. I'll be updating this issue as I try things:\r\n\r\n1. Query time validation: e.g. `SELECT * FROM x ORDER BY BALANCER FROM (SELECT * FROM x ORDER BY BALANCE DESC  INNER JOIN ON address argMax(balance) as balancer LIMIT 50))`\r\n1. [Skipping Index](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/mergetree/#table_engine-mergetree-data_skipping-indexes) on tx_count with `max(tx_count)` on GROUP BY with a `ReplicatedReplacingMergeTree` and version equal to `tx_count` (with [`argMax`](https://stackoverflow.com/a/59788716/1011803))\r\n1. ~Speed up group by using [`LowCardinality`](https://github.com/ClickHouse/ClickHouse/issues/4796#issuecomment-477610482) as per #4796/#3138~ 90 seconds instead of 140, nice improvement\r\n1. ~Lower Index Granularity (currently at 8192) - trying out 50 combined with `LowCardinality`~ slows it down by ~40 seconds. Makes sense as per [this explanation](https://medium.com/@f1yegor/clickhouse-primary-keys-2cf2a45d7324)\r\n1. ~Speed up group by using `FixedString` on `User` (this will average appxm. 32 null bytes)~ pretty good results here. 250 seconds vs 139 seconds\r\n1. ~`FixedString`/`LowCardinality` combo~ - OOM because of the `null_bytes`\r\n1. ~Remove replication~: all of our tables are `Replicated`, but none actually replicate so as expected this didn't do anything \r\n1. ~Only sum on column I want to paginate on~ (60 seconds instead of 500 so definitely an improvement. Might work with `LowCardinality` and ~`FixedString`~, will test there as well\r\n1. Full reinsertion [CollapsingMergeTree](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/versionedcollapsingmergetree/). Every interval reinserts all previously computed data (using group by on MV) with a version NOW() column.  WHERE time=NOW() is used as a filter for our oderby and users are collapsed according to `NOW()` since primary key is `User`\r\n1. ~Create a MV to insert into a Memory table on every update (since these can be treated as temporary)~ Too big\r\n1. ~Two layer mv: `maxState on summingMergeTree`~ same duplicate issue\r\n1.  Create/Drop Partition: Recompute _all_ users every block, drop old partitions, create a new one\r\n1. ~Live View (I'm not sure how to pull this off)~ - won't work as per my [comment](https://github.com/ClickHouse/ClickHouse/pull/5541#issuecomment-639194808) on #5541 \r\n1. Historical balance table with some sort of cumulative sum (so all users balances get recomputed at every interval)~ ([VersionedCollapsingMergeTree](https://clickhouse.tech/docs/en/engines/table-engines/mergetree-family/versionedcollapsingmergetree/) works just as well here and we have [deduplicate_blocks_in_dependent_materialized_views](https://clickhouse.tech/docs/en/operations/settings/settings/#settings-insert-deduplicate) and [insert_deduplicate](https://clickhouse.tech/docs/en/operations/settings/settings/#settings-insert-deduplicate) on so these rows should be inserted in a single transaction. The examples precedent I've seen for this use (#4628 and [percona](https://www.percona.com/sites/default/files/ple19-slides/day2-am/clickhouse-materialized-views-a-secret-weapon-for-high-performance-analytics.pdf))\r\n1. ~Calculate position at insert time (using group by)~ window views aren't possible at insert time and have the same issues as other materialized views\r\n1. [VictoriaMetrics style Snapshots](https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282) - (hard links, these are super cool by the way)\r\n1. Merge in #9113 (Optimization of GROUP BY with respect to table sorting key) locally and see if group by is fast enough\r\n1. Create a custom non-LSM tree engine (or maybe mysql) that supports updates since aggregated data doesn't change that often\r\n1.  New MV's every time at interval (physically `recreate MATERIALIZED VIEW` with `POPULATE`)\r\n1. Store the data somewhere else: (e.g. redis, mysql) w/ update performance (*last resort*)\r\n\r\nWould appreciate it if someone could point me in the right direction here"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11435/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11435",
    "id": 630714997,
    "node_id": "MDU6SXNzdWU2MzA3MTQ5OTc=",
    "number": 11435,
    "title": "Helpful error messages when creating MergeTree tables",
    "user": {
      "login": "BayoNet",
      "id": 2968367,
      "node_id": "MDQ6VXNlcjI5NjgzNjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2968367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BayoNet",
      "html_url": "https://github.com/BayoNet",
      "followers_url": "https://api.github.com/users/BayoNet/followers",
      "following_url": "https://api.github.com/users/BayoNet/following{/other_user}",
      "gists_url": "https://api.github.com/users/BayoNet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BayoNet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BayoNet/subscriptions",
      "organizations_url": "https://api.github.com/users/BayoNet/orgs",
      "repos_url": "https://api.github.com/users/BayoNet/repos",
      "events_url": "https://api.github.com/users/BayoNet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BayoNet/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 845247686,
        "node_id": "MDU6TGFiZWw4NDUyNDc2ODY=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability",
        "name": "usability",
        "color": "ebf28c",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "qoega",
      "id": 2159081,
      "node_id": "MDQ6VXNlcjIxNTkwODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2159081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qoega",
      "html_url": "https://github.com/qoega",
      "followers_url": "https://api.github.com/users/qoega/followers",
      "following_url": "https://api.github.com/users/qoega/following{/other_user}",
      "gists_url": "https://api.github.com/users/qoega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qoega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qoega/subscriptions",
      "organizations_url": "https://api.github.com/users/qoega/orgs",
      "repos_url": "https://api.github.com/users/qoega/repos",
      "events_url": "https://api.github.com/users/qoega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qoega/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "qoega",
        "id": 2159081,
        "node_id": "MDQ6VXNlcjIxNTkwODE=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/2159081?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/qoega",
        "html_url": "https://github.com/qoega",
        "followers_url": "https://api.github.com/users/qoega/followers",
        "following_url": "https://api.github.com/users/qoega/following{/other_user}",
        "gists_url": "https://api.github.com/users/qoega/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/qoega/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/qoega/subscriptions",
        "organizations_url": "https://api.github.com/users/qoega/orgs",
        "repos_url": "https://api.github.com/users/qoega/repos",
        "events_url": "https://api.github.com/users/qoega/events{/privacy}",
        "received_events_url": "https://api.github.com/users/qoega/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-04T10:46:09Z",
    "updated_at": "2020-06-04T10:46:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "If, when creating a `*MergeTree` table, you use wrong of insufficient definition, the error messages don't help to solve the issue.\r\n\r\nExample:\r\n\r\n```\r\n:) create table bayonet_a (a Int8) engine=MergeTree()\r\n\r\nCREATE TABLE bayonet_a\r\n(\r\n    `a` Int8\r\n)\r\nENGINE = MergeTree()\r\n\r\nReceived exception from server (version 20.5.1):\r\nCode: 42. DB::Exception: Received from localhost:9000. DB::Exception: Storage MergeTree requires 3 to 4 parameters: \r\nname of column with date,\r\n[sampling element of primary key],\r\nprimary key expression,\r\nindex granularity\r\n\r\nMergeTree is a family of storage engines.\r\n...\r\n```\r\n\r\nEach table engine from the MergeTree family requires individual message text."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11428/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11428",
    "id": 630614661,
    "node_id": "MDU6SXNzdWU2MzA2MTQ2NjE=",
    "number": 11428,
    "title": "Can't execute SELECT query with readonly=1 and GLOBAL subquery",
    "user": {
      "login": "PhantomPhreak",
      "id": 8307692,
      "node_id": "MDQ6VXNlcjgzMDc2OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8307692?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PhantomPhreak",
      "html_url": "https://github.com/PhantomPhreak",
      "followers_url": "https://api.github.com/users/PhantomPhreak/followers",
      "following_url": "https://api.github.com/users/PhantomPhreak/following{/other_user}",
      "gists_url": "https://api.github.com/users/PhantomPhreak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PhantomPhreak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PhantomPhreak/subscriptions",
      "organizations_url": "https://api.github.com/users/PhantomPhreak/orgs",
      "repos_url": "https://api.github.com/users/PhantomPhreak/repos",
      "events_url": "https://api.github.com/users/PhantomPhreak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PhantomPhreak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-04T08:22:45Z",
    "updated_at": "2020-06-24T05:10:19Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "I'm trying to execute following queries:\r\n```\r\nSELECT  <columns>\r\n    FROM <db>.distributed_table1\r\n            GLOBAL INNER JOIN (SELECT <colums> FROM <db>.distributed_table2 WHERE <clause> GROUP BY <column>) USING <columns>\r\n    WHERE\r\n            <clause>\r\n    ORDER BY <column>\r\n```\r\n\r\n```\r\nSELECT <column>\r\nFROM <db>.distributed_table1\r\nWHERE <column> GLOBAL IN \r\n(\r\n    SELECT <column>\r\n    FROM <db>.distributed_table2\r\n    WHERE <clause>\r\n) AND <clause>\r\n```\r\nWith `readonly=1` setting and getting following error\r\n`DB::Exception: <username>: Cannot execute query in readonly mode.`\r\n\r\nI'm trying to execute a query under the user, having access to the databases, listed in `allow_databases` section of `users.xml`\r\n\r\nIt also has a following grants for needed databases\r\n```\r\nGRANTS: GRANT ALTER, CREATE DATABASE, CREATE DICTIONARY, CREATE TABLE, CREATE VIEW, DROP, INSERT, OPTIMIZE, SELECT, SHOW, SYSTEM FETCHES, SYST$M FLUSH DISTRIBUTED, SYSTEM MERGES, SYSTEM MOVES, SYSTEM REPLICATION QUEUES, SYSTEM RESTART REPLICA, SYSTEM SENDS, SYSTEM SYNC REPLICA, SYSTEM TTL MERGES, TRUNCATE, dictGet ON <db>.* TO <user>\r\n```\r\n\r\nWithout a GLOBAL clause, together with `distributed_product_mode='allow' `, it works as expected.\r\nWith a `readonly=0`, or `readonly=2` it also works as expected.\r\n\r\nJust in case, here is a list of non-default (changed=1) settings i used to reproduce this issue \r\n```\r\n┌─name─────────────────────────────────────────┬─value────────┐\r\n│ receive_timeout                              │ 7200         │\r\n│ send_timeout                                 │ 7200         │\r\n│ use_uncompressed_cache                       │ 0            │\r\n│ load_balancing                               │ random       │\r\n│ distributed_aggregation_memory_efficient     │ 1            │\r\n│ priority                                     │ 5            │\r\n│ log_queries                                  │ 1            │\r\n│ joined_subquery_requires_alias               │ 0            │\r\n│ allow_distributed_ddl                        │ 0            │\r\n│ max_bytes_before_external_group_by           │ 34359738368  │\r\n│ max_bytes_before_external_sort               │ 34359738368  │\r\n│ max_execution_time                           │ 7200         │\r\n│ readonly                                     │ 1            │\r\n│ max_memory_usage                             │ 103079215104 │\r\n│ max_memory_usage_for_user                    │ 137438953472 │\r\n│ log_query_threads                            │ 0            │\r\n│ allow_ddl                                    │ 0            │\r\n│ cancel_http_readonly_queries_on_client_close │ 1            │\r\n│ max_memory_usage_for_all_queries             │ 171798691840 │\r\n└──────────────────────────────────────────────┴──────────────┘\r\n```\r\n\r\nClickHouse version: 20.4.3.16"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11426/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11426",
    "id": 630572542,
    "node_id": "MDU6SXNzdWU2MzA1NzI1NDI=",
    "number": 11426,
    "title": "questions about variable namespace in sql",
    "user": {
      "login": "peaksnail",
      "id": 1744607,
      "node_id": "MDQ6VXNlcjE3NDQ2MDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1744607?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peaksnail",
      "html_url": "https://github.com/peaksnail",
      "followers_url": "https://api.github.com/users/peaksnail/followers",
      "following_url": "https://api.github.com/users/peaksnail/following{/other_user}",
      "gists_url": "https://api.github.com/users/peaksnail/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peaksnail/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peaksnail/subscriptions",
      "organizations_url": "https://api.github.com/users/peaksnail/orgs",
      "repos_url": "https://api.github.com/users/peaksnail/repos",
      "events_url": "https://api.github.com/users/peaksnail/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peaksnail/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-04T07:17:04Z",
    "updated_at": "2020-06-04T07:17:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "hi team\r\n\r\nthere is a table named bill\r\n\r\n```\r\nno               String,\r\nisRefund    UInt8,\r\nfee              Int64\r\n```\r\n\r\ninsert data\r\n```\r\ninsert into bill (no,isRefund,fee) values ('a',1,10) ('b',0,20)\r\n```\r\n\r\n2 execute sql \r\n```\r\nselect no,if(isRefund=0,1,-1) as isRefund, isRefund*fee as fee, fee as somethingFee from bill\r\n```\r\nI get the result\r\n```\r\nno isRefund fee somethingFee\r\n'a'  -1   -10 10\r\n'b'  1     20  20\r\n```\r\n>the field `fee` is not overwrited\r\n\r\n\r\n3 execute sql\r\n```\r\nselect no,if(isRefund=0,1,-1) as isRefund, isRefund*fee as fee, if(1=1,fee,0) as somethingFee from bill\r\n```\r\nI get the result\r\n```\r\nno isRefund fee somethingFee\r\n'a'  -1   -10 -10\r\n'b'  1    20  20\r\n```\r\n>the field `fee` is overwrited\r\n\r\n\r\nthe varibale namespace make me confused"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11425/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11425",
    "id": 630569899,
    "node_id": "MDU6SXNzdWU2MzA1Njk4OTk=",
    "number": 11425,
    "title": "how to use multi process and multi disk storage for HA",
    "user": {
      "login": "songenjie",
      "id": 37113176,
      "node_id": "MDQ6VXNlcjM3MTEzMTc2",
      "avatar_url": "https://avatars1.githubusercontent.com/u/37113176?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/songenjie",
      "html_url": "https://github.com/songenjie",
      "followers_url": "https://api.github.com/users/songenjie/followers",
      "following_url": "https://api.github.com/users/songenjie/following{/other_user}",
      "gists_url": "https://api.github.com/users/songenjie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/songenjie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/songenjie/subscriptions",
      "organizations_url": "https://api.github.com/users/songenjie/orgs",
      "repos_url": "https://api.github.com/users/songenjie/repos",
      "events_url": "https://api.github.com/users/songenjie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/songenjie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-04T07:12:25Z",
    "updated_at": "2020-06-05T02:48:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "## ip\r\n4 machine : node1 node2 node3 node4\r\n\r\n## replica\r\n3 replica \r\n\r\n## disk\r\n```\r\nFilesystem      Size  Used Avail Use% Mounted on\r\n/dev/sdd1       5.5T  178G  5.1T   4% /data1\r\n/dev/sdf1       5.5T  142G  5.1T   3% /data3\r\n/dev/sdj1       5.5T  176G  5.1T   4% /data7\r\n/dev/sde1       5.5T  178G  5.1T   4% /data2\r\n/dev/sdc1       5.5T  144G  5.1T   3% /data0\r\n/dev/sdi1       5.5T  170G  5.1T   4% /data6\r\n/dev/sdg1       5.5T  140G  5.1T   3% /data4\r\n/dev/sdh1       5.5T  272G  5.0T   6% /data5\r\n```\r\n\r\n## metrika.xml multi process \r\n![image](https://user-images.githubusercontent.com/37113176/83725415-7bb38080-a674-11ea-9d1f-94f57d7e40d8.png)\r\n\r\n```\r\n\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node1</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node2</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node3</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node2</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node3</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node4</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node3</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node4</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node1</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n        <shard>\r\n            <weight>1</weight>\r\n            <internal_replication>true</internal_replication>\r\n            <replica>\r\n                <host>node4</host>\r\n                <port>port1</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node1</host>\r\n                <port>port2</port>\r\n            </replica>\r\n            <replica>\r\n                <host>node2</host>\r\n                <port>port3</port>\r\n            </replica>\r\n        </shard>\r\n```\r\n\r\n## for multi process i want \r\n1 . example at node1\r\n```\r\nnode1 process port1 use data0、data1\r\nnode1 process port2 use data2、data3\r\nnode1 process port3 use data4、data5\r\nall process use data6、data7 \r\n```\r\n\r\n\r\n# question \r\n2.  for example  node1 process port1    ```question```\r\n- config.xml node1 process port1 \r\n```\r\n\r\n<path>/data0/clickhouse/data/</path>\r\n<storage_policy>/data0/clickhouse/conf/storage_policy.xml</storage_policy>\r\n```\r\n\r\n- storage_policy.xml  node1 process port1 \r\n```\r\n<yandex>\r\n    <storage_configuration>\r\n        <disks>\r\n            <disk0>\r\n                <path>/data0/clickhouse/data/</path>\r\n            </disk0>\r\n            <disk1>\r\n                <path>/data1/clickhouse/data/</path>\r\n            </disk1>\r\n            <disk2>\r\n                <path>/data2/clickhouse/data/</path>\r\n            </disk2>\r\n            <disk3>\r\n                <path>/data3/clickhouse/data/</path>\r\n            </disk3>\r\n            <disk4>\r\n                <path>/data4/clickhouse/data/</path>\r\n            </disk4>\r\n            <disk5>\r\n                <path>/data5/clickhouse/data/</path>\r\n            </disk5>\r\n            <disk6>\r\n                <path>/data6/clickhouse/data/</path>\r\n            </disk6>\r\n            <disk7>\r\n                <path>/data7/clickhouse/data/</path>\r\n            </disk7>\r\n        </disks>\r\n\r\n        <policies>\r\n            <default>\r\n                <volumes>\r\n                    <hot>\r\n                        <disk>disk0</disk>\r\n                        <disk>disk1</disk>\r\n                    </hot>\r\n                    <cold>\r\n                        <disk>disk6</disk>\r\n                        <disk>disk7</disk>\r\n                    </cold>\r\n                </volumes>\r\n                <move_factor>0.25</move_factor>\r\n            </default>\r\n        </policies>\r\n    </storage_configuration>\r\n</yandex>\r\n```\r\n\r\nif create table storage policy use default ,did disk0 disk1 storage work ```round-robin ``` ???????\r\n![image](https://user-images.githubusercontent.com/37113176/83726540-3c862f00-a676-11ea-95e3-e11d1a2b9e39.png)\r\n\r\nhttps://github.com/ClickHouse/ClickHouse/blob/master/tests/integration/test_distributed_storage_configuration/configs/config.d/storage_configuration.xml\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11423",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11423/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11423/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11423/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11423",
    "id": 630550489,
    "node_id": "MDU6SXNzdWU2MzA1NTA0ODk=",
    "number": 11423,
    "title": "Ch read queue is empty",
    "user": {
      "login": "wujieaiyan",
      "id": 22367785,
      "node_id": "MDQ6VXNlcjIyMzY3Nzg1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/22367785?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wujieaiyan",
      "html_url": "https://github.com/wujieaiyan",
      "followers_url": "https://api.github.com/users/wujieaiyan/followers",
      "following_url": "https://api.github.com/users/wujieaiyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/wujieaiyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wujieaiyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wujieaiyan/subscriptions",
      "organizations_url": "https://api.github.com/users/wujieaiyan/orgs",
      "repos_url": "https://api.github.com/users/wujieaiyan/repos",
      "events_url": "https://api.github.com/users/wujieaiyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wujieaiyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-04T06:35:32Z",
    "updated_at": "2020-06-04T06:37:01Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "The replica node is not in the active state. After checking, the value is empty when it is going to get the queue. It should be judged when it is added to the queue again res.data Empty or not\r\n\r\n                ops.emplace_back(zkutil::makeCreateRequest(\r\n                    replica_path + \"/queue/queue-\", res.data, zkutil::CreateMode::PersistentSequential));\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11418",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11418/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11418/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11418/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11418",
    "id": 630333628,
    "node_id": "MDU6SXNzdWU2MzAzMzM2Mjg=",
    "number": 11418,
    "title": "system.users and system.grants new data dictionary views",
    "user": {
      "login": "meob",
      "id": 5684349,
      "node_id": "MDQ6VXNlcjU2ODQzNDk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5684349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meob",
      "html_url": "https://github.com/meob",
      "followers_url": "https://api.github.com/users/meob/followers",
      "following_url": "https://api.github.com/users/meob/following{/other_user}",
      "gists_url": "https://api.github.com/users/meob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meob/subscriptions",
      "organizations_url": "https://api.github.com/users/meob/orgs",
      "repos_url": "https://api.github.com/users/meob/repos",
      "events_url": "https://api.github.com/users/meob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meob/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 906438147,
        "node_id": "MDU6TGFiZWw5MDY0MzgxNDc=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-fixed",
        "name": "st-fixed",
        "color": "e5b890",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "vitlibar",
      "id": 45142681,
      "node_id": "MDQ6VXNlcjQ1MTQyNjgx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45142681?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vitlibar",
      "html_url": "https://github.com/vitlibar",
      "followers_url": "https://api.github.com/users/vitlibar/followers",
      "following_url": "https://api.github.com/users/vitlibar/following{/other_user}",
      "gists_url": "https://api.github.com/users/vitlibar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vitlibar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vitlibar/subscriptions",
      "organizations_url": "https://api.github.com/users/vitlibar/orgs",
      "repos_url": "https://api.github.com/users/vitlibar/repos",
      "events_url": "https://api.github.com/users/vitlibar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vitlibar/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "vitlibar",
        "id": 45142681,
        "node_id": "MDQ6VXNlcjQ1MTQyNjgx",
        "avatar_url": "https://avatars1.githubusercontent.com/u/45142681?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vitlibar",
        "html_url": "https://github.com/vitlibar",
        "followers_url": "https://api.github.com/users/vitlibar/followers",
        "following_url": "https://api.github.com/users/vitlibar/following{/other_user}",
        "gists_url": "https://api.github.com/users/vitlibar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vitlibar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vitlibar/subscriptions",
        "organizations_url": "https://api.github.com/users/vitlibar/orgs",
        "repos_url": "https://api.github.com/users/vitlibar/repos",
        "events_url": "https://api.github.com/users/vitlibar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vitlibar/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2020-06-03T21:09:56Z",
    "updated_at": "2020-06-26T13:22:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Use case**\r\nAllow quering existing users and defined grants with queries like:\r\nSELECT *\r\n  FROM system.users;\r\nSELECT *\r\n  FROM system.grants;\r\n\r\n**Describe the solution you'd like**\r\nNow that 20.4 fully implements RBAC some additional dictionary views can be useful.\r\nA basic implementation can use only two new views in SYSTEM dictionary.\r\nThe views can be limited to show only the users defined with the SQL-driven workflow.\r\n\r\n**Describe alternatives you've considered**\r\nOther databases uses more complex dictionaries (eg. information_schema in MySQL).\r\n\r\n**Additional context**\r\nIt is only a \"nice to have\" feature... all informations are already available in .sql file in  the access_control_path directory\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11411",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11411/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11411/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11411/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11411",
    "id": 630043633,
    "node_id": "MDU6SXNzdWU2MzAwNDM2MzM=",
    "number": 11411,
    "title": "Add SHOW CLUSTER(S) queries.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 644208617,
        "node_id": "MDU6TGFiZWw2NDQyMDg2MTc=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task",
        "name": "easy task",
        "color": "0e8a16",
        "default": false,
        "description": ""
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-03T14:27:13Z",
    "updated_at": "2020-06-05T15:05:48Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "SHOW CLUSTER name\r\nSHOW CLUSTERS\r\nSHOW CLUSTERS LIKE ..."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11408",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11408/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11408/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11408/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11408",
    "id": 629942289,
    "node_id": "MDU6SXNzdWU2Mjk5NDIyODk=",
    "number": 11408,
    "title": "bloom filter: Received signal Floating point exception",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-03T12:09:09Z",
    "updated_at": "2020-06-03T12:09:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\ncreate table test (a String, index a a type tokenbf_v1(0, 2, 0) granularity 1) engine MergeTree order by a;\r\n\r\ninsert into test values ('a');\r\n```\r\n\r\nZero bloom filter size is not checked and leads to crash."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11407",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11407/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11407/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11407/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11407",
    "id": 629941585,
    "node_id": "MDU6SXNzdWU2Mjk5NDE1ODU=",
    "number": 11407,
    "title": "Subquery in WITH clause with groupArray function produces exception.",
    "user": {
      "login": "pic-Nick",
      "id": 5773437,
      "node_id": "MDQ6VXNlcjU3NzM0Mzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5773437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pic-Nick",
      "html_url": "https://github.com/pic-Nick",
      "followers_url": "https://api.github.com/users/pic-Nick/followers",
      "following_url": "https://api.github.com/users/pic-Nick/following{/other_user}",
      "gists_url": "https://api.github.com/users/pic-Nick/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pic-Nick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pic-Nick/subscriptions",
      "organizations_url": "https://api.github.com/users/pic-Nick/orgs",
      "repos_url": "https://api.github.com/users/pic-Nick/repos",
      "events_url": "https://api.github.com/users/pic-Nick/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pic-Nick/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-03T12:07:53Z",
    "updated_at": "2020-06-03T12:07:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**How to reproduce**\r\nClickHouse server version 20.4.4.18\r\n```\r\nCREATE TABLE aaa (\r\n    id UInt16,\r\n    data String\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY tuple()\r\nORDER BY id;\r\n\r\nINSERT INTO aaa VALUES (1, 'sef'),(2, 'fre'),(3, 'jhg');\r\n\r\nCREATE TABLE bbb (\r\n    id UInt16,\r\n    data String\r\n)\r\nENGINE = MergeTree()\r\nPARTITION BY tuple()\r\nORDER BY id;\r\n\r\nINSERT INTO bbb VALUES (2, 'fre'),(3, 'jhg');\r\n\r\nwith (select groupArray(id) from bbb) as ids\r\nselect *\r\n  from aaa\r\n where id in ids;\r\n```\r\n\r\n**Error message and/or stacktrace**\r\n```\r\n2020.06.03 12:00:31.399863 [ 23024 ] {} <Error> DynamicQueryHandler: Code: 486, e.displayText() = DB::Exception: Scalar `14188208812496221058_14680112869028555957` doesn't exist (internal bug), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x104191d0 in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8fff8ad in /usr/bin/clickhouse\r\n2. ? @ 0xcfdbc2c in /usr/bin/clickhouse\r\n3. DB::FunctionGetScalar::getReturnTypeImpl(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0xa9840f4 in /usr/bin/clickhouse\r\n4. DB::DefaultOverloadResolver::getReturnType(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x9230475 in /usr/bin/clickhouse\r\n5. DB::FunctionOverloadResolverAdaptor::getReturnTypeWithoutLowCardinality(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x92545ed in /usr/bin/clickhouse\r\n6. DB::FunctionOverloadResolverAdaptor::getReturnType(std::__1::vector<DB::ColumnWithTypeAndName, std::__1::allocator<DB::ColumnWithTypeAndName> > const&) const @ 0x92549f2 in /usr/bin/clickhouse\r\n7. DB::ExpressionActions::addImpl(DB::ExpressionAction, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) @ 0xd1e689c in /usr/bin/clickhouse\r\n8. DB::ExpressionActions::add(DB::ExpressionAction const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) @ 0xd1e6b3d in /usr/bin/clickhouse\r\n9. DB::ScopeStack::addAction(DB::ExpressionAction const&) @ 0xd3dea8d in /usr/bin/clickhouse\r\n10. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::__1::shared_ptr<DB::IAST> const&, DB::ActionsMatcher::Data&) @ 0xd3e6baa in /usr/bin/clickhouse\r\n11. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0xd3d4ab9 in /usr/bin/clickhouse\r\n12. DB::InDepthNodeVisitor<DB::ActionsMatcher, true, std::__1::shared_ptr<DB::IAST> const>::visit(std::__1::shared_ptr<DB::IAST> const&) @ 0xd3d4af3 in /usr/bin/clickhouse\r\n13. DB::ExpressionAnalyzer::getRootActions(std::__1::shared_ptr<DB::IAST> const&, bool, std::__1::shared_ptr<DB::ExpressionActions>&, bool) @ 0xd3c7143 in /usr/bin/clickhouse\r\n14. DB::ExpressionAnalyzer::getConstActions() @ 0xd3c7364 in /usr/bin/clickhouse\r\n15. DB::KeyCondition::getBlockWithConstants(std::__1::shared_ptr<DB::IAST> const&, std::__1::shared_ptr<DB::SyntaxAnalyzerResult const> const&, DB::Context const&) @ 0xd861477 in /usr/bin/clickhouse\r\n16. DB::MergeTreeWhereOptimizer::MergeTreeWhereOptimizer(DB::SelectQueryInfo&, DB::Context const&, DB::MergeTreeData const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, Poco::Logger*) @ 0xd9fc694 in /usr/bin/clickhouse\r\n17. ? @ 0xd237119 in /usr/bin/clickhouse\r\n18. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, std::__1::shared_ptr<DB::IStorage> const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xd2398ef in /usr/bin/clickhouse\r\n19. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xd23afe9 in /usr/bin/clickhouse\r\n20. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::SelectQueryOptions const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&) @ 0xd40c421 in /usr/bin/clickhouse\r\n21. DB::InterpreterFactory::get(std::__1::shared_ptr<DB::IAST>&, DB::Context&, DB::QueryProcessingStage::Enum) @ 0xd1a8804 in /usr/bin/clickhouse\r\n22. ? @ 0xd54951e in /usr/bin/clickhouse\r\n23. DB::executeQuery(DB::ReadBuffer&, DB::WriteBuffer&, bool, DB::Context&, std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)>) @ 0xd54d430 in /usr/bin/clickhouse\r\n24. DB::HTTPHandler::processQuery(Poco::Net::HTTPServerRequest&, HTMLForm&, Poco::Net::HTTPServerResponse&, DB::HTTPHandler::Output&) @ 0x90e47fc in /usr/bin/clickhouse\r\n25. DB::HTTPHandler::handleRequest(Poco::Net::HTTPServerRequest&, Poco::Net::HTTPServerResponse&) @ 0x90e8256 in /usr/bin/clickhouse\r\n26. Poco::Net::HTTPServerConnection::run() @ 0x102c9b83 in /usr/bin/clickhouse\r\n27. Poco::Net::TCPServerConnection::start() @ 0x10304f4b in /usr/bin/clickhouse\r\n28. Poco::Net::TCPServerDispatcher::run() @ 0x103053db in /usr/bin/clickhouse\r\n29. Poco::PooledThread::run() @ 0x104b2fa6 in /usr/bin/clickhouse\r\n30. Poco::ThreadImpl::runnableEntry(void*) @ 0x104ae260 in /usr/bin/clickhouse\r\n31. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n (version 20.4.4.18 (official build))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11401",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11401/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11401/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11401/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11401",
    "id": 629855188,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI3MDg4OTk0",
    "number": 11401,
    "title": "Tweak jemalloc for more stable performance tests",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1876999755,
        "node_id": "MDU6TGFiZWwxODc2OTk5NzU1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-not-for-changelog",
        "name": "pr-not-for-changelog",
        "color": "007700",
        "default": false,
        "description": "This PR should not be mentioned in the changelog"
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2020-06-03T09:48:26Z",
    "updated_at": "2020-06-27T01:08:53Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11401",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11401",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11401.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11401.patch"
    },
    "body": "Changelog category (leave one):\r\n- Not for changelog (changelog entry is not required)\r\n\r\nSee https://github.com/ClickHouse/ClickHouse/issues/11121 for motivation and discussion.\r\n\r\n#### master: no muzzy decay, MADV_DONTNEED.\r\nThe slowest.\r\n[Flame graph for `madvise`](https://clickhouse-test-reports.s3.yandex.net/11401/bb925d26168ab900e29ce79c00bf0bdce4095659/left.svg)\r\n\r\n#### Experiment no. 2: muzzy decay 10 s, both MADV_FREE and MADV_DONTNEED\r\n[Result](https://clickhouse-test-reports.s3.yandex.net/11401/bb925d26168ab900e29ce79c00bf0bdce4095659/performance_comparison/report.html#fail1)\r\nNo performance difference compared to master.\r\n[Flame graph for madvise](https://clickhouse-test-reports.s3.yandex.net/11401/bb925d26168ab900e29ce79c00bf0bdce4095659/right.svg) -- the setting worked.\r\n\r\nA couple of variations that didn't really give new results:\r\n[2.1: muzzy decay 60 s, MADV_FREE + MADV_DONTNEED](https://clickhouse-test-reports.s3.yandex.net/11401/459fa043726417125e241b6acdf5fcf2cc830e5b/performance_comparison/report.html#fail1)\r\n[2.2: muzzy decay 10s, FREE, DONTNEED, w/new metrics](https://clickhouse-test-reports.s3.yandex.net/11401/32e5cfa16464ce762a0f055e3f4bbff1b7db4e70/performance_comparison/report.html#fail1)\r\n\r\n#### Experiment no. 3: muzzy decay 10 s, MADV_FREE, no MADV_DONTNEED\r\nSomewhat faster: [Result](https://clickhouse-test-reports.s3.yandex.net/11401/2f9f93c69d3423b79adcce1805c2e5661fb74baa/performance_comparison/report.html#fail1)\r\n\r\n[Flame graph for `madvise`](https://clickhouse-test-reports.s3.yandex.net/11401/2f9f93c69d3423b79adcce1805c2e5661fb74baa/right.svg) confirms that only MADV_FREE and not MADV_DONTNEED is used.\r\n\r\nSome queries are faster, but some are slower. Interestingly, no mmap calls from jemaloc registered by the profiler -- not even sure how this can be, maybe it uses some weird wrapper.\r\n\r\nRan `website.xml` locally and looked at the top -- both VIRT and RES decrease in seconds after a query finished, so I guess there is no problem with freeing memory in this configuration.\r\n\r\n#### Experiment no. 4: no muzzy decay, MADV_FREE\r\n[Results](https://clickhouse-test-reports.s3.yandex.net/11401/862ee69d896f83357d5a5531d03f5919f18d2aea/performance_comparison/report.html#fail1) not much different from no.3 and better than master.\r\n[Flame graph for `madvise`](https://clickhouse-test-reports.s3.yandex.net/11401/862ee69d896f83357d5a5531d03f5919f18d2aea/right.svg) -- different from no. 3, so the settings work. Not sure what it means though.\r\n\r\n#### Experiment no. 5: no MADV_FREE/DONTNEED at all.\r\nSurprisingly, it's the fastest: [results](https://clickhouse-test-reports.s3.yandex.net/11401/e2301f9ca38e914484fe91d871821647737e496c/performance_comparison/report.html#fail1)\r\nThe memory is not unmapped, so RSS always grows: see the [graph of MemoryResident from system.asynchronous_metrics](https://user-images.githubusercontent.com/36882414/84767474-30399480-afdb-11ea-915a-582d38d1633f.png)\r\n\r\n### Open questions\r\n\r\n* [ ] What is the impact of these changes on a concurrent workload -- e.g., run all queries from `website.xml` with `clickhouse-benchmark`, and measure the resulting QPS. The performance test only runs queries in isolation, and many of them are single-threaded, so it is harder to notice the possibly increased concurrency overhead.\r\n* [x] Why no `mmap` calls from jemalloc are registered with our profiler? I thought that maybe it uses some custom wrapper, or blocks signals which would block our profiler, but no, judging from the sources it's just a normal mmap.\r\n     * opt.retain (bool) r- is disabled by default on 64-bit Linux\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11397",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11397/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11397/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11397/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11397",
    "id": 629674936,
    "node_id": "MDU6SXNzdWU2Mjk2NzQ5MzY=",
    "number": 11397,
    "title": "Support Nullable values for the codec T64 ",
    "user": {
      "login": "YiuRULE",
      "id": 4019437,
      "node_id": "MDQ6VXNlcjQwMTk0Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4019437?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/YiuRULE",
      "html_url": "https://github.com/YiuRULE",
      "followers_url": "https://api.github.com/users/YiuRULE/followers",
      "following_url": "https://api.github.com/users/YiuRULE/following{/other_user}",
      "gists_url": "https://api.github.com/users/YiuRULE/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/YiuRULE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/YiuRULE/subscriptions",
      "organizations_url": "https://api.github.com/users/YiuRULE/orgs",
      "repos_url": "https://api.github.com/users/YiuRULE/repos",
      "events_url": "https://api.github.com/users/YiuRULE/events{/privacy}",
      "received_events_url": "https://api.github.com/users/YiuRULE/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 2052673425,
        "node_id": "MDU6TGFiZWwyMDUyNjczNDI1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-codecs",
        "name": "comp-codecs",
        "color": "b5bcff",
        "default": false,
        "description": ""
      },
      {
        "id": 1634867650,
        "node_id": "MDU6TGFiZWwxNjM0ODY3NjUw",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-nullable",
        "name": "comp-nullable",
        "color": "b5bcff",
        "default": false,
        "description": "Nulls related"
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-03T04:04:43Z",
    "updated_at": "2020-06-26T21:32:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Use case**\r\nWe could possibly use the codec T64 for compress nullable columns.\r\n\r\n**Describe the solution you'd like**\r\nIf possible, than the codec pass in two phases, the first one to store the actual values using his natural type (UInt8, UInt16, etc...) and then a second phase where we store the null table as an UInt8"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11387",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11387/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11387/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11387/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11387",
    "id": 629361900,
    "node_id": "MDU6SXNzdWU2MjkzNjE5MDA=",
    "number": 11387,
    "title": "More aggressive run of new tests added in PR.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1955634273,
        "node_id": "MDU6TGFiZWwxOTU1NjM0Mjcz",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bugfest",
        "name": "bugfest",
        "color": "c9a224",
        "default": false,
        "description": "Special issue with list of bugs found by CI"
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "alesapin",
      "id": 3684697,
      "node_id": "MDQ6VXNlcjM2ODQ2OTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3684697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alesapin",
      "html_url": "https://github.com/alesapin",
      "followers_url": "https://api.github.com/users/alesapin/followers",
      "following_url": "https://api.github.com/users/alesapin/following{/other_user}",
      "gists_url": "https://api.github.com/users/alesapin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alesapin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alesapin/subscriptions",
      "organizations_url": "https://api.github.com/users/alesapin/orgs",
      "repos_url": "https://api.github.com/users/alesapin/repos",
      "events_url": "https://api.github.com/users/alesapin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alesapin/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "alesapin",
        "id": 3684697,
        "node_id": "MDQ6VXNlcjM2ODQ2OTc=",
        "avatar_url": "https://avatars1.githubusercontent.com/u/3684697?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alesapin",
        "html_url": "https://github.com/alesapin",
        "followers_url": "https://api.github.com/users/alesapin/followers",
        "following_url": "https://api.github.com/users/alesapin/following{/other_user}",
        "gists_url": "https://api.github.com/users/alesapin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alesapin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alesapin/subscriptions",
        "organizations_url": "https://api.github.com/users/alesapin/orgs",
        "repos_url": "https://api.github.com/users/alesapin/repos",
        "events_url": "https://api.github.com/users/alesapin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alesapin/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T16:57:52Z",
    "updated_at": "2020-06-02T16:58:26Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Newly added test should be run multiple times in a separate check and if at least one run was failed - the check should be marked as fail.\r\n\r\nIt is needed to prevent adding new flaky tests.\r\nThis is especially important for integration tests."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11384",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11384/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11384/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11384/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11384",
    "id": 629255127,
    "node_id": "MDU6SXNzdWU2MjkyNTUxMjc=",
    "number": 11384,
    "title": "Add a setting `system_metrics_events_show_zero_values`.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 644208617,
        "node_id": "MDU6TGFiZWw2NDQyMDg2MTc=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task",
        "name": "easy task",
        "color": "0e8a16",
        "default": false,
        "description": ""
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-02T14:35:01Z",
    "updated_at": "2020-06-22T13:19:31Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "If set to 1, include all metrics, even with zero values."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11383",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11383/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11383/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11383/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11383",
    "id": 629248625,
    "node_id": "MDU6SXNzdWU2MjkyNDg2MjU=",
    "number": 11383,
    "title": "Add file format to parse clickhouse text log",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 644208617,
        "node_id": "MDU6TGFiZWw2NDQyMDg2MTc=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/easy%20task",
        "name": "easy task",
        "color": "0e8a16",
        "default": false,
        "description": ""
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-02T14:26:25Z",
    "updated_at": "2020-06-02T14:51:46Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "We do have `system.text_log`, but when we don't, it would be convenient to be able to parse clickhouse logs with `file` function, and do some processing with `clickhouse-local` instead of grep etc.\r\n\r\nThe format is like this:\r\n```\r\n2020.06.02 16:30:15.484733 [ 46559 ] {} <Trace> SystemLog (system.trace_log): Flushed system log\r\n```\r\n\r\nWe'd need date, thread number, log level, log scope, and the rest of the line.\r\n\r\nAlso there should be some provision for skipping stack trace lines that don't follow this format:\r\n\r\n```\r\n2020.06.02 16:28:00.428876 [ 46590 ] {179aabb7-a35a-4c5f-bc0c-97c175310623} <Error> executeQuery: Code: 60, e.displayText() = DB::Exception: Table default.nr doesn't exist. (version 20.5.1.1) (from [::1]:51034) (in query: SELECT l.lc, materialize(r.lc), r.lc, r.lc, toTypeName(l.lc) FROM l_lc AS l FULL OUTER JOIN nr AS r USING (lc)), Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /home/akuzm/ch4/ch/contrib/libcxx/include/exception:129: std::exception::capture() @ 0xf9158 in /home/akuzm/ch4/build-clang10/programs/server/libclickhouse-server-libd.so\r\n1. /home/akuzm/ch4/ch/contrib/libcxx/include/exception:109: std::exception::exception() @ 0x1ad9b2 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n2. /home/akuzm/ch4/ch/contrib/poco/Foundation/src/Exception.cpp:28: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1c3da3 in /home/akuzm/ch4/build-clang10/contrib/poco-cmake/Foundation/lib_poco_foundationd.so\r\n3. /home/akuzm/ch4/ch/src/Common/Exception.cpp:36: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x193c03 in /home/akuzm/ch4/build-clang10/src/libclickhouse_common_iod.so\r\n4. /home/akuzm/ch4/ch/contrib/libcxx/include/optional:323: void std::__1::__optional_storage_base<DB::Exception, false>::__construct<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, int const&) @ 0xf78351 in /home/akuzm/ch4/build-clang10/src/libclickhouse_interpretersd.so\r\n...\r\n```\r\n\r\nWe could call the format `ClickHouseLogV20` and write things like `select distinct _file, query_id from file('clickhouse-server.*.log', ClickHouseLogV20)`. We won't have to specify the column list for this format, because it's fixed."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11382",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11382/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11382/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11382/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11382",
    "id": 629247931,
    "node_id": "MDU6SXNzdWU2MjkyNDc5MzE=",
    "number": 11382,
    "title": "Malformed MySQL packet",
    "user": {
      "login": "m0003r",
      "id": 692310,
      "node_id": "MDQ6VXNlcjY5MjMxMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/692310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m0003r",
      "html_url": "https://github.com/m0003r",
      "followers_url": "https://api.github.com/users/m0003r/followers",
      "following_url": "https://api.github.com/users/m0003r/following{/other_user}",
      "gists_url": "https://api.github.com/users/m0003r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m0003r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m0003r/subscriptions",
      "organizations_url": "https://api.github.com/users/m0003r/orgs",
      "repos_url": "https://api.github.com/users/m0003r/repos",
      "events_url": "https://api.github.com/users/m0003r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m0003r/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2121263626,
        "node_id": "MDU6TGFiZWwyMTIxMjYzNjI2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mysql",
        "name": "comp-mysql",
        "color": "31a2ce",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-06-02T14:25:27Z",
    "updated_at": "2020-06-09T06:50:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Sometimes ClickHouse forms invalid MySQL packet, and it crashes my Grafana instance (since it currently can't setup alerts via ClickHouse plugin I have to use MySQL interface)\r\n\r\nRelated issue in Go MySQL client:\r\nhttps://github.com/go-sql-driver/mysql/issues/1124\r\n\r\n**How to reproduce**\r\n- ClickHouse server version 20.4.4.18 (official build)\r\n- MySQL interface\r\nFailed query and result (via MySQL client):\r\n```\r\nSELECT\r\n    intDiv(toInt32(datetime), 1000 / 1000.) * (1000 / 1000.) AS time,\r\n    countIf(http_reply LIKE '5%%') AS `5xx`\r\nFROM traf\r\nWHERE (datetime >= 1591104676) AND (datetime <= 1591104696)\r\nGROUP BY time\r\nORDER BY time ASC\r\n\r\nQuery OK, 99 rows affected, 29806 warnings (0.01 sec)\r\n```\r\n\r\nIt's important to select datetime interval where no rows exist. According to ClickHouse log:\r\n```\r\n2020.06.02 16:42:01.391612 [ 2915 ] {} <Trace> ContextAccess (readonly): Access granted: SELECT(datetime, http_reply) ON default.traf\r\n2020.06.02 16:42:01.392901 [ 2915 ] {} <Debug> default.traf (SelectExecutor): Key condition: (column 0 in [1591105301, +inf)), (column 0 in (-inf, 1591105321]), and\r\n2020.06.02 16:42:01.392936 [ 2915 ] {} <Debug> default.traf (SelectExecutor): MinMax index condition: (column 0 in [1591105301, +inf)), (column 0 in (-inf, 1591105321]), and\r\n2020.06.02 16:42:01.392952 [ 2915 ] {} <Debug> default.traf (SelectExecutor): Selected 0 parts by date, 0 parts by key, 0 marks to read from 0 ranges\r\n2020.06.02 16:42:01.393059 [ 2915 ] {} <Trace> InterpreterSelectQuery: FetchColumns -> Complete\r\n2020.06.02 16:42:01.393851 [ 2915 ] {} <Trace> AggregatingTransform: Aggregated. 0 to 0 rows (from 0.000 MiB) in 0.000 sec. (0.000 rows/sec., 0.000 MiB/sec.)\r\n2020.06.02 16:42:01.393886 [ 2915 ] {} <Trace> Aggregator: Merging aggregated data\r\n2020.06.02 16:42:01.410842 [ 2915 ] {} <Error> MySQLHandler: DB::Exception: Cannot read all data. Bytes read: 0. Bytes expected: 3.\r\n```\r\n\r\nMySQL packet:\r\n```\r\n05 00 00 01 fe 00 00 00 00\r\n```\r\n\r\nand according to WireShark it is wrong:\r\n\r\n```\r\nMySQL Protocol\r\n    Packet Length: 5\r\n    Packet Number: 1\r\n    EOF marker: 254\r\n        [Expert Info (Warning/Protocol): EOF Marker found while connection in wrong state.]\r\n            [EOF Marker found while connection in wrong state.]\r\n            [Severity level: Warning]\r\n            [Group: Protocol]\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11379",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11379/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11379/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11379/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11379",
    "id": 629202005,
    "node_id": "MDU6SXNzdWU2MjkyMDIwMDU=",
    "number": 11379,
    "title": "Bad cast from type DB::ColumnConst to DB::ColumnString",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T13:26:21Z",
    "updated_at": "2020-06-02T13:26:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\n/4/ :) SELECT number FROM numbers(11) ORDER BY arrayJoin(['а', 'я', '\\0�', '', 'Я', '']) ASC, toString(number) ASC, 'y' ASC COLLATE 'el'\r\n\r\nCode: 368. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ColumnConst to DB::ColumnString. Stack trace:\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11377",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11377/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11377/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11377/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11377",
    "id": 629188453,
    "node_id": "MDU6SXNzdWU2MjkxODg0NTM=",
    "number": 11377,
    "title": "addMonths: Field::get: assertion failed",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T13:07:05Z",
    "updated_at": "2020-06-02T13:07:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nSELECT addMonths(materialize(toDateTime('2017-11-05 08:07:47')), 1.)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11376/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11376",
    "id": 629185647,
    "node_id": "MDU6SXNzdWU2MjkxODU2NDc=",
    "number": 11376,
    "title": "Ask a question, What are the limitations of the clickhouse user name format",
    "user": {
      "login": "SalleryWang",
      "id": 45587738,
      "node_id": "MDQ6VXNlcjQ1NTg3NzM4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45587738?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SalleryWang",
      "html_url": "https://github.com/SalleryWang",
      "followers_url": "https://api.github.com/users/SalleryWang/followers",
      "following_url": "https://api.github.com/users/SalleryWang/following{/other_user}",
      "gists_url": "https://api.github.com/users/SalleryWang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SalleryWang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SalleryWang/subscriptions",
      "organizations_url": "https://api.github.com/users/SalleryWang/orgs",
      "repos_url": "https://api.github.com/users/SalleryWang/repos",
      "events_url": "https://api.github.com/users/SalleryWang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SalleryWang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T13:02:51Z",
    "updated_at": "2020-06-02T13:26:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "What are the limitations of the clickhouse user name format?"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11372",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11372/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11372/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11372/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11372",
    "id": 629164920,
    "node_id": "MDU6SXNzdWU2MjkxNjQ5MjA=",
    "number": 11372,
    "title": "LimitTransform::makeChunkWithPreviousRow(): Assertion `row < chunk.getNumRows()' failed.",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-02T12:31:15Z",
    "updated_at": "2020-06-03T10:10:03Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nSELECT number FROM numbers(100) ORDER BY number ASC LIMIT 2, 9223372036854775807  WITH TIES\r\n```\r\n\r\n@KochetovNicolai The query is similar to https://github.com/ClickHouse/ClickHouse/issues/11359, but the error is different. "
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11371",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11371/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11371/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11371/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11371",
    "id": 629152610,
    "node_id": "MDU6SXNzdWU2MjkxNTI2MTA=",
    "number": 11371,
    "title": "select from generateRandom: PODArray::operator[]: Assertion failed",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1234601830,
        "node_id": "MDU6TGFiZWwxMjM0NjAxODMw",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/crash",
        "name": "crash",
        "color": "082b68",
        "default": false,
        "description": "Crash / segfault / segmentation"
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T12:11:22Z",
    "updated_at": "2020-06-27T23:10:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nSELECT i FROM generateRandom('i Array(Nullable(Enum8(\\'hello\\' = 1, \\'world\\' = 5)))', 1025, 65535, 9223372036854775807) LIMIT 10\r\n```\r\n\r\n@qoega FYI"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11369",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11369/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11369/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11369/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11369",
    "id": 629116752,
    "node_id": "MDU6SXNzdWU2MjkxMTY3NTI=",
    "number": 11369,
    "title": "DB::geohashesInBox(): Assertion `items <= args.items_count'",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "alexey-milovidov",
        "id": 18581488,
        "node_id": "MDQ6VXNlcjE4NTgxNDg4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexey-milovidov",
        "html_url": "https://github.com/alexey-milovidov",
        "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
        "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
        "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
        "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
        "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
        "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-02T11:13:08Z",
    "updated_at": "2020-06-27T23:07:34Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nSELECT arraySort(geohashesInBox(-1., -1., 1., inf, 3))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11367",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11367/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11367/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11367/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11367",
    "id": 629109719,
    "node_id": "MDU6SXNzdWU2MjkxMDk3MTk=",
    "number": 11367,
    "title": " Logical error: 'Invalid number of rows in Chunk column String: expected 0, got 65536'.",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T11:02:07Z",
    "updated_at": "2020-06-02T11:02:29Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nSELECT neighbor(toString(number), -9223372036854775808), neighbor(toString(number), 1048576) FROM numbers(9223372036854775807)\r\n```\r\n\r\nFYI @KochetovNicolai "
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11364",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11364/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11364/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11364/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11364",
    "id": 629098176,
    "node_id": "MDU6SXNzdWU2MjkwOTgxNzY=",
    "number": 11364,
    "title": "Logical error: 'Lambda captured argument arrayJoin([1]) not found in required columns.'",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T10:43:17Z",
    "updated_at": "2020-06-02T10:43:17Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nSELECT arrayMap(x -> concat(x, concat(arrayJoin([1]), x, NULL), ''), [1])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11362",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11362/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11362/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11362/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11362",
    "id": 629094851,
    "node_id": "MDU6SXNzdWU2MjkwOTQ4NTE=",
    "number": 11362,
    "title": "Bad cast from type DB::IColumn* to DB::ColumnFixedString*.",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T10:37:41Z",
    "updated_at": "2020-06-02T10:37:41Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\n/4/ :) SELECT if(number % 2, toFixedString(toString(number), 2), toFixedString(toString(-number), 65535)) FROM system.numbers LIMIT 10\r\n\r\nCode: 368. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::IColumn* to DB::ColumnFixedString*. Stack trace:\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11360",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11360/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11360/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11360/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11360",
    "id": 629090493,
    "node_id": "MDU6SXNzdWU2MjkwOTA0OTM=",
    "number": 11360,
    "title": "Bad cast from type DB::ColumnConst to DB::ColumnVector<char8_t>",
    "user": {
      "login": "akuzm",
      "id": 36882414,
      "node_id": "MDQ6VXNlcjM2ODgyNDE0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/36882414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akuzm",
      "html_url": "https://github.com/akuzm",
      "followers_url": "https://api.github.com/users/akuzm/followers",
      "following_url": "https://api.github.com/users/akuzm/following{/other_user}",
      "gists_url": "https://api.github.com/users/akuzm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akuzm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akuzm/subscriptions",
      "organizations_url": "https://api.github.com/users/akuzm/orgs",
      "repos_url": "https://api.github.com/users/akuzm/repos",
      "events_url": "https://api.github.com/users/akuzm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akuzm/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 2104602822,
        "node_id": "MDU6TGFiZWwyMTA0NjAyODIy",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/fuzz",
        "name": "fuzz",
        "color": "abc4ea",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-02T10:30:19Z",
    "updated_at": "2020-06-02T10:30:19Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "```\r\nATTACH TABLE constrained\r\n(\r\n    `URL` String, \r\n    CONSTRAINT is_yandex CHECK domainWithoutWWW(URL) = domainWithoutWWW(URL), \r\n    CONSTRAINT is_utf8 CHECK isValidUTF8(URL)\r\n)\r\nENGINE = TinyLog;\r\n\r\ninsert into constrained values ('a');\r\n\r\nCode: 368. DB::Exception: Received from localhost:9000. DB::Exception: Bad cast from type DB::ColumnConst to DB::ColumnVector<char8_t>. Stack trace\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11347",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11347/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11347/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11347/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11347",
    "id": 628835892,
    "node_id": "MDU6SXNzdWU2Mjg4MzU4OTI=",
    "number": 11347,
    "title": "ATTACH DATABASE without specifying ENGINE.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 1365579236,
        "node_id": "MDU6TGFiZWwxMzY1NTc5MjM2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/prio-minor",
        "name": "prio-minor",
        "color": "ac7fef",
        "default": false,
        "description": "Priority: minor"
      },
      {
        "id": 1507871495,
        "node_id": "MDU6TGFiZWwxNTA3ODcxNDk1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-community-taken",
        "name": "st-community-taken",
        "color": "e5b890",
        "default": false,
        "description": "External developer is working on that"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2020-06-02T01:40:35Z",
    "updated_at": "2020-06-28T09:49:59Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Similar to ATTACH TABLE."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11336",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11336/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11336/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11336/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11336",
    "id": 628525583,
    "node_id": "MDU6SXNzdWU2Mjg1MjU1ODM=",
    "number": 11336,
    "title": "Bad error message in dictionary reload",
    "user": {
      "login": "qoega",
      "id": 2159081,
      "node_id": "MDQ6VXNlcjIxNTkwODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2159081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qoega",
      "html_url": "https://github.com/qoega",
      "followers_url": "https://api.github.com/users/qoega/followers",
      "following_url": "https://api.github.com/users/qoega/following{/other_user}",
      "gists_url": "https://api.github.com/users/qoega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qoega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qoega/subscriptions",
      "organizations_url": "https://api.github.com/users/qoega/orgs",
      "repos_url": "https://api.github.com/users/qoega/repos",
      "events_url": "https://api.github.com/users/qoega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qoega/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351463315,
        "node_id": "MDU6TGFiZWwxMzUxNDYzMzE1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-dictionary",
        "name": "comp-dictionary",
        "color": "b5bcff",
        "default": false,
        "description": "Dictionaries"
      },
      {
        "id": 845247686,
        "node_id": "MDU6TGFiZWw4NDUyNDc2ODY=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability",
        "name": "usability",
        "color": "ebf28c",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-01T15:20:20Z",
    "updated_at": "2020-06-08T07:10:24Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "\r\n**How to reproduce**\r\nDuring test run `test_dictionaries_all_layouts_and_sources/test.py` we run query\r\n```\r\nsystem reload dictionaries\r\n```\r\n\r\n\r\n**Expected behavior**\r\nWrite additional info about dictionary load exceptions. Which dictionary we tried to load etc.\r\n\r\n**Error message and/or stacktrace**\r\n```\r\nE           Code: 41. DB::Exception: Received from 172.21.0.6:9000. DB::Exception: Code: 41, e.displayText() = DB::Exception: Cannot parse datetime 0 (version 20.5.1.1). Stack trace:\r\nE\r\nE           0. /home/qoega/clickhouse/build/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0xbfdc9fc in /usr/bin/clickhouse\r\nE           1. /home/qoega/clickhouse/build/../src/Common/Exception.cpp:36: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x514b709 in /usr/bin/clickhouse\r\nE           2. /home/qoega/clickhouse/build/../src/Interpreters/InterpreterSystemQuery.cpp:102: DB::InterpreterSystemQuery::execute() (.cold) @ 0x4d83ce1 in /usr/bin/clickhouse\r\nE           3. /home/qoega/clickhouse/build/../src/Interpreters/executeQuery.cpp:359: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*) @ 0x924d2f9 in /usr/bin/clickhouse\r\nE           4. /home/qoega/clickhouse/build/../src/Interpreters/executeQuery.cpp:618: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool) @ 0x9250726 in /usr/bin/clickhouse\r\nE           5. /home/qoega/clickhouse/build/../src/Server/TCPHandler.cpp:251: DB::TCPHandler::runImpl() @ 0x9647d96 in /usr/bin/clickhouse\r\nE           6. /home/qoega/clickhouse/build/../src/Server/TCPHandler.cpp:1197: DB::TCPHandler::run() @ 0x96489ec in /usr/bin/clickhouse\r\nE           7. /home/qoega/clickhouse/build/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0xbf179b7 in /usr/bin/clickhouse\r\nE           8. /home/qoega/clickhouse/build/../contrib/libcxx/include/atomic:856: Poco::Net::TCPServerDispatcher::run() @ 0xbf17dbb in /usr/bin/clickhouse\r\nE           9. /home/qoega/clickhouse/build/../contrib/poco/Foundation/include/Poco/Mutex_POSIX.h:59: Poco::PooledThread::run() @ 0xc056d2e in /usr/bin/clickhouse\r\nE           10. /home/qoega/clickhouse/build/../contrib/poco/Foundation/include/Poco/AutoPtr.h:223: Poco::ThreadImpl::runnableEntry(void*) @ 0xc05369c in /usr/bin/clickhouse\r\nE           11. start_thread @ 0x9669 in /usr/lib/x86_64-linux-gnu/libpthread-2.30.so\r\nE           12. __clone @ 0x122323 in /usr/lib/x86_64-linux-gnu/libc-2.30.so\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11334",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11334/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11334/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11334/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11334",
    "id": 628492711,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI2MDI0NTU5",
    "number": 11334,
    "title": "Add differential privacy functions",
    "user": {
      "login": "Artemiyfly",
      "id": 7384037,
      "node_id": "MDQ6VXNlcjczODQwMzc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7384037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Artemiyfly",
      "html_url": "https://github.com/Artemiyfly",
      "followers_url": "https://api.github.com/users/Artemiyfly/followers",
      "following_url": "https://api.github.com/users/Artemiyfly/following{/other_user}",
      "gists_url": "https://api.github.com/users/Artemiyfly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Artemiyfly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Artemiyfly/subscriptions",
      "organizations_url": "https://api.github.com/users/Artemiyfly/orgs",
      "repos_url": "https://api.github.com/users/Artemiyfly/repos",
      "events_url": "https://api.github.com/users/Artemiyfly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Artemiyfly/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1077827669,
        "node_id": "MDU6TGFiZWwxMDc3ODI3NjY5",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/can%20be%20tested",
        "name": "can be tested",
        "color": "4b07ea",
        "default": false,
        "description": "Can run CI checks on this external PR"
      },
      {
        "id": 1807683251,
        "node_id": "MDU6TGFiZWwxODA3NjgzMjUx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/doc-alert",
        "name": "doc-alert",
        "color": "e51068",
        "default": false,
        "description": "PR where any documentation work is needed or proceeded"
      },
      {
        "id": 1309674771,
        "node_id": "MDU6TGFiZWwxMzA5Njc0Nzcx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-feature",
        "name": "pr-feature",
        "color": "007700",
        "default": false,
        "description": "Pull request with new product feature"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "nikitamikhaylov",
      "id": 25705399,
      "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nikitamikhaylov",
      "html_url": "https://github.com/nikitamikhaylov",
      "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
      "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
      "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
      "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
      "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
      "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "nikitamikhaylov",
        "id": 25705399,
        "node_id": "MDQ6VXNlcjI1NzA1Mzk5",
        "avatar_url": "https://avatars0.githubusercontent.com/u/25705399?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nikitamikhaylov",
        "html_url": "https://github.com/nikitamikhaylov",
        "followers_url": "https://api.github.com/users/nikitamikhaylov/followers",
        "following_url": "https://api.github.com/users/nikitamikhaylov/following{/other_user}",
        "gists_url": "https://api.github.com/users/nikitamikhaylov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nikitamikhaylov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nikitamikhaylov/subscriptions",
        "organizations_url": "https://api.github.com/users/nikitamikhaylov/orgs",
        "repos_url": "https://api.github.com/users/nikitamikhaylov/repos",
        "events_url": "https://api.github.com/users/nikitamikhaylov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nikitamikhaylov/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2020-06-01T14:46:03Z",
    "updated_at": "2020-06-23T12:20:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11334",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11334",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11334.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11334.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category:\r\n- New Feature\r\n\r\nChangelog entry:\r\nAdded differentially private aggregation functions \r\n\r\nresolves #6874"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11333",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11333/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11333/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11333/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11333",
    "id": 628461162,
    "node_id": "MDU6SXNzdWU2Mjg0NjExNjI=",
    "number": 11333,
    "title": "Table ORDER BY sanitization issue",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-01T14:01:10Z",
    "updated_at": "2020-06-01T14:02:45Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "Things like that should be forbidden:\r\n```\r\nCREATE TABLE a\r\n(\r\n    `number` UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY if(now() > toDateTime('2020-06-01 13:31:40'), toInt64(number), -number)\r\n```\r\n\r\nJust like those (which are forbidden already):\r\n```\r\nCREATE TABLE a\r\n(\r\n    `number` UInt64\r\n)\r\nENGINE = MergeTree\r\nORDER BY if(rand() > 100, toInt64(number), -number)\r\n\r\nReceived exception from server (version 20.4.4):\r\nCode: 36. DB::Exception: Received from localhost:9000. DB::Exception: Sorting key cannot contain non-deterministic functions, but contains function rand. \r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11329",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11329/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11329/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11329/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11329",
    "id": 628268097,
    "node_id": "MDU6SXNzdWU2MjgyNjgwOTc=",
    "number": 11329,
    "title": "Better diagnostics on mutation failure.",
    "user": {
      "login": "alesapin",
      "id": 3684697,
      "node_id": "MDQ6VXNlcjM2ODQ2OTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3684697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alesapin",
      "html_url": "https://github.com/alesapin",
      "followers_url": "https://api.github.com/users/alesapin/followers",
      "following_url": "https://api.github.com/users/alesapin/following{/other_user}",
      "gists_url": "https://api.github.com/users/alesapin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alesapin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alesapin/subscriptions",
      "organizations_url": "https://api.github.com/users/alesapin/orgs",
      "repos_url": "https://api.github.com/users/alesapin/repos",
      "events_url": "https://api.github.com/users/alesapin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alesapin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1351290474,
        "node_id": "MDU6TGFiZWwxMzUxMjkwNDc0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-mutations",
        "name": "comp-mutations",
        "color": "b5bcff",
        "default": false,
        "description": "ALTER UPDATE/DELETE"
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 845247686,
        "node_id": "MDU6TGFiZWw4NDUyNDc2ODY=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/usability",
        "name": "usability",
        "color": "ebf28c",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-01T08:58:26Z",
    "updated_at": "2020-06-02T09:42:11Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Mutations and alters are completely asynchronous operations. If we start some incorrect `ALTER` query from `clickhouse-client ` it will hang forever (if `mutations_sync=2` or `alter_repliction_partitions_sync=1 or 2` specified). We need to implement the check of `MutationStatus` and if some exception happened, we should rethrow it to the client.\r\n\r\nRelated issues: #11166, #5985."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11328",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11328/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11328/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11328/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11328",
    "id": 628231261,
    "node_id": "MDU6SXNzdWU2MjgyMzEyNjE=",
    "number": 11328,
    "title": "Aggregate merge tree table query",
    "user": {
      "login": "shubham721",
      "id": 13876347,
      "node_id": "MDQ6VXNlcjEzODc2MzQ3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13876347?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shubham721",
      "html_url": "https://github.com/shubham721",
      "followers_url": "https://api.github.com/users/shubham721/followers",
      "following_url": "https://api.github.com/users/shubham721/following{/other_user}",
      "gists_url": "https://api.github.com/users/shubham721/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shubham721/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shubham721/subscriptions",
      "organizations_url": "https://api.github.com/users/shubham721/orgs",
      "repos_url": "https://api.github.com/users/shubham721/repos",
      "events_url": "https://api.github.com/users/shubham721/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shubham721/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      },
      {
        "id": 845267693,
        "node_id": "MDU6TGFiZWw4NDUyNjc2OTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info",
        "name": "st-need-info",
        "color": "e5b890",
        "default": false,
        "description": "We need extra data to continue"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2020-06-01T07:55:18Z",
    "updated_at": "2020-06-08T04:05:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi Guyz,\r\nI am running the following query on the returns_agg table which is an aggregating merge tree table populated by merge tree engine. The size of returns_agg table is around 3.4GB in a compressed format and 18 GB in uncompressed size.\r\nI am getting the following exception\r\nCode: 241. DB::Exception: Received from localhost:9000. DB::Exception: Memory limit (for query) exceeded: would use 55.88 GiB (attempt to allocate a chunk of 137983608 bytes), maximum: 55.88 GiB: While executing AggregatingTransform.\r\n\r\nI have a few questions\r\n1. It seems like It is trying to read the whole table in memory, Why isn't this query able to read based on filters which we specified above?\r\n2. Is there a way we can directly apply this filter condition on the aggregating merge tree table? (Base: account id is a nonprimary key field, So when we get updates on this table we insert empty string instead of actual account id, So If we apply the filter directly on the aggregated table, It won't work)\r\n\r\nselect * from (\r\nSELECT\r\nreturn_ref_id,\r\nreturn_id,\r\ntenant_id,\r\nmax(account_id) AS max_account_id,\r\nmax(order_id) AS order_id,\r\nmax(order_item_unit_id) AS order_item_unit_id,\r\nmax(seller_id) AS seller_id,\r\nmax(product_id) AS product_id,\r\nmax(listing_id) AS listing_id,\r\nmax(return_amount) AS return_amount,\r\nmax(currency) AS currency,\r\nmax(product_category) AS product_category,\r\nmax(return_reason) AS return_reason,\r\nmax(return_channel) AS return_channel,\r\nmax(return_address) AS return_address,\r\nmax(return_address_pincode) AS return_address_pincode,\r\nmax(customer_history_based_score) AS customer_history_based_score,\r\nmax(linked_account_history_score) AS linked_account_history_score,\r\nmax(pincode_risk_score) AS pincode_risk_score,\r\nmax(seller_goodness_score) AS seller_goodness_score,\r\nmax(returns_flip_score) AS returns_flip_score,\r\nmax(account_creation_date) AS account_creation_date,\r\nmax(max_order_created_at) AS order_created_at,\r\nmax(return_date) AS return_date,\r\nmax(is_tainted) AS is_tainted,\r\nmax(rule_name) AS rule_name,\r\nmax(order_decision_action) AS order_decision_action,\r\nmax(order_decision_reasoncodes) AS order_decision_reasoncodes,\r\nmax(order_decision_tags) AS order_decision_tags,\r\nmax(user_decision_action) AS user_decision_action,\r\nmax(user_decision_reasoncodes) AS user_decision_reasoncodes,\r\nmax(user_decision_tags) AS user_decision_tags,\r\nmax(customer_rvp_quantity_90days) AS customer_rvp_quantity_90days,\r\nmax(customer_rvp_rate_90days) AS customer_rvp_rate_90days,\r\nmax(customer_missing_reason_rvp_quantity_90days) AS customer_missing_reason_rvp_quantity_90days,\r\nmax(customer_fraud_rvp_quantity_90days) AS customer_fraud_rvp_quantity_90days,\r\nmax(customer_rvp_quantity_30days) AS customer_rvp_quantity_30days,\r\nmax(customer_rvp_rate_30days) AS customer_rvp_rate_30days,\r\nmax(customer_missing_reason_rvp_quantity_30days) AS customer_missing_reason_rvp_quantity_30days,\r\nmax(customer_fraud_rvp_quantity_30days) AS customer_fraud_rvp_quantity_30days,\r\nmax(linked_account_rvp_rate_90days) AS linked_account_rvp_rate_90days,\r\nmax(linked_account_missing_reason_rvp_quantity_90days) AS linked_account_missing_reason_rvp_quantity_90days,\r\nmax(linked_account_fraud_quantity_90days) AS linked_account_fraud_quantity_90days,\r\nmax(linked_account_rvp_rate_30days) AS linked_account_rvp_rate_30days,\r\nmax(linked_account_missing_reason_rvp_quantity_30days) AS linked_account_missing_reason_rvp_quantity_30days,\r\nmax(linked_account_fraud_quantity_30days) AS linked_account_fraud_quantity_30days,\r\nmax(seller_rvp_rate_30days) AS seller_rvp_rate_30days,\r\nmax(seller_sale_quantity_90days) AS seller_sale_quantity_90days,\r\nmax(seller_rvp_rate_90days) AS seller_rvp_rate_90days,\r\nmax(seller_sale_quantity_30days) AS seller_sale_quantity_30days,\r\nmax(locality_missing_rvp_rate_90days) AS locality_missing_rvp_rate_90days,\r\nmax(locality_fraud_rate_90days) AS locality_fraud_rate_90days,\r\nmax(locality_rvp_rate_30days) AS locality_rvp_rate_30days,\r\nmax(locality_missing_rvp_rate_30days) AS locality_missing_rvp_rate_30days,\r\nmax(locality_fraud_rate_30days) AS locality_fraud_rate_30days,\r\nmax(agent_assigned) AS agent_assigned,\r\nargMaxMerge(case_status) AS case_status,\r\nmax(agent_action) AS agent_action,\r\nargMaxMerge(event_status) AS event_status\r\nFROM returns_agg\r\nGROUP BY (tenant_id, return_ref_id, return_id)\r\n) where account_id='ACC14002975663275913'"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11327",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11327/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11327/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11327/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11327",
    "id": 628177959,
    "node_id": "MDU6SXNzdWU2MjgxNzc5NTk=",
    "number": 11327,
    "title": "Cannot convert column `now64()` because it is constant but values of constants are different in source and result.",
    "user": {
      "login": "filimonov",
      "id": 1549571,
      "node_id": "MDQ6VXNlcjE1NDk1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1549571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filimonov",
      "html_url": "https://github.com/filimonov",
      "followers_url": "https://api.github.com/users/filimonov/followers",
      "following_url": "https://api.github.com/users/filimonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/filimonov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filimonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filimonov/subscriptions",
      "organizations_url": "https://api.github.com/users/filimonov/orgs",
      "repos_url": "https://api.github.com/users/filimonov/repos",
      "events_url": "https://api.github.com/users/filimonov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filimonov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 1481221764,
        "node_id": "MDU6TGFiZWwxNDgxMjIxNzY0",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-datetime",
        "name": "comp-datetime",
        "color": "b5bcff",
        "default": false,
        "description": "date & time & timezone related"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "Enmk",
      "id": 1110183,
      "node_id": "MDQ6VXNlcjExMTAxODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1110183?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Enmk",
      "html_url": "https://github.com/Enmk",
      "followers_url": "https://api.github.com/users/Enmk/followers",
      "following_url": "https://api.github.com/users/Enmk/following{/other_user}",
      "gists_url": "https://api.github.com/users/Enmk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Enmk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Enmk/subscriptions",
      "organizations_url": "https://api.github.com/users/Enmk/orgs",
      "repos_url": "https://api.github.com/users/Enmk/repos",
      "events_url": "https://api.github.com/users/Enmk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Enmk/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "Enmk",
        "id": 1110183,
        "node_id": "MDQ6VXNlcjExMTAxODM=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/1110183?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Enmk",
        "html_url": "https://github.com/Enmk",
        "followers_url": "https://api.github.com/users/Enmk/followers",
        "following_url": "https://api.github.com/users/Enmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/Enmk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Enmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Enmk/subscriptions",
        "organizations_url": "https://api.github.com/users/Enmk/orgs",
        "repos_url": "https://api.github.com/users/Enmk/repos",
        "events_url": "https://api.github.com/users/Enmk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Enmk/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-01T06:03:48Z",
    "updated_at": "2020-06-01T10:17:09Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "```\r\nclickhouse benchmark <<< \"SELECT now64() FROM remote('127.0.0.1', 'system', 'numbers_mt') WHERE number<100000 LIMIT 100000\"\r\nLoaded 1 queries.\r\nAn error occurred while processing query:\r\nSELECT now64() FROM remote('127.0.0.1', 'system', 'numbers_mt') WHERE number<100000 LIMIT 100000\r\nDB::Exception: Received from localhost:9000. DB::Exception: Cannot convert column `now64()` because it is constant but values of constants are different in source and result. Stack trace:\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1065a1f0 in /usr/lib/debug/usr/bin/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:32: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x914dd3d in /usr/lib/debug/usr/bin/clickhouse\r\n2. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/string:2134: DB::ConvertingTransform::ConvertingTransform(DB::Block, DB::Block, DB::ConvertingTransform::MatchColumnsMode) (.cold) @ 0xe0f1a6b in /usr/lib/debug/usr/bin/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2214: std::__1::__function::__func<DB::ClusterProxy::(anonymous namespace)::createLocalStream(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, DB::Context const&, DB::QueryProcessingStage::Enum, bool, bool, bool)::'lambda'(DB::Block const&), std::__1::allocator<DB::ClusterProxy::(anonymous namespace)::createLocalStream(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, DB::Context const&, DB::QueryProcessingStage::Enum, bool, bool, bool)::'lambda'(DB::Block const&)>, std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)>::operator()(DB::Block const&) @ 0xda854f2 in /usr/lib/debug/usr/bin/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3821: void DB::QueryPipeline::addSimpleTransformImpl<std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> >(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&)::'lambda'(DB::OutputPort*&, DB::QueryPipeline::StreamType, unsigned long)::operator()(DB::OutputPort*&, DB::QueryPipeline::StreamType, unsigned long) const @ 0xdf1ea77 in /usr/lib/debug/usr/bin/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:656: void DB::QueryPipeline::addSimpleTransformImpl<std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> >(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&) @ 0xdf1f221 in /usr/lib/debug/usr/bin/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:103: DB::ClusterProxy::(anonymous namespace)::createLocalStream(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, DB::Context const&, DB::QueryProcessingStage::Enum, bool, bool, bool) @ 0xda86529 in /usr/lib/debug/usr/bin/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1681: DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::Throttler> const&, DB::SelectQueryInfo const&, std::__1::vector<DB::Pipe, std::__1::allocator<DB::Pipe> >&)::'lambda'()::operator()() const @ 0xda86707 in /usr/lib/debug/usr/bin/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:212: DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::Throttler> const&, DB::SelectQueryInfo const&, std::__1::vector<DB::Pipe, std::__1::allocator<DB::Pipe> >&) @ 0xda878cd in /usr/lib/debug/usr/bin/clickhouse\r\n9. /build/obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/executeQuery.cpp:71: DB::ClusterProxy::executeQuery(DB::ClusterProxy::IStreamFactory&, std::__1::shared_ptr<DB::Cluster> const&, std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Settings const&, DB::SelectQueryInfo const&) @ 0xda8e678 in /usr/lib/debug/usr/bin/clickhouse\r\n10. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:1085: DB::StorageDistributed::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xda78a50 in /usr/lib/debug/usr/bin/clickhouse\r\n11. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1383: void DB::InterpreterSelectQuery::executeFetchColumns<DB::QueryPipeline>(DB::QueryProcessingStage::Enum, DB::QueryPipeline&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::QueryPipeline&) @ 0xd67ed2b in /usr/lib/debug/usr/bin/clickhouse\r\n12. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:788: void DB::InterpreterSelectQuery::executeImpl<DB::QueryPipeline>(DB::QueryPipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, DB::QueryPipeline&) @ 0xd6824c2 in /usr/lib/debug/usr/bin/clickhouse\r\n13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:224: DB::InterpreterSelectQuery::executeWithProcessors() @ 0xd6464fd in /usr/lib/debug/usr/bin/clickhouse\r\n14. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:256: DB::InterpreterSelectWithUnionQuery::executeWithProcessors() @ 0xd817c75 in /usr/lib/debug/usr/bin/clickhouse\r\n15. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:341: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*, bool) @ 0xd956d94 in /usr/lib/debug/usr/bin/clickhouse\r\n16. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:588: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd95a735 in /usr/lib/debug/usr/bin/clickhouse\r\n17. /build/obj-x86_64-linux-gnu/../programs/server/TCPHandler.cpp:252: DB::TCPHandler::runImpl() @ 0x9256a98 in /usr/lib/debug/usr/bin/clickhouse\r\n18. /build/obj-x86_64-linux-gnu/../programs/server/TCPHandler.cpp:1244: DB::TCPHandler::run() @ 0x9257a70 in /usr/lib/debug/usr/bin/clickhouse\r\n19. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1057801b in /usr/lib/debug/usr/bin/clickhouse\r\n20. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: Poco::Net::TCPServerDispatcher::run() @ 0x105784ab in /usr/lib/debug/usr/bin/clickhouse\r\n21. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/Mutex_POSIX.h:59: Poco::PooledThread::run() @ 0x106f6fd6 in /usr/lib/debug/usr/bin/clickhouse\r\n22. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/AutoPtr.h:223: Poco::ThreadImpl::runnableEntry(void*) @ 0x106f23d0 in /usr/lib/debug/usr/bin/clickhouse\r\n23. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n24. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n\r\nException in ThreadPool(max_threads: 1, max_free_threads: 1, queue_size: 1, shutdown_on_exception: 1).: Code: 171, e.displayText() = DB::Exception: Received from localhost:9000. DB::Exception: Cannot convert column `now64()` because it is constant but values of constants are different in source and result. Stack trace:\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1065a1f0 in /usr/lib/debug/usr/bin/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:32: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x914dd3d in /usr/lib/debug/usr/bin/clickhouse\r\n2. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/string:2134: DB::ConvertingTransform::ConvertingTransform(DB::Block, DB::Block, DB::ConvertingTransform::MatchColumnsMode) (.cold) @ 0xe0f1a6b in /usr/lib/debug/usr/bin/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2214: std::__1::__function::__func<DB::ClusterProxy::(anonymous namespace)::createLocalStream(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, DB::Context const&, DB::QueryProcessingStage::Enum, bool, bool, bool)::'lambda'(DB::Block const&), std::__1::allocator<DB::ClusterProxy::(anonymous namespace)::createLocalStream(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, DB::Context const&, DB::QueryProcessingStage::Enum, bool, bool, bool)::'lambda'(DB::Block const&)>, std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)>::operator()(DB::Block const&) @ 0xda854f2 in /usr/lib/debug/usr/bin/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3821: void DB::QueryPipeline::addSimpleTransformImpl<std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> >(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&)::'lambda'(DB::OutputPort*&, DB::QueryPipeline::StreamType, unsigned long)::operator()(DB::OutputPort*&, DB::QueryPipeline::StreamType, unsigned long) const @ 0xdf1ea77 in /usr/lib/debug/usr/bin/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:656: void DB::QueryPipeline::addSimpleTransformImpl<std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> >(std::__1::function<std::__1::shared_ptr<DB::IProcessor> (DB::Block const&)> const&) @ 0xdf1f221 in /usr/lib/debug/usr/bin/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:103: DB::ClusterProxy::(anonymous namespace)::createLocalStream(std::__1::shared_ptr<DB::IAST> const&, DB::Block const&, DB::Context const&, DB::QueryProcessingStage::Enum, bool, bool, bool) @ 0xda86529 in /usr/lib/debug/usr/bin/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1681: DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::Throttler> const&, DB::SelectQueryInfo const&, std::__1::vector<DB::Pipe, std::__1::allocator<DB::Pipe> >&)::'lambda'()::operator()() const @ 0xda86707 in /usr/lib/debug/usr/bin/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/SelectStreamFactory.cpp:212: DB::ClusterProxy::SelectStreamFactory::createForShard(DB::Cluster::ShardInfo const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, std::__1::shared_ptr<DB::Throttler> const&, DB::SelectQueryInfo const&, std::__1::vector<DB::Pipe, std::__1::allocator<DB::Pipe> >&) @ 0xda878cd in /usr/lib/debug/usr/bin/clickhouse\r\n9. /build/obj-x86_64-linux-gnu/../src/Interpreters/ClusterProxy/executeQuery.cpp:71: DB::ClusterProxy::executeQuery(DB::ClusterProxy::IStreamFactory&, std::__1::shared_ptr<DB::Cluster> const&, std::__1::shared_ptr<DB::IAST> const&, DB::Context const&, DB::Settings const&, DB::SelectQueryInfo const&) @ 0xda8e678 in /usr/lib/debug/usr/bin/clickhouse\r\n10. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/__tree:1085: DB::StorageDistributed::read(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) @ 0xda78a50 in /usr/lib/debug/usr/bin/clickhouse\r\n11. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1383: void DB::InterpreterSelectQuery::executeFetchColumns<DB::QueryPipeline>(DB::QueryProcessingStage::Enum, DB::QueryPipeline&, std::__1::shared_ptr<DB::PrewhereInfo> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, DB::QueryPipeline&) @ 0xd67ed2b in /usr/lib/debug/usr/bin/clickhouse\r\n12. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectQuery.cpp:788: void DB::InterpreterSelectQuery::executeImpl<DB::QueryPipeline>(DB::QueryPipeline&, std::__1::shared_ptr<DB::IBlockInputStream> const&, std::__1::optional<DB::Pipe>, DB::QueryPipeline&) @ 0xd6824c2 in /usr/lib/debug/usr/bin/clickhouse\r\n13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/optional:224: DB::InterpreterSelectQuery::executeWithProcessors() @ 0xd6464fd in /usr/lib/debug/usr/bin/clickhouse\r\n14. /build/obj-x86_64-linux-gnu/../src/Interpreters/InterpreterSelectWithUnionQuery.cpp:256: DB::InterpreterSelectWithUnionQuery::executeWithProcessors() @ 0xd817c75 in /usr/lib/debug/usr/bin/clickhouse\r\n15. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:341: DB::executeQueryImpl(char const*, char const*, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, DB::ReadBuffer*, bool) @ 0xd956d94 in /usr/lib/debug/usr/bin/clickhouse\r\n16. /build/obj-x86_64-linux-gnu/../src/Interpreters/executeQuery.cpp:588: DB::executeQuery(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) @ 0xd95a735 in /usr/lib/debug/usr/bin/clickhouse\r\n17. /build/obj-x86_64-linux-gnu/../programs/server/TCPHandler.cpp:252: DB::TCPHandler::runImpl() @ 0x9256a98 in /usr/lib/debug/usr/bin/clickhouse\r\n18. /build/obj-x86_64-linux-gnu/../programs/server/TCPHandler.cpp:1244: DB::TCPHandler::run() @ 0x9257a70 in /usr/lib/debug/usr/bin/clickhouse\r\n19. /build/obj-x86_64-linux-gnu/../contrib/poco/Net/src/TCPServerConnection.cpp:57: Poco::Net::TCPServerConnection::start() @ 0x1057801b in /usr/lib/debug/usr/bin/clickhouse\r\n20. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: Poco::Net::TCPServerDispatcher::run() @ 0x105784ab in /usr/lib/debug/usr/bin/clickhouse\r\n21. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/Mutex_POSIX.h:59: Poco::PooledThread::run() @ 0x106f6fd6 in /usr/lib/debug/usr/bin/clickhouse\r\n22. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/include/Poco/AutoPtr.h:223: Poco::ThreadImpl::runnableEntry(void*) @ 0x106f23d0 in /usr/lib/debug/usr/bin/clickhouse\r\n23. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n24. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n, Stack trace (when copying this message, always include the lines below):\r\n\r\n0. /build/obj-x86_64-linux-gnu/../contrib/poco/Foundation/src/Exception.cpp:27: Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x1065a1f0 in /usr/lib/debug/usr/bin/clickhouse\r\n1. /build/obj-x86_64-linux-gnu/../src/Common/Exception.cpp:32: DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x914dd3d in /usr/lib/debug/usr/bin/clickhouse\r\n2. /build/obj-x86_64-linux-gnu/../src/IO/WriteBufferFromVector.h:70: DB::readException(DB::ReadBuffer&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) @ 0x9186d89 in /usr/lib/debug/usr/bin/clickhouse\r\n3. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:3028: DB::Connection::receiveException() @ 0xdea92df in /usr/lib/debug/usr/bin/clickhouse\r\n4. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2608: DB::Connection::receivePacket() @ 0xdeaf295 in /usr/lib/debug/usr/bin/clickhouse\r\n5. /build/obj-x86_64-linux-gnu/../src/Client/MultiplexedConnections.cpp:253: DB::MultiplexedConnections::receivePacket() @ 0xdebfe9a in /usr/lib/debug/usr/bin/clickhouse\r\n6. /build/obj-x86_64-linux-gnu/../src/DataStreams/RemoteBlockInputStream.cpp:244: DB::RemoteBlockInputStream::readImpl() @ 0xd2697b4 in /usr/lib/debug/usr/bin/clickhouse\r\n7. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/vector:1003: DB::IBlockInputStream::read() @ 0xd2466dd in /usr/lib/debug/usr/bin/clickhouse\r\n8. /build/obj-x86_64-linux-gnu/../programs/benchmark/Benchmark.cpp:380: DB::Benchmark::execute(std::__1::vector<std::__1::shared_ptr<PoolBase<DB::Connection>::Entry>, std::__1::allocator<std::__1::shared_ptr<PoolBase<DB::Connection>::Entry> > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, unsigned long) @ 0x92e2713 in /usr/lib/debug/usr/bin/clickhouse\r\n9. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:840: DB::Benchmark::thread(std::__1::vector<std::__1::shared_ptr<PoolBase<DB::Connection>::Entry>, std::__1::allocator<std::__1::shared_ptr<PoolBase<DB::Connection>::Entry> > >&) @ 0x92e3077 in /usr/lib/debug/usr/bin/clickhouse\r\n10. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x91765eb in /usr/lib/debug/usr/bin/clickhouse\r\n11. /build/obj-x86_64-linux-gnu/../src/Common/ThreadPool.h:159: ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() const @ 0x91773ba in /usr/lib/debug/usr/bin/clickhouse\r\n12. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/atomic:856: ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x91754ab in /usr/lib/debug/usr/bin/clickhouse\r\n13. /build/obj-x86_64-linux-gnu/../contrib/libcxx/include/memory:2615: void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void ThreadPoolImpl<std::__1::thread>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()> >(void*) @ 0x9173993 in /usr/lib/debug/usr/bin/clickhouse\r\n14. start_thread @ 0x76db in /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n15. /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97: __clone @ 0x12188f in /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so\r\n (version 20.5.1.3327 (official build))\r\n```\r\n\r\nReincarnation of \r\nhttps://github.com/ClickHouse/ClickHouse/issues/6546\r\nhttps://github.com/ClickHouse/ClickHouse/issues/7100\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11326",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11326/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11326/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11326/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11326",
    "id": 628098894,
    "node_id": "MDU6SXNzdWU2MjgwOTg4OTQ=",
    "number": 11326,
    "title": "ck progress seems stuck ,table cann't merge and connected ,then a lot of close_wait",
    "user": {
      "login": "weiyongyuan",
      "id": 20318636,
      "node_id": "MDQ6VXNlcjIwMzE4NjM2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20318636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/weiyongyuan",
      "html_url": "https://github.com/weiyongyuan",
      "followers_url": "https://api.github.com/users/weiyongyuan/followers",
      "following_url": "https://api.github.com/users/weiyongyuan/following{/other_user}",
      "gists_url": "https://api.github.com/users/weiyongyuan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/weiyongyuan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/weiyongyuan/subscriptions",
      "organizations_url": "https://api.github.com/users/weiyongyuan/orgs",
      "repos_url": "https://api.github.com/users/weiyongyuan/repos",
      "events_url": "https://api.github.com/users/weiyongyuan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/weiyongyuan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-06-01T01:54:37Z",
    "updated_at": "2020-06-06T09:11:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nI have a cluster consited of one distribute node and 2 shards 4 replicas.\r\nI insert batch data into one os the replicas which is not leader at a speed about 80~130 million rows/second。abount 15 minutes later,the produce data progress can't insert data successfully,the error log shows too many parts because this replica doesn't merge data.At the same time ,this shard's leader replica merge data successfully.This replica'progress is alive but it seems struck. And  the clickhouse_client can't login in and the distribute query to the replica will be timeout and this replica has too many close_wait connections,\r\n**How to reproduce**\r\nIt's hard to reproduce.I only meet several times in the past half year.You can test to insert into one of the replica at a very high speed.\r\n* Which ClickHouse server version to use\r\n20.1.6.30\r\n\r\n**Expected behavior**\r\nThe  insert and merge of replica should work normally!\r\n\r\n**Error message and/or stacktrace**\r\nThese are the screenshots i capture then. \r\n1.the picture shows the too many parts error:\r\n![image](https://user-images.githubusercontent.com/20318636/83368560-d6867700-a3eb-11ea-89dd-c5cf6472d7ae.png)\r\n2.this picture shows the replicas's every partition's active parts count:\r\n![image](https://user-images.githubusercontent.com/20318636/83368675-4137b280-a3ec-11ea-929d-46d32e855695.png)\r\n3.this picture shows the connections status:\r\n![image](https://user-images.githubusercontent.com/20318636/83369105-c079b600-a3ed-11ea-969d-73740796b14d.png)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11309/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11309",
    "id": 627755181,
    "node_id": "MDU6SXNzdWU2Mjc3NTUxODE=",
    "number": 11309,
    "title": "OPTIMIZE with FINAL should wait for already running merges.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1955634273,
        "node_id": "MDU6TGFiZWwxOTU1NjM0Mjcz",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bugfest",
        "name": "bugfest",
        "color": "c9a224",
        "default": false,
        "description": "Special issue with list of bugs found by CI"
      },
      {
        "id": 521113272,
        "node_id": "MDU6TGFiZWw1MjExMTMyNzI=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/build",
        "name": "build",
        "color": "d93f0b",
        "default": false,
        "description": null
      },
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      },
      {
        "id": 2082312777,
        "node_id": "MDU6TGFiZWwyMDgyMzEyNzc3",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-almost-fixed",
        "name": "st-almost-fixed",
        "color": "e5b890",
        "default": false,
        "description": "Some fixes were applied but some still considered"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-30T15:17:56Z",
    "updated_at": "2020-06-02T13:41:06Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Otherwise it can just exit quickly and be effectively no-op.\r\nWe cannot reliably write tests with this behaviour."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11306",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11306/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11306/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11306/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11306",
    "id": 627681794,
    "node_id": "MDU6SXNzdWU2Mjc2ODE3OTQ=",
    "number": 11306,
    "title": "No metadata in ZooKeeper: table will be in readonly mode",
    "user": {
      "login": "biswajit-mandal",
      "id": 5495658,
      "node_id": "MDQ6VXNlcjU0OTU2NTg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5495658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/biswajit-mandal",
      "html_url": "https://github.com/biswajit-mandal",
      "followers_url": "https://api.github.com/users/biswajit-mandal/followers",
      "following_url": "https://api.github.com/users/biswajit-mandal/following{/other_user}",
      "gists_url": "https://api.github.com/users/biswajit-mandal/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/biswajit-mandal/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/biswajit-mandal/subscriptions",
      "organizations_url": "https://api.github.com/users/biswajit-mandal/orgs",
      "repos_url": "https://api.github.com/users/biswajit-mandal/repos",
      "events_url": "https://api.github.com/users/biswajit-mandal/events{/privacy}",
      "received_events_url": "https://api.github.com/users/biswajit-mandal/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 845271686,
        "node_id": "MDU6TGFiZWw4NDUyNzE2ODY=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/backward%20compatibility",
        "name": "backward compatibility",
        "color": "28af63",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-30T08:42:33Z",
    "updated_at": "2020-05-30T08:42:33Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "(you don't have to strictly follow this form)\r\n\r\n**Describe the issue**\r\nGetting \"No metadata in ZooKeeper: table will be in readonly mode\" on upgrade clickhouse version 18.* to 19.*\r\n\r\n**How to reproduce**\r\nWe had 18.* versioned clickhouse running, all were working fine. Then upgraded to 19.17.9, observing the issue\r\n**Error message and/or stacktrace**\r\n```\r\n2020.05.30 08:10:51.667919 [ 22 ] {} <Warning> db1.table1: No metadata in ZooKeeper: table will be in readonly mode.\r\n2020.05.30 08:10:51.668677 [ 23 ] {} <Warning> db1.table2: No metadata in ZooKeeper: table will be in readonly mode.\r\n\r\n\r\n2020.05.30 08:15:55.940738 [ 52 ] {87d036d9-35cf-44f7-861c-e38c1c6ed25f} <Error> executeQuery: Code: 999, e.displayText() = Coordination::Exception: No node, path: /clickhouse/tables/2/table3/log (version 19.17.9.60 (official build)) (from 10.87.98.136:42254) (in query: SELECT * FROM system.replicas), Stack trace:\r\n\r\n0. 0x55fadc3f5e90 StackTrace::StackTrace() /usr/bin/clickhouse\r\n1. 0x55fae00b2e80 Coordination::Exception::Exception(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int) /usr/bin/clickhouse\r\n2. 0x55fae00b3773 Coordination::Exception::Exception(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /usr/bin/clickhouse\r\n3. 0x55fadc23da4b ? /usr/bin/clickhouse\r\n4. 0x55fadfa2fb05 DB::StorageReplicatedMergeTree::getStatus(DB::StorageReplicatedMergeTree::Status&, bool) /usr/bin/clickhouse\r\n5. 0x55fadf5927b5 DB::StorageSystemReplicas::read(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, DB::SelectQueryInfo const&, DB::Context const&, DB::QueryProcessingStage::Enum, unsigned long, unsigned int) /usr/bin/clickhouse\r\n6. 0x55fadf7dd8cf void DB::InterpreterSelectQuery::executeFetchColumns<DB::InterpreterSelectQuery::Pipeline>(DB::QueryProcessingStage::Enum, DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::SortingInfo> const&, std::shared_ptr<DB::PrewhereInfo> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, DB::QueryPipeline&) /usr/bin/clickhouse\r\n7. 0x55fadf7e5167 void DB::InterpreterSelectQuery::executeImpl<DB::InterpreterSelectQuery::Pipeline>(DB::InterpreterSelectQuery::Pipeline&, std::shared_ptr<DB::IBlockInputStream> const&, DB::QueryPipeline&) /usr/bin/clickhouse\r\n8. 0x55fadf7c677c DB::InterpreterSelectQuery::executeWithMultipleStreams(DB::QueryPipeline&) /usr/bin/clickhouse\r\n9. 0x55fadf7e6e1f DB::InterpreterSelectWithUnionQuery::executeWithMultipleStreams(DB::QueryPipeline&) /usr/bin/clickhouse\r\n10. 0x55fadf7e8a55 DB::InterpreterSelectWithUnionQuery::execute() /usr/bin/clickhouse\r\n11. 0x55fadf8ebc4e ? /usr/bin/clickhouse\r\n12. 0x55fadf8ed09e DB::executeQuery(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, DB::Context&, bool, DB::QueryProcessingStage::Enum, bool, bool) /usr/bin/clickhouse\r\n13. 0x55fadc47f514 DB::TCPHandler::runImpl() /usr/bin/clickhouse\r\n14. 0x55fadc47ff5b DB::TCPHandler::run() /usr/bin/clickhouse\r\n15. 0x55fae03a3df0 Poco::Net::TCPServerConnection::start() /usr/bin/clickhouse\r\n16. 0x55fae03a450d Poco::Net::TCPServerDispatcher::run() /usr/bin/clickhouse\r\n17. 0x55fae1a7a6b1 Poco::PooledThread::run() /usr/bin/clickhouse\r\n18. 0x55fae1a7845c Poco::ThreadImpl::runnableEntry(void*) /usr/bin/clickhouse\r\n19. 0x55fae21ee5c0 ? /usr/bin/clickhouse\r\n20. 0x7faa91d3a6db start_thread /lib/x86_64-linux-gnu/libpthread-2.27.so\r\n21. 0x7faa9165788f clone /lib/x86_64-linux-gnu/libc-2.27.so\r\n```\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11305",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11305/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11305/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11305/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11305",
    "id": 627625257,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1Mzk1ODc2",
    "number": 11305,
    "title": "Improve performance of HTTP interface",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1309683578,
        "node_id": "MDU6TGFiZWwxMzA5NjgzNTc4",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-performance",
        "name": "pr-performance",
        "color": "007700",
        "default": false,
        "description": "Pull request with some performance improvements"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-30T01:44:13Z",
    "updated_at": "2020-06-15T06:01:21Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11305",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11305",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11305.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11305.patch"
    },
    "body": "Changelog category (leave one):\r\n- Performance Improvement\r\n\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nImprove performance of HTTP interface by avoiding excessive copying and avoiding too small IO operations.\r\n"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11298",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11298/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11298/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11298/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11298",
    "id": 627497318,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDI1MjkyNTAz",
    "number": 11298,
    "title": "Describe and test ClickHouse grammar using ANTLR4 format",
    "user": {
      "login": "abyss7",
      "id": 5627721,
      "node_id": "MDQ6VXNlcjU2Mjc3MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5627721?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abyss7",
      "html_url": "https://github.com/abyss7",
      "followers_url": "https://api.github.com/users/abyss7/followers",
      "following_url": "https://api.github.com/users/abyss7/following{/other_user}",
      "gists_url": "https://api.github.com/users/abyss7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abyss7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abyss7/subscriptions",
      "organizations_url": "https://api.github.com/users/abyss7/orgs",
      "repos_url": "https://api.github.com/users/abyss7/repos",
      "events_url": "https://api.github.com/users/abyss7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abyss7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304141686,
        "node_id": "MDU6TGFiZWwxMzA0MTQxNjg2",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/pr-improvement",
        "name": "pr-improvement",
        "color": "007700",
        "default": false,
        "description": "Pull request with some product improvements"
      },
      {
        "id": 2107435505,
        "node_id": "MDU6TGFiZWwyMTA3NDM1NTA1",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/submodule%20changed",
        "name": "submodule changed",
        "color": "b7130b",
        "default": false,
        "description": "At least one submodule changed in this PR."
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-29T19:40:03Z",
    "updated_at": "2020-06-16T20:08:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "pull_request": {
      "url": "https://api.github.com/repos/ClickHouse/ClickHouse/pulls/11298",
      "html_url": "https://github.com/ClickHouse/ClickHouse/pull/11298",
      "diff_url": "https://github.com/ClickHouse/ClickHouse/pull/11298.diff",
      "patch_url": "https://github.com/ClickHouse/ClickHouse/pull/11298.patch"
    },
    "body": "I hereby agree to the terms of the CLA available at: https://yandex.ru/legal/cla/?lang=en\r\n\r\nChangelog category (leave one):\r\n- Improvement\r\n\r\nChangelog entry (a user-readable short description of the changes that goes to CHANGELOG.md):\r\nTODO!"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11294",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11294/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11294/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11294/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11294",
    "id": 627414375,
    "node_id": "MDU6SXNzdWU2Mjc0MTQzNzU=",
    "number": 11294,
    "title": " Cannot read from granule more than index_granularity..",
    "user": {
      "login": "Tri0L",
      "id": 1208486,
      "node_id": "MDQ6VXNlcjEyMDg0ODY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1208486?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tri0L",
      "html_url": "https://github.com/Tri0L",
      "followers_url": "https://api.github.com/users/Tri0L/followers",
      "following_url": "https://api.github.com/users/Tri0L/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tri0L/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tri0L/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tri0L/subscriptions",
      "organizations_url": "https://api.github.com/users/Tri0L/orgs",
      "repos_url": "https://api.github.com/users/Tri0L/repos",
      "events_url": "https://api.github.com/users/Tri0L/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tri0L/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 386401505,
        "node_id": "MDU6TGFiZWwzODY0MDE1MDU=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/bug",
        "name": "bug",
        "color": "ee0701",
        "default": true,
        "description": null
      },
      {
        "id": 845267693,
        "node_id": "MDU6TGFiZWw4NDUyNjc2OTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/st-need-info",
        "name": "st-need-info",
        "color": "e5b890",
        "default": false,
        "description": "We need extra data to continue"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-29T17:10:25Z",
    "updated_at": "2020-06-01T08:38:47Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "ClickHouse version 20.1.2.4\r\n\r\n```\r\nset max_threads=1;\r\n\r\nSELECT field\r\nFROM tbl\r\nWHERE toDate(created) = toDate('2020-02-26')\r\nFORMAT Null\r\n\r\n↗ Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.) Received exception from server (version 20.1.2):\r\nCode: 49. DB::Exception: Received from clickhouse:9000. DB::Exception: Cannot read from granule more than index_granularity.. \r\n\r\n\r\nSELECT field\r\nFROM tbl\r\nWHERE toDate(created) = toDate('2020-02-28')\r\nFORMAT Null\r\n\r\n← Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.) Received exception from server (version 20.1.2):\r\nCode: 49. DB::Exception: Received from clickhouse:9000. DB::Exception: RangeReader read 53392 rows, but 59464 expected.. \r\n```\r\n\r\n```\r\n0. 0xbc31d9c Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)  in /usr/bin/clickhouse\r\n1. 0x4f6ccd9 DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)  in /usr/bin/clickhouse\r\n2. 0x4cb3387 ?  in /usr/bin/clickhouse\r\n3. 0x97a55ef DB::MergeTreeRangeReader::read(unsigned long, std::__1::vector<DB::MarkRange, std::__1::allocator<DB::MarkRange> >&)  in /usr/bin/clickhouse\r\n4. 0x9768166 DB::MergeTreeBaseSelectProcessor::readFromPartImpl()  in /usr/bin/clickhouse\r\n5. 0x9769963 DB::MergeTreeBaseSelectProcessor::generate()  in /usr/bin/clickhouse\r\n6. 0x91a4c27 DB::ISource::work()  in /usr/bin/clickhouse\r\n7. 0x91d6e24 DB::TreeExecutorBlockInputStream::execute()  in /usr/bin/clickhouse\r\n8. 0x91d7043 DB::TreeExecutorBlockInputStream::readImpl()  in /usr/bin/clickhouse\r\n9. 0x8a6d32f DB::IBlockInputStream::read()  in /usr/bin/clickhouse\r\n10. 0x949c168 DB::ExpressionBlockInputStream::readImpl()  in /usr/bin/clickhouse\r\n11. 0x8a6d32f DB::IBlockInputStream::read()  in /usr/bin/clickhouse\r\n12. 0x949c168 DB::ExpressionBlockInputStream::readImpl()  in /usr/bin/clickhouse\r\n13. 0x8a6d32f DB::IBlockInputStream::read()  in /usr/bin/clickhouse\r\n14. 0x8c2a73c DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::thread(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long)  in /usr/bin/clickhouse\r\n15. 0x8c2b4b5 ThreadFromGlobalPool::ThreadFromGlobalPool<void (DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::*)(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>*, std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long&>(void (DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>::*&&)(std::__1::shared_ptr<DB::ThreadGroupStatus>, unsigned long), DB::ParallelInputsProcessor<DB::UnionBlockInputStream::Handler>*&&, std::__1::shared_ptr<DB::ThreadGroupStatus>&&, unsigned long&)::'lambda'()::operator()() const  in /usr/bin/clickhouse\r\n16. 0x4fa3b77 ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>)  in /usr/bin/clickhouse\r\n17. 0x4fa212f ?  in /usr/bin/clickhouse\r\n18. 0x76ba start_thread  in /lib/x86_64-linux-gnu/libpthread-2.23.so\r\n19. 0x10741d __clone  in /lib/x86_64-linux-gnu/libc-2.23.so\r\n```\r\nOnly if max_threads=1.\r\n\r\nI think problem depends on data. Maybe related to #8964 and #4959\r\nI have dump parts of this table. Can't share it in public. \r\nCan send privately if needed to reproduce."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11292/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11292",
    "id": 627382486,
    "node_id": "MDU6SXNzdWU2MjczODI0ODY=",
    "number": 11292,
    "title": "Add separate max_memory_usage setting for distributed nodes ",
    "user": {
      "login": "qoega",
      "id": 2159081,
      "node_id": "MDQ6VXNlcjIxNTkwODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2159081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qoega",
      "html_url": "https://github.com/qoega",
      "followers_url": "https://api.github.com/users/qoega/followers",
      "following_url": "https://api.github.com/users/qoega/following{/other_user}",
      "gists_url": "https://api.github.com/users/qoega/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qoega/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qoega/subscriptions",
      "organizations_url": "https://api.github.com/users/qoega/orgs",
      "repos_url": "https://api.github.com/users/qoega/repos",
      "events_url": "https://api.github.com/users/qoega/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qoega/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-29T16:18:10Z",
    "updated_at": "2020-06-02T07:56:24Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Use case**\r\nSuppose we set max_memory_usage constraints on all nodes in cluster\r\nThere are several scenarios:\r\n1) Large initiator and lots of small distributed nodes. We can not set small to limit by max_memory_usage on distributed nodes as it will limit memory usage on large initiator.\r\n2) Small initiator and large distributed nodes. We can not set limit on distributed nodes larger than constraint on initiator.\r\n\r\n- We may want to limit memory usage on distributed nodes in per user manner but have common limit/constraint on initiator node. We can use this setting in initiator users config to set separate limits.\r\n\r\n\r\n**Describe the solution you'd like**\r\n- [ ] Add user setting named like `distributed_max_memory_usage`\r\n- [ ] Add min/max constraint for `distributed_max_memory_usage` in profile config\r\n- [ ] If distributed_max_memory_usage is not set use old logic: distributed_max_memory_usage= max_memory_usage.\r\n- [ ] If distributed_max_memory_usage is set, initiator max_memory_usage constraints are applied only on initiator node and `distributed_max_memory_usage` is sent to distributed nodes as max_memory_usage.\r\n- [ ] We have to choose if distributed_max_memory_usage is not set, in which scope initiator constraint is applied: currently it also limits the `max_memory_usage` sent to distributed nodes.\r\n\r\n**Additional context**\r\nIn cloud environment heterogeneous cluster is usually used, as it is easy to select size for different types of nodes.\r\nWe currently encounter problems during cluster update, when memory usage on initiator can be higher in transitional state and can't increase memory limit only on initiator."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11289",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11289/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11289/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11289/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11289",
    "id": 627287157,
    "node_id": "MDU6SXNzdWU2MjcyODcxNTc=",
    "number": 11289,
    "title": "Testing infrastructure: introduce a setting to print short query results to log.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-29T13:56:56Z",
    "updated_at": "2020-05-29T13:58:06Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "When this setting is enabled, a few first rows of every query result will be printed to server log.\r\nThis is intended for investigation of test runs."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11279",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11279/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11279/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11279/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11279",
    "id": 627069912,
    "node_id": "MDU6SXNzdWU2MjcwNjk5MTI=",
    "number": 11279,
    "title": "Part XXX was found on disk default which is not defined in the storage policy",
    "user": {
      "login": "zhlovy",
      "id": 19561572,
      "node_id": "MDQ6VXNlcjE5NTYxNTcy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/19561572?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhlovy",
      "html_url": "https://github.com/zhlovy",
      "followers_url": "https://api.github.com/users/zhlovy/followers",
      "following_url": "https://api.github.com/users/zhlovy/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhlovy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhlovy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhlovy/subscriptions",
      "organizations_url": "https://api.github.com/users/zhlovy/orgs",
      "repos_url": "https://api.github.com/users/zhlovy/repos",
      "events_url": "https://api.github.com/users/zhlovy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhlovy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1634815111,
        "node_id": "MDU6TGFiZWwxNjM0ODE1MTEx",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/comp-multidisk",
        "name": "comp-multidisk",
        "color": "b5bcff",
        "default": false,
        "description": "Storages & policies"
      },
      {
        "id": 386401510,
        "node_id": "MDU6TGFiZWwzODY0MDE1MTA=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/question",
        "name": "question",
        "color": "bfdadc",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-05-29T07:46:13Z",
    "updated_at": "2020-06-01T02:38:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "after i change the param:  SET max_memory_usage = 20000000000;(Restart it before I know it doesn't need to be restarted)   I restart the ck , but an exception happened :\r\n\r\n--------------------------------------------------------------------------------\r\n`<Error> ThreadPool: Exception in ThreadPool(max_threads: 32, max_free_threads: 32, queue_size: 32, shutdown_on_exception: 1).: Code: 479, e.displayText() = DB::Exception: Part `20200415_1566_2123_4` was found on disk `default` which is not defined in the storage policy: Cannot attach table `default`.`btrace` from metadata file /home/q/clickhouse/data/metadata/default/btrace.sql from query ATTACH TABLE btrace (`btraceId` String, `platOpenId` String,  `appName` String, `occTime` UInt64, `occTimeDt` DateTime, INDEX index_appName appName TYPE bloom_filter GRANULARITY 4) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{shard}/btrace', '{replica}') PARTITION BY toYYYYMMDD(occTimeDt) ORDER BY (occTime, platOpenId, appName, btraceId) TTL occTimeDt + toIntervalMonth(6) SETTINGS storage_policy = 'moving_from_ssd_to_hdd', index_granularity = 8192, Stack trace (when copying this message, always include the lines below):`\r\n--------------------------------------------------------------------------------\r\n\r\nmy ck is 20.3.4.10\r\n\r\nI move this part to detached is useless  ,it will report another part is same problem;\r\n\r\nIn order to restart the ck on this machine, I had to delete all the data so that the data was synchronized from another replica machine\r\nI don't want to do this every time when I restart the service\r\n\r\nCan someone please take a look, thanks   \r\n\r\n```\r\n<Error> ThreadPool: Exception in ThreadPool(max_threads: 32, max_free_threads: 32, queue_size: 32, shutdown_on_exception: 1).: Code: 479, e.displayText() = DB::Exception: Part `20200415_1566_2123_4` was found on disk `default` which is not defined in the storage policy: Cannot attach table `default`.`btrace` from metadata file /home/q/clickhouse/data/metadata/default/btrace.sql from query ATTACH TABLE btrace (`btraceId` String, `platOpenId` String,  `appName` String, `occTime` UInt64, `occTimeDt` DateTime, INDEX index_appName appName TYPE bloom_filter GRANULARITY 4) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{shard}/btrace', '{replica}') PARTITION BY toYYYYMMDD(occTimeDt) ORDER BY (occTime, platOpenId, appName, btraceId) TTL occTimeDt + toIntervalMonth(6) SETTINGS storage_policy = 'moving_from_ssd_to_hdd', index_granularity = 8192, Stack trace (when copying this message, always include the lines below):\r\n0. Poco::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x102e0d8c in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int) @ 0x8f2d989 in /usr/bin/clickhouse\r\n2. ? @ 0xd7647cd in /usr/bin/clickhouse\r\n3. DB::StorageReplicatedMergeTree::StorageReplicatedMergeTree(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, DB::StorageID const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::StorageInMemoryMetadata const&, DB::Context&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::MergeTreeData::MergingParams const&, std::__1::unique_ptr<DB::MergeTreeSettings, std::__1::default_delete<DB::MergeTreeSettings> >, bool) @ 0xd5d98a4 in /usr/bin/clickhouse\r\n4. ? @ 0xd9585da in /usr/bin/clickhouse\r\n5. std::__1::__function::__func<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&), std::__1::allocator<std::__1::shared_ptr<DB::IStorage> (*)(DB::StorageFactory::Arguments const&)>, std::__1::shared_ptr<DB::IStorage> (DB::StorageFactory::Arguments const&)>::operator()(DB::StorageFactory::Arguments const&) @ 0xd95baf3 in /usr/bin/clickhouse\r\n6. DB::StorageFactory::get(DB::ASTCreateQuery const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, DB::Context&, DB::ColumnsDescription const&, DB::ConstraintsDescription const&, bool) const @ 0xd4fc66c in /usr/bin/clickhouse\r\n7. DB::createTableFromAST(DB::ASTCreateQuery, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, DB::Context&, bool) @ 0xcedc88e in /usr/bin/clickhouse\r\n8. ? @ 0xced33bf in /usr/bin/clickhouse\r\n9. ? @ 0xced3b71 in /usr/bin/clickhouse\r\n10. ThreadPoolImpl<ThreadFromGlobalPool>::worker(std::__1::__list_iterator<ThreadFromGlobalPool, void*>) @ 0x8f51c4b in /usr/bin/clickhouse\r\n11. ThreadFromGlobalPool::ThreadFromGlobalPool<void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()>(void&&, void ThreadPoolImpl<ThreadFromGlobalPool>::scheduleImpl<void>(std::__1::function<void ()>, int, std::__1::optional<unsigned long>)::'lambda1'()&&...)::'lambda'()::operator()() const @ 0x8f528c4 in /usr/bin/clickhouse\r\n12. ThreadPoolImpl<std::__1::thread>::worker(std::__1::__list_iterator<std::__1::thread, void*>) @ 0x8f50b4b in /usr/bin/clickhouse\r\n13. ? @ 0x8f4f00f in /usr/bin/clickhouse\r\n14. start_thread @ 0x7dd5 in /usr/lib64/libpthread-2.17.so\r\n15. clone @ 0xfdead in /usr/lib64/libc-2.17.so\r\n (version 20.3.4.10 (official build))\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11271",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11271/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11271/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11271/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11271",
    "id": 626883952,
    "node_id": "MDU6SXNzdWU2MjY4ODM5NTI=",
    "number": 11271,
    "title": "Query normalization and hashing functions.",
    "user": {
      "login": "alexey-milovidov",
      "id": 18581488,
      "node_id": "MDQ6VXNlcjE4NTgxNDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18581488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexey-milovidov",
      "html_url": "https://github.com/alexey-milovidov",
      "followers_url": "https://api.github.com/users/alexey-milovidov/followers",
      "following_url": "https://api.github.com/users/alexey-milovidov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexey-milovidov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexey-milovidov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexey-milovidov/subscriptions",
      "organizations_url": "https://api.github.com/users/alexey-milovidov/orgs",
      "repos_url": "https://api.github.com/users/alexey-milovidov/repos",
      "events_url": "https://api.github.com/users/alexey-milovidov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexey-milovidov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2020-05-28T23:25:23Z",
    "updated_at": "2020-05-28T23:30:40Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Provide a function to replace literals and lists of literals in SQL query to question marks.\r\nProvide a function to calculate a hash of query structure without the values of literals.\r\n\r\nExample:\r\n`SELECT count(*) FROM table WHERE date = '2020-01-02' AND id IN (1, 2, 3) LIMIT 10, 10`\r\nshould be replaced to\r\n`SELECT count(*) FROM table WHERE date = ? AND id IN (?) LIMIT ?`\r\n\r\nThe function should be database agnostic: it should work for ClickHouse queries as well as MySQL queries.\r\n\r\nWhy do we need this feature.\r\n1. We will extract all unique queries from our production machines for testing.\r\n2. These functions will be useful for various monitoring and performance tools*.\r\n\r\n\\* ClickHouse is already used as main database in multiple popular tools to analyze performance of SQL queries in MySQL, Postgres."
  },
  {
    "url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11257",
    "repository_url": "https://api.github.com/repos/ClickHouse/ClickHouse",
    "labels_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11257/labels{/name}",
    "comments_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11257/comments",
    "events_url": "https://api.github.com/repos/ClickHouse/ClickHouse/issues/11257/events",
    "html_url": "https://github.com/ClickHouse/ClickHouse/issues/11257",
    "id": 626584955,
    "node_id": "MDU6SXNzdWU2MjY1ODQ5NTU=",
    "number": 11257,
    "title": "SelectedRows system event",
    "user": {
      "login": "Alex-Burmak",
      "id": 24879310,
      "node_id": "MDQ6VXNlcjI0ODc5MzEw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/24879310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Alex-Burmak",
      "html_url": "https://github.com/Alex-Burmak",
      "followers_url": "https://api.github.com/users/Alex-Burmak/followers",
      "following_url": "https://api.github.com/users/Alex-Burmak/following{/other_user}",
      "gists_url": "https://api.github.com/users/Alex-Burmak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Alex-Burmak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Alex-Burmak/subscriptions",
      "organizations_url": "https://api.github.com/users/Alex-Burmak/orgs",
      "repos_url": "https://api.github.com/users/Alex-Burmak/repos",
      "events_url": "https://api.github.com/users/Alex-Burmak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Alex-Burmak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 520905553,
        "node_id": "MDU6TGFiZWw1MjA5MDU1NTM=",
        "url": "https://api.github.com/repos/ClickHouse/ClickHouse/labels/feature",
        "name": "feature",
        "color": "1d76db",
        "default": false,
        "description": null
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-05-28T15:02:51Z",
    "updated_at": "2020-05-28T15:02:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "There are `InsertedRows` and `MergedRows` metrics in `system.events`, but there is no corresponding metric for selected data. There are only `SelectedParts`, `SelectedRanges` and `SelectedMarks`.\r\n\r\n```\r\nSELECT *\r\nFROM system.events\r\nWHERE event LIKE 'Selected%'\r\n\r\n┌─event──────────┬──────value─┬─description────────────────────────────────────────────────────────────────────────────────┐\r\n│ SelectedParts  │   74874459 │ Number of data parts selected to read from a MergeTree table.                              │\r\n│ SelectedRanges │  573527340 │ Number of (non-adjacent) ranges in all data parts selected to read from a MergeTree table. │\r\n│ SelectedMarks  │ 2182702372 │ Number of marks (index granules) selected to read from a MergeTree table.                  │\r\n└────────────────┴────────────┴────────────────────────────────────────────────────────────────────────────────────────────┘\r\n```\r\n\r\n```\r\nSELECT *\r\nFROM system.events\r\nWHERE event LIKE '%Rows'\r\n\r\n┌─event───────────────────┬────────value─┬─description───────────────────────────────────────────────────────────────┐\r\n│ InsertedRows            │  43105061276 │ Number of rows INSERTed to all tables.                                    │\r\n│ MergedRows              │ 337131000762 │ Rows read for background merges. This is the number of rows before merge. │\r\n│ MergeTreeDataWriterRows │  43104459439 │ Number of rows INSERTed to MergeTree tables.                              │\r\n└─────────────────────────┴──────────────┴───────────────────────────────────────────────────────────────────────────┘\r\n```"
  }
]
